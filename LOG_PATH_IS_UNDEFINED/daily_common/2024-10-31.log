2024-10-31 09:23:45 [INFO ] com.example.demo.Demo1Application - Starting Demo1Application using Java 17.0.3 with PID 8592 (C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes started by HR Jo in C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1)
2024-10-31 09:23:45 [DEBUG] com.example.demo.Demo1Application - Running with Spring Boot v3.2.9, Spring v6.1.12
2024-10-31 09:23:45 [INFO ] com.example.demo.Demo1Application - No active profile set, falling back to 1 default profile: "default"
2024-10-31 09:23:45 [DEBUG] o.s.boot.SpringApplication - Loading source class com.example.demo.Demo1Application
2024-10-31 09:23:45 [DEBUG] o.s.b.d.restart.ChangeableUrls - Matching URLs for reloading : [file:/C:/work_jhr/sts-4.24.0.RELEASE-workspace/demo-1/target/classes/]
2024-10-31 09:23:45 [DEBUG] o.s.b.d.settings.DevToolsSettings - Included patterns for restart : []
2024-10-31 09:23:45 [DEBUG] o.s.b.d.settings.DevToolsSettings - Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
2024-10-31 09:23:45 [INFO ] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-10-31 09:23:45 [INFO ] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-10-31 09:23:45 [DEBUG] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335128f0
2024-10-31 09:23:45 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2024-10-31 09:23:45 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\controller\AdmMemberController.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\controller\GenFileController.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\controller\UserAjaxTestController.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\controller\UserAPITestController.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\controller\UserArticleController.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\controller\UserFaqController.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\controller\UserHomeController.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\controller\UserMemberController.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\controller\UserReactionPointController.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\controller\UserReplyController.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\interceptor\BeforeActionInterceptor.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\interceptor\NeedAdminInterceptor.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\interceptor\NeedLoginInterceptor.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\interceptor\NeedLogoutInterceptor.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\MyWebMVCConfigurer.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\service\ArticleService.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\service\BoardService.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\service\FaqService.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\service\GenFileService.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\service\MailService.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\service\MemberService.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\service\ReactionPointService.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\service\ReplyService.class]
2024-10-31 09:23:46 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\vo\Rq.class]
2024-10-31 09:23:46 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
2024-10-31 09:23:46 [DEBUG] o.s.b.a.AutoConfigurationPackages - @EnableAutoConfiguration was declared on a class in the package 'com.example.demo'. Automatic @Repository and @Entity scanning is enabled.
2024-10-31 09:23:46 [DEBUG] o.m.s.b.a.MybatisAutoConfiguration - Searching for mappers annotated with @Mapper
2024-10-31 09:23:46 [DEBUG] o.m.s.b.a.MybatisAutoConfiguration - Using auto-configuration base package 'com.example.demo'
2024-10-31 09:23:46 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer'
2024-10-31 09:23:46 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
2024-10-31 09:23:46 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\repository\ArticleRepository.class]
2024-10-31 09:23:46 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\repository\BoardRepository.class]
2024-10-31 09:23:46 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\repository\FaqRepository.class]
2024-10-31 09:23:46 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\repository\GenFileRepository.class]
2024-10-31 09:23:46 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\repository\MemberRepository.class]
2024-10-31 09:23:46 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\repository\ReactionPointRepository.class]
2024-10-31 09:23:46 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\repository\ReplyRepository.class]
2024-10-31 09:23:46 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'articleRepository' and 'com.example.demo.repository.ArticleRepository' mapperInterface
2024-10-31 09:23:46 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'boardRepository' and 'com.example.demo.repository.BoardRepository' mapperInterface
2024-10-31 09:23:46 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'faqRepository' and 'com.example.demo.repository.FaqRepository' mapperInterface
2024-10-31 09:23:46 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'genFileRepository' and 'com.example.demo.repository.GenFileRepository' mapperInterface
2024-10-31 09:23:46 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'memberRepository' and 'com.example.demo.repository.MemberRepository' mapperInterface
2024-10-31 09:23:46 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'reactionPointRepository' and 'com.example.demo.repository.ReactionPointRepository' mapperInterface
2024-10-31 09:23:46 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'replyRepository' and 'com.example.demo.repository.ReplyRepository' mapperInterface
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'forceAutoProxyCreatorToUseClassProxying'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jdbcConnectionDetailsHikariBeanPostProcessor'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
2024-10-31 09:23:47 [DEBUG] o.s.u.c.s.UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@6ca2ea62]
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionAttributeSource'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionInterceptor'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sslBundleRegistry'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration' via constructor to bean named 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sslPropertiesSslBundleRegistrar'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'fileWatcher'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'sslPropertiesSslBundleRegistrar' via factory method to bean named 'fileWatcher'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorPageCustomizer'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServletRegistration'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServlet'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'multipartConfigElement'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
2024-10-31 09:23:47 [DEBUG] o.s.b.w.e.t.TomcatServletWebServerFactory - Code archive: C:\Users\HR Jo\.m2\repository\org\springframework\boot\spring-boot\3.2.9\spring-boot-3.2.9.jar
2024-10-31 09:23:47 [DEBUG] o.s.b.w.e.t.TomcatServletWebServerFactory - Code archive: C:\Users\HR Jo\.m2\repository\org\springframework\boot\spring-boot\3.2.9\spring-boot-3.2.9.jar
2024-10-31 09:23:47 [DEBUG] o.s.b.w.e.t.TomcatServletWebServerFactory - Document root: C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\src\main\webapp
2024-10-31 09:23:47 [INFO ] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-31 09:23:47 [INFO ] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-31 09:23:47 [INFO ] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-31 09:23:47 [INFO ] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2024-10-31 09:23:47 [INFO ] o.apache.jasper.servlet.TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2024-10-31 09:23:47 [INFO ] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-31 09:23:47 [DEBUG] o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-10-31 09:23:47 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1913 ms
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestContextFilter'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'formContentFilter'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'characterEncodingFilter'
2024-10-31 09:23:47 [DEBUG] o.s.b.w.s.ServletContextInitializerBeans - Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-10-31 09:23:47 [DEBUG] o.s.b.w.s.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/]
2024-10-31 09:23:47 [DEBUG] o.s.b.w.s.f.OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use
2024-10-31 09:23:47 [DEBUG] o.s.b.w.s.f.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2024-10-31 09:23:47 [DEBUG] o.s.b.w.s.f.OrderedFormContentFilter - Filter 'formContentFilter' configured for use
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'demo1Application'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'admMemberController'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'memberService'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'memberRepository'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataSource'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jdbcConnectionDetails'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jdbcConnectionDetails' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dataSource' via factory method to bean named 'jdbcConnectionDetails'
2024-10-31 09:23:47 [DEBUG] com.zaxxer.hikari.HikariConfig - Driver class net.sf.log4jdbc.sql.jdbcapi.DriverSpy found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1f99b11c
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - log4jdbc-logj2 properties initialization...
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - Using logger: net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - x log4jdbc.debug.stack.prefix is not defined
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - x log4jdbc.sqltiming.warn.threshold is not defined
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - x log4jdbc.sqltiming.error.threshold is not defined
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - x log4jdbc.dump.booleanastruefalse is not defined (using default value false)
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug -   log4jdbc.dump.sql.maxlinelength = 0
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - x log4jdbc.dump.fulldebugstacktrace is not defined (using default value false)
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - x log4jdbc.statement.warn is not defined (using default value false)
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - x log4jdbc.dump.sql.select is not defined (using default value true)
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - x log4jdbc.dump.sql.insert is not defined (using default value true)
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - x log4jdbc.dump.sql.update is not defined (using default value true)
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - x log4jdbc.dump.sql.delete is not defined (using default value true)
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - x log4jdbc.dump.sql.create is not defined (using default value true)
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - x log4jdbc.dump.sql.addsemicolon is not defined (using default value false)
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - x log4jdbc.auto.load.popular.drivers is not defined (using default value true)
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - x log4jdbc.drivers is not defined
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - x log4jdbc.trim.sql is not defined (using default value true)
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - x log4jdbc.trim.sql.extrablanklines is not defined (using default value true)
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - x log4jdbc.suppress.generated.keys.exception is not defined (using default value false)
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - log4jdbc-logj2 properties initialization done.
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - DriverSpy intialization...
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug -   FOUND DRIVER com.mysql.jdbc.Driver
2024-10-31 09:23:47 [DEBUG] log4jdbc.debug - DriverSpy intialization done.
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sqlSessionTemplate'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335128f0'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sqlSessionFactory'
2024-10-31 09:23:47 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
2024-10-31 09:23:48 [DEBUG] o.m.spring.SqlSessionFactoryBean - Property 'mapperLocations' was not specified.
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'memberService' via constructor to bean named 'memberRepository'
2024-10-31 09:23:48 [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'custom.siteMainUri' in PropertySource 'Config resource 'class path resource [application.yml]' via location 'optional:classpath:/'' with value of type String
2024-10-31 09:23:48 [DEBUG] o.s.c.e.PropertySourcesPropertyResolver - Found key 'custom.siteMainUri' in PropertySource 'environmentProperties' with value of type String
2024-10-31 09:23:48 [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'custom.siteName' in PropertySource 'Config resource 'class path resource [application.yml]' via location 'optional:classpath:/'' with value of type String
2024-10-31 09:23:48 [DEBUG] o.s.c.e.PropertySourcesPropertyResolver - Found key 'custom.siteName' in PropertySource 'environmentProperties' with value of type String
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mailService'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mailSender'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.mail-org.springframework.boot.autoconfigure.mail.MailProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mailSender' via factory method to bean named 'spring.mail-org.springframework.boot.autoconfigure.mail.MailProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'custom.emailFrom' in PropertySource 'Config resource 'class path resource [application.yml]' via location 'optional:classpath:/'' with value of type String
2024-10-31 09:23:48 [DEBUG] o.s.c.e.PropertySourcesPropertyResolver - Found key 'custom.emailFrom' in PropertySource 'environmentProperties' with value of type String
2024-10-31 09:23:48 [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'custom.emailFromName' in PropertySource 'Config resource 'class path resource [application.yml]' via location 'optional:classpath:/'' with value of type String
2024-10-31 09:23:48 [DEBUG] o.s.c.e.PropertySourcesPropertyResolver - Found key 'custom.emailFromName' in PropertySource 'environmentProperties' with value of type String
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'rq'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'genFileController'
2024-10-31 09:23:48 [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'custom.genFileDirPath' in PropertySource 'Config resource 'class path resource [application.yml]' via location 'optional:classpath:/'' with value of type String
2024-10-31 09:23:48 [DEBUG] o.s.c.e.PropertySourcesPropertyResolver - Found key 'custom.genFileDirPath' in PropertySource 'environmentProperties' with value of type String
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'genFileService'
2024-10-31 09:23:48 [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'custom.genFileDirPath' in PropertySource 'Config resource 'class path resource [application.yml]' via location 'optional:classpath:/'' with value of type String
2024-10-31 09:23:48 [DEBUG] o.s.c.e.PropertySourcesPropertyResolver - Found key 'custom.genFileDirPath' in PropertySource 'environmentProperties' with value of type String
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'genFileRepository'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userAjaxTestController'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userAPITestController'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userArticleController'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'articleService'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'articleRepository'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'articleService' via constructor to bean named 'articleRepository'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'boardService'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'boardRepository'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'boardService' via constructor to bean named 'boardRepository'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'reactionPointService'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'reactionPointRepository'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'reactionPointService' via constructor to bean named 'reactionPointRepository'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'replyService'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'replyRepository'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'replyService' via constructor to bean named 'replyRepository'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userFaqController'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'faqService'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'faqRepository'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'faqService' via constructor to bean named 'faqRepository'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userHomeController'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userMemberController'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userReactionPointController'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userReplyController'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beforeActionInterceptor'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'needAdminInterceptor'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'needLoginInterceptor'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'needLogoutInterceptor'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'myWebMVCConfigurer'
2024-10-31 09:23:48 [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'custom.genFileDirPath' in PropertySource 'Config resource 'class path resource [application.yml]' via location 'optional:classpath:/'' with value of type String
2024-10-31 09:23:48 [DEBUG] o.s.c.e.PropertySourcesPropertyResolver - Found key 'custom.genFileDirPath' in PropertySource 'environmentProperties' with value of type String
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'threadPoolTaskExecutorBuilder'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'threadPoolTaskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'taskExecutorBuilder'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration' via constructor to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleAsyncTaskExecutorBuilder'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'error'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beanNameViewResolver'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335128f0'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'conventionErrorViewResolver'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorAttributes'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'basicErrorController'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@639bb509'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@639bb509'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcConversionService'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335128f0'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'welcomePageNotAcceptableHandlerMapping'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335128f0'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'localeResolver'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'themeResolver'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'flashMapManager'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcValidator'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-10-31 09:23:48 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.e.d.c.AdmMemberController:
	{ [/adm/member/doDeleteMembers]}: doDeleteMembers(String,String)
	{ [/adm/member/list]}: showList(Model,String,String,String,int)
	{ [/adm/member/doLogout]}: doLogout(String)
2024-10-31 09:23:48 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.e.d.c.GenFileController:
	{GET [/common/genFile/doDownload]}: downloadFile(int,HttpServletRequest)
	{ [/common/genFile/doUpload]}: doUpload(Map,MultipartRequest)
	{GET [/common/genFile/file/{relTypeCode}/{relId}/{typeCode}/{type2Code}/{fileNo}]}: showFile(HttpServletRequest,String,int,String,String,int)
2024-10-31 09:23:48 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.e.d.c.UserAjaxTestController:
	{ [/usr/home/plus]}: showTestPage()
	{ [/usr/home/doPlusJson]}: doPlusJson(int,int)
	{ [/usr/home/doPlus]}: doPlus(int,int)
2024-10-31 09:23:48 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.e.d.c.UserAPITestController:
	{ [/usr/home/APITest2]}: showAPITest2()
	{ [/usr/home/APITest]}: showAPITest()
2024-10-31 09:23:48 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.e.d.c.UserArticleController:
	{ [/usr/article/list]}: showList(HttpServletRequest,Model,int,int,String,String)
	{ [/usr/article/doWrite]}: doWrite(HttpServletRequest,String,String,String,String,MultipartRequest)
	{ [/usr/article/write]}: showWrite(Model)
	{ [/usr/article/modify]}: showModify(HttpServletRequest,Model,int)
	{ [/usr/article/getArticle]}: getArticle(int)
	{ [/usr/article/detail]}: showDetail(HttpServletRequest,Model,int)
	{ [/usr/article/doModify]}: doModify(HttpServletRequest,int,String,String)
	{ [/usr/article/doIncreaseHitCountRd]}: doIncreaseHitCount(int)
	{ [/usr/article/doDelete]}: doDelete(HttpServletRequest,int)
2024-10-31 09:23:48 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.e.d.c.UserFaqController:
	{ [/usr/faq/list]}: showFaqList(HttpServletRequest,Model,int,int,String,String)
	{ [/usr/faq/detail], produces [text/html;charset=UTF-8]}: showFaqDetail(int)
2024-10-31 09:23:48 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.e.d.c.UserHomeController:
	{ [/usr/home/main]}: showMain()
	{ [/]}: showRoot()
	{ [/usr/crawl]}: doCrawl()
2024-10-31 09:23:48 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.e.d.c.UserMemberController:
	{ [/usr/member/getLoginIdDup]}: getLoginIdDup(String)
	{ [/usr/member/findLoginId]}: showFindLoginId()
	{ [/usr/member/doFindLoginId]}: doFindLoginId(String,String,String)
	{ [/usr/member/findLoginPw]}: showFindLoginPw()
	{ [/usr/member/doFindLoginPw]}: doFindLoginPw(String,String,String)
	{ [/usr/member/login]}: showLogin(HttpServletRequest)
	{ [/usr/member/myPage]}: showmyPage()
	{ [/usr/member/doCheckPw]}: doCheckPw(String)
	{ [/usr/member/checkPw]}: showCheckPw()
	{ [/usr/member/modify]}: showmyModify()
	{ [/usr/member/doLogout]}: doLogout(HttpServletRequest)
	{ [/usr/member/doModify]}: doModify(HttpServletRequest,String,String,String,String,String)
	{ [/usr/member/join]}: showJoin(HttpServletRequest)
	{ [/usr/member/doJoin]}: doJoin(HttpServletRequest,String,String,String,String,String,String)
	{ [/usr/member/doLogin]}: doLogin(HttpServletRequest,String,String,String)
2024-10-31 09:23:48 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.e.d.c.UserReactionPointController:
	{ [/usr/reactionPoint/doBadReaction]}: doBadReaction(String,int,String)
	{ [/usr/reactionPoint/doGoodReaction]}: doGoodReaction(String,int,String)
2024-10-31 09:23:48 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.e.d.c.UserReplyController:
	{ [/usr/reply/doWrite]}: doWrite(HttpServletRequest,String,int,String)
	{ [/usr/reply/doModify]}: doModify(HttpServletRequest,int,String)
2024-10-31 09:23:48 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcPatternParser'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcUrlPathHelper'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcPathMatcher'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beanNameHandlerMapping'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-10-31 09:23:48 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'routerFunctionMapping'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'messageConverters'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'stringHttpMessageConverter'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jacksonObjectMapper'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'parameterNamesModule'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jsonMixinModule'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jsonMixinModuleEntries'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jsonMixinModuleEntries' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335128f0'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335128f0'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'jsonMixinModuleEntries'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jsonComponentModule'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335128f0'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'resourceHandlerMapping'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-10-31 09:23:48 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]], /gen/**=ResourceHttpRequestHandler [URL [file:/C:/work_jhr/sts-4.24.0.RELEASE-workspace/demo/images/]]}
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'applicationTaskExecutor'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
2024-10-31 09:23:48 [DEBUG] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'handlerFunctionAdapter'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'handlerExceptionResolver'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcViewResolver'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewNameTranslator'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultViewResolver'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewResolver'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@639bb509'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewResolver'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$MapperScannerRegistrarNotFoundConfiguration'
2024-10-31 09:23:48 [DEBUG] o.m.s.b.a.MybatisAutoConfiguration - Not found configuration for registering mapper bean using @MapperScan, MapperFactoryBean and MapperScannerConfigurer.
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' via constructor to bean named 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mbeanExporter'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'objectNamingStrategy'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@639bb509'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mbeanServer'
2024-10-31 09:23:48 [DEBUG] o.s.jmx.support.JmxUtils - Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@2471cca7
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
2024-10-31 09:23:48 [DEBUG] o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'applicationAvailability'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionExecutionListeners'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'lifecycleProcessor'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'gsonBuilder'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'gson'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jdbcTemplate'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jdbcClient'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jdbcClient' via factory method to bean named 'namedParameterJdbcTemplate'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'threadPoolTaskSchedulerBuilder'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'threadPoolTaskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'taskSchedulerBuilder'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration' via constructor to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleAsyncTaskSchedulerBuilder'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'environment'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionTemplate'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'httpMessageConvertersRestClientCustomizer'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'restClientSsl'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'restClientSsl' via factory method to bean named 'sslBundleRegistry'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'restClientBuilderConfigurer'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'multipartResolver'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'fileSystemWatcherFactory'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'classPathFileSystemWatcher'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'classPathRestartStrategy'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'optionalLiveReloadServer'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
2024-10-31 09:23:48 [DEBUG] o.s.b.d.livereload.LiveReloadServer - Starting live reload server on port 35729
2024-10-31 09:23:48 [INFO ] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'liveReloadServerEventListener'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
2024-10-31 09:23:48 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
2024-10-31 09:23:48 [DEBUG] o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2024-10-31 09:23:48 [DEBUG] o.s.j.e.a.AnnotationMBeanExporter - Auto-detecting user-defined JMX MBeans
2024-10-31 09:23:48 [DEBUG] o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2024-10-31 09:23:48 [DEBUG] o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2024-10-31 09:23:48 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase -2147483647
2024-10-31 09:23:48 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'springBootLoggingLifecycle'
2024-10-31 09:23:48 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147481599
2024-10-31 09:23:48 [INFO ] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-31 09:23:48 [INFO ] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-10-31 09:23:48 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'webServerStartStop'
2024-10-31 09:23:48 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147482623
2024-10-31 09:23:48 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'webServerGracefulShutdown'
2024-10-31 09:23:48 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147483647
2024-10-31 09:23:49 [DEBUG] o.s.b.a.l.ConditionEvaluationReportLogger - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration matched:
      - @ConditionalOnMissingClass did not find unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.sql.DataSource' (OnClassCondition)
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MailSenderAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.mail.internet.MimeMessage', 'jakarta.activation.MimeType', 'org.springframework.mail.MailSender' (OnClassCondition)
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.JndiNameProperty @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name'; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.HostProperty @ConditionalOnProperty (spring.mail.host) matched (MailSenderAutoConfiguration.MailSenderCondition)
      - @ConditionalOnMissingBean (types: org.springframework.mail.MailSender; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MailSenderPropertiesConfiguration matched:
      - @ConditionalOnProperty (spring.mail.host) matched (OnPropertyCondition)

   MailSenderPropertiesConfiguration#mailSender matched:
      - @ConditionalOnMissingBean (types: org.springframework.mail.javamail.JavaMailSender; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionFactory matched:
      - @ConditionalOnMissingBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionTemplate matched:
      - @ConditionalOnMissingBean (types: org.mybatis.spring.SqlSessionTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration matched:
      - @ConditionalOnMissingBean (types: org.mybatis.spring.mapper.MapperFactoryBean,org.mybatis.spring.mapper.MapperScannerConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisLanguageDriverAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.apache.ibatis.scripting.LanguageDriver' (OnClassCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.persistence.EntityManager' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderJndiConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'jakarta.mail.Session' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.FreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver', 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriverConfig' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyFreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyVelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.velocity.Driver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.ThymeleafConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.thymeleaf.ThymeleafLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.VelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.velocity.VelocityLanguageDriver', 'org.mybatis.scripting.velocity.VelocityLanguageDriverConfig' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SpringDataWebAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.web.PageableHandlerMethodArgumentResolver' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean did not find required type 'org.springframework.transaction.aspectj.AbstractTransactionAspect' (OnBeanCondition)
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-10-31 09:23:49 [INFO ] com.example.demo.Demo1Application - Started Demo1Application in 4.003 seconds (process running for 4.962)
2024-10-31 09:23:49 [DEBUG] o.s.b.a.ApplicationAvailabilityBean - Application availability state LivenessState changed to CORRECT
2024-10-31 09:23:49 [DEBUG] o.s.boot.devtools.restart.Restarter - Creating new Restarter for thread Thread[main,5,main]
2024-10-31 09:23:49 [DEBUG] o.s.boot.devtools.restart.Restarter - Immediately restarting application
2024-10-31 09:23:49 [DEBUG] o.s.boot.devtools.restart.Restarter - Starting application com.example.demo.Demo1Application with URLs [file:/C:/work_jhr/sts-4.24.0.RELEASE-workspace/demo-1/target/classes/]
2024-10-31 09:23:49 [DEBUG] o.s.b.a.ApplicationAvailabilityBean - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-10-31 09:24:06 [INFO ] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-31 09:24:06 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-31 09:24:06 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-10-31 09:24:06 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.rq' via constructor to bean named 'jdk.proxy2.$Proxy84@19aa1da0'
2024-10-31 09:24:06 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.rq' via constructor to bean named 'jdk.proxy2.$Proxy85@665eae68'
2024-10-31 09:24:06 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.rq' via constructor to bean named 'memberService'
2024-10-31 09:24:10 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:24:10 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1152b560] was not registered for synchronization because synchronization is not active
2024-10-31 09:24:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - allowPoolSuspension.............false
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - autoCommit......................true
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - catalog.........................none
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - connectionInitSql...............none
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - connectionTestQuery.............none
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - connectionTimeout...............30000
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - dataSource......................none
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - dataSourceClassName.............none
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - dataSourceJNDI..................none
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - dataSourceProperties............{password=<masked>}
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - driverClassName................."net.sf.log4jdbc.sql.jdbcapi.DriverSpy"
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName......none
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - healthCheckProperties...........{}
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - healthCheckRegistry.............none
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - idleTimeout.....................600000
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - initializationFailTimeout.......1
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - isolateInternalQueries..........false
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - jdbcUrl.........................jdbc:log4jdbc:mysql://127.0.0.1:3306/24_08_Spring?useUnicode=true&characterEncoding=utf8&autoReconnect=true&serverTimezone=Asia/Seoul
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - keepaliveTime...................0
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - leakDetectionThreshold..........0
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - maxLifetime.....................1800000
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - maximumPoolSize.................10
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - metricRegistry..................none
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - metricsTrackerFactory...........none
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - minimumIdle.....................10
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - password........................<masked>
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - poolName........................"HikariPool-1"
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - readOnly........................false
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - registerMbeans..................false
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - scheduledExecutor...............none
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - schema..........................none
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - threadFactory...................internal
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - transactionIsolation............default
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - username........................"root"
2024-10-31 09:24:10 [DEBUG] com.zaxxer.hikari.HikariConfig - validationTimeout...............5000
2024-10-31 09:24:10 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-31 09:24:11 [INFO ] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Driver does not support get/set network timeout for connections. (Receiver class net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy does not define or inherit an implementation of the resolved method 'abstract int getNetworkTimeout()' of interface java.sql.Connection.)
2024-10-31 09:24:11 [INFO ] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66
2024-10-31 09:24:11 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-31 09:24:11 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1186239000 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:24:11 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:24:11 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:24:11 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 11 msec}
2024-10-31 09:24:11 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:24:11 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:24:11 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1152b560]
2024-10-31 09:24:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=1, idle=0, waiting=0)
2024-10-31 09:24:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6796f708
2024-10-31 09:24:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@26abfd33
2024-10-31 09:24:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@17479f78
2024-10-31 09:24:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4684027c
2024-10-31 09:24:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@62d4b68d
2024-10-31 09:24:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@42ca3859
2024-10-31 09:24:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5619e7aa
2024-10-31 09:24:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3b0db8cb
2024-10-31 09:24:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@41b37cc3
2024-10-31 09:24:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:24:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:24:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:25:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:25:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:25:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:25:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:26:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:26:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:26:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:26:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:27:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:27:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:27:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:27:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:28:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:28:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:28:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:28:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:29:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:29:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:29:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:29:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:30:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:30:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:30:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:30:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:31:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:31:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:31:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:31:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:32:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:32:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:32:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:32:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:33:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:33:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:33:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:33:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:34:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:34:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:34:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:34:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:35:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:35:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:35:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:35:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:36:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:36:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:36:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:36:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:37:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:37:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:37:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:37:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:37:56 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:37:56 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bd3007f] was not registered for synchronization because synchronization is not active
2024-10-31 09:37:56 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:37:56 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@248612705 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:37:56 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:37:56 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 1(Integer)
2024-10-31 09:37:56 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 1
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:37:56 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-------|-----|----------|--------|
|id |regdate             |updatedate          |code   |name |delstatus |deldate |
|---|--------------------|--------------------|-------|-----|----------|--------|
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |NOTICE |공지사항 |false     |null    |
|---|--------------------|--------------------|-------|-----|----------|--------|

2024-10-31 09:37:56 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:37:56 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bd3007f]
2024-10-31 09:37:56 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:37:56 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@434b6a7b] was not registered for synchronization because synchronization is not active
2024-10-31 09:37:56 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:37:56 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@96941494 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:37:56 [DEBUG] c.e.d.r.A.getArticleCount - ==>  Preparing: SELECT COUNT(*), A.*, M.nickname AS extra__writer FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id WHERE 1 AND A.boardId = ? ORDER BY A.id DESC;
2024-10-31 09:37:56 [DEBUG] c.e.d.r.A.getArticleCount - ==> Parameters: 1(Integer)
2024-10-31 09:37:56 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT COUNT(*), A.*,  M.nickname AS extra__writer
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	WHERE 1

		AND A.boardId = 1

	ORDER BY A.id DESC;
 {executed in 2 msec}
2024-10-31 09:37:56 [INFO ] jdbc.resultsettable - 
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|count(*) |id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|3        |1  |2024-09-07T22:42:47 |2024-09-07T22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|

2024-10-31 09:37:56 [DEBUG] c.e.d.r.A.getArticleCount - <==      Total: 1
2024-10-31 09:37:56 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@434b6a7b]
2024-10-31 09:37:56 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:37:56 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ffea6e2] was not registered for synchronization because synchronization is not active
2024-10-31 09:37:56 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:37:56 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1025288725 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:37:56 [DEBUG] c.e.d.r.A.getForPrintArticles - ==>  Preparing: SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id LEFT JOIN `reply` AS R ON A.id = R.relId WHERE 1 AND boardId = ? GROUP BY A.id ORDER BY A.id DESC LIMIT ?, ?
2024-10-31 09:37:56 [DEBUG] c.e.d.r.A.getForPrintArticles - ==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2024-10-31 09:37:56 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	LEFT JOIN `reply` AS R
	ON A.id = R.relId
	WHERE 1

		AND boardId = 1

	GROUP BY A.id
	ORDER BY A.id DESC

		LIMIT 0, 10
 {executed in 16 msec}
2024-10-31 09:37:56 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |extra__repliescount |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|9  |2024-09-09 23:08:49 |2024-09-09 23:08:49 |2        |1       |sdf   |sdf  |0        |0                 |0                |회원1_닉네임  |0                   |
|2  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목2   |내용2  |0        |1                 |1                |회원1_닉네임  |1                   |
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |3                   |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|

2024-10-31 09:37:56 [DEBUG] c.e.d.r.A.getForPrintArticles - <==      Total: 3
2024-10-31 09:37:56 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ffea6e2]
2024-10-31 09:38:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:38:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:38:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:38:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:39:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:39:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:39:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:39:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:40:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:40:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:40:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:40:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:41:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:41:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:41:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:41:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:42:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:42:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:42:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:42:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:43:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:43:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:43:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:43:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:44:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:44:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:44:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:44:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:45:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:45:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:45:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:45:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:46:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:46:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:46:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:46:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:47:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:47:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:47:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:47:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:48:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:48:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:48:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:48:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:49:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:49:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:49:41 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:49:41 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6974107c] was not registered for synchronization because synchronization is not active
2024-10-31 09:49:41 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:49:41 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@450315554 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:49:41 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:49:41 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 1(Integer)
2024-10-31 09:49:41 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 1
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:49:41 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-------|-----|----------|--------|
|id |regdate             |updatedate          |code   |name |delstatus |deldate |
|---|--------------------|--------------------|-------|-----|----------|--------|
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |NOTICE |공지사항 |false     |null    |
|---|--------------------|--------------------|-------|-----|----------|--------|

2024-10-31 09:49:41 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:49:41 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6974107c]
2024-10-31 09:49:41 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:49:41 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f87d835] was not registered for synchronization because synchronization is not active
2024-10-31 09:49:41 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:49:41 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1440614040 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:49:41 [DEBUG] c.e.d.r.A.getArticleCount - ==>  Preparing: SELECT COUNT(*), A.*, M.nickname AS extra__writer FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id WHERE 1 AND A.boardId = ? ORDER BY A.id DESC;
2024-10-31 09:49:41 [DEBUG] c.e.d.r.A.getArticleCount - ==> Parameters: 1(Integer)
2024-10-31 09:49:41 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT COUNT(*), A.*,  M.nickname AS extra__writer
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	WHERE 1

		AND A.boardId = 1

	ORDER BY A.id DESC;
 {executed in 1 msec}
2024-10-31 09:49:41 [INFO ] jdbc.resultsettable - 
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|count(*) |id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|3        |1  |2024-09-07T22:42:47 |2024-09-07T22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|

2024-10-31 09:49:41 [DEBUG] c.e.d.r.A.getArticleCount - <==      Total: 1
2024-10-31 09:49:41 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f87d835]
2024-10-31 09:49:41 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:49:41 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@286bc07] was not registered for synchronization because synchronization is not active
2024-10-31 09:49:41 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:49:41 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@765757846 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:49:41 [DEBUG] c.e.d.r.A.getForPrintArticles - ==>  Preparing: SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id LEFT JOIN `reply` AS R ON A.id = R.relId WHERE 1 AND boardId = ? GROUP BY A.id ORDER BY A.id DESC LIMIT ?, ?
2024-10-31 09:49:41 [DEBUG] c.e.d.r.A.getForPrintArticles - ==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2024-10-31 09:49:41 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	LEFT JOIN `reply` AS R
	ON A.id = R.relId
	WHERE 1

		AND boardId = 1

	GROUP BY A.id
	ORDER BY A.id DESC

		LIMIT 0, 10
 {executed in 15 msec}
2024-10-31 09:49:41 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |extra__repliescount |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|9  |2024-09-09 23:08:49 |2024-09-09 23:08:49 |2        |1       |sdf   |sdf  |0        |0                 |0                |회원1_닉네임  |0                   |
|2  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목2   |내용2  |0        |1                 |1                |회원1_닉네임  |1                   |
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |3                   |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|

2024-10-31 09:49:41 [DEBUG] c.e.d.r.A.getForPrintArticles - <==      Total: 3
2024-10-31 09:49:41 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@286bc07]
2024-10-31 09:49:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:49:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:49:56 [INFO ] com.example.demo.Demo1Application - Starting Demo1Application using Java 17.0.3 with PID 20836 (C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes started by HR Jo in C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1)
2024-10-31 09:49:56 [DEBUG] com.example.demo.Demo1Application - Running with Spring Boot v3.2.9, Spring v6.1.12
2024-10-31 09:49:56 [INFO ] com.example.demo.Demo1Application - No active profile set, falling back to 1 default profile: "default"
2024-10-31 09:49:56 [DEBUG] o.s.boot.SpringApplication - Loading source class com.example.demo.Demo1Application
2024-10-31 09:49:56 [DEBUG] o.s.b.d.restart.ChangeableUrls - Matching URLs for reloading : [file:/C:/work_jhr/sts-4.24.0.RELEASE-workspace/demo-1/target/classes/]
2024-10-31 09:49:56 [DEBUG] o.s.b.d.settings.DevToolsSettings - Included patterns for restart : []
2024-10-31 09:49:56 [DEBUG] o.s.b.d.settings.DevToolsSettings - Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
2024-10-31 09:49:56 [INFO ] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-10-31 09:49:56 [INFO ] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-10-31 09:49:56 [DEBUG] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335128f0
2024-10-31 09:49:56 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2024-10-31 09:49:56 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\controller\AdmMemberController.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\controller\GenFileController.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\controller\UserAjaxTestController.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\controller\UserAPITestController.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\controller\UserArticleController.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\controller\UserFaqController.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\controller\UserHomeController.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\controller\UserMemberController.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\controller\UserReactionPointController.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\controller\UserReplyController.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\interceptor\BeforeActionInterceptor.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\interceptor\NeedAdminInterceptor.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\interceptor\NeedLoginInterceptor.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\interceptor\NeedLogoutInterceptor.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\MyWebMVCConfigurer.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\service\ArticleService.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\service\BoardService.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\service\FaqService.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\service\GenFileService.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\service\MailService.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\service\MemberService.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\service\ReactionPointService.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\service\ReplyService.class]
2024-10-31 09:49:56 [DEBUG] o.s.c.a.ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\vo\Rq.class]
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
2024-10-31 09:49:57 [DEBUG] o.s.b.a.AutoConfigurationPackages - @EnableAutoConfiguration was declared on a class in the package 'com.example.demo'. Automatic @Repository and @Entity scanning is enabled.
2024-10-31 09:49:57 [DEBUG] o.m.s.b.a.MybatisAutoConfiguration - Searching for mappers annotated with @Mapper
2024-10-31 09:49:57 [DEBUG] o.m.s.b.a.MybatisAutoConfiguration - Using auto-configuration base package 'com.example.demo'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
2024-10-31 09:49:57 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\repository\ArticleRepository.class]
2024-10-31 09:49:57 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\repository\BoardRepository.class]
2024-10-31 09:49:57 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\repository\FaqRepository.class]
2024-10-31 09:49:57 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\repository\GenFileRepository.class]
2024-10-31 09:49:57 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\repository\MemberRepository.class]
2024-10-31 09:49:57 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\repository\ReactionPointRepository.class]
2024-10-31 09:49:57 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Identified candidate component class: file [C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\target\classes\com\example\demo\repository\ReplyRepository.class]
2024-10-31 09:49:57 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'articleRepository' and 'com.example.demo.repository.ArticleRepository' mapperInterface
2024-10-31 09:49:57 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'boardRepository' and 'com.example.demo.repository.BoardRepository' mapperInterface
2024-10-31 09:49:57 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'faqRepository' and 'com.example.demo.repository.FaqRepository' mapperInterface
2024-10-31 09:49:57 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'genFileRepository' and 'com.example.demo.repository.GenFileRepository' mapperInterface
2024-10-31 09:49:57 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'memberRepository' and 'com.example.demo.repository.MemberRepository' mapperInterface
2024-10-31 09:49:57 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'reactionPointRepository' and 'com.example.demo.repository.ReactionPointRepository' mapperInterface
2024-10-31 09:49:57 [DEBUG] o.m.s.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'replyRepository' and 'com.example.demo.repository.ReplyRepository' mapperInterface
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'forceAutoProxyCreatorToUseClassProxying'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jdbcConnectionDetailsHikariBeanPostProcessor'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
2024-10-31 09:49:57 [DEBUG] o.s.u.c.s.UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@6a86b70a]
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionAttributeSource'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionInterceptor'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
2024-10-31 09:49:57 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sslBundleRegistry'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration' via constructor to bean named 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sslPropertiesSslBundleRegistrar'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'fileWatcher'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'sslPropertiesSslBundleRegistrar' via factory method to bean named 'fileWatcher'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorPageCustomizer'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServletRegistration'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServlet'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'multipartConfigElement'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
2024-10-31 09:49:58 [DEBUG] o.s.b.w.e.t.TomcatServletWebServerFactory - Code archive: C:\Users\HR Jo\.m2\repository\org\springframework\boot\spring-boot\3.2.9\spring-boot-3.2.9.jar
2024-10-31 09:49:58 [DEBUG] o.s.b.w.e.t.TomcatServletWebServerFactory - Code archive: C:\Users\HR Jo\.m2\repository\org\springframework\boot\spring-boot\3.2.9\spring-boot-3.2.9.jar
2024-10-31 09:49:58 [DEBUG] o.s.b.w.e.t.TomcatServletWebServerFactory - Document root: C:\work_jhr\sts-4.24.0.RELEASE-workspace\demo-1\src\main\webapp
2024-10-31 09:49:58 [INFO ] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-31 09:49:58 [INFO ] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-31 09:49:58 [INFO ] o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-31 09:49:58 [INFO ] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2024-10-31 09:49:58 [INFO ] o.apache.jasper.servlet.TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2024-10-31 09:49:58 [INFO ] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-31 09:49:58 [DEBUG] o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-10-31 09:49:58 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1889 ms
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestContextFilter'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'formContentFilter'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'characterEncodingFilter'
2024-10-31 09:49:58 [DEBUG] o.s.b.w.s.ServletContextInitializerBeans - Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-10-31 09:49:58 [DEBUG] o.s.b.w.s.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/]
2024-10-31 09:49:58 [DEBUG] o.s.b.w.s.f.OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use
2024-10-31 09:49:58 [DEBUG] o.s.b.w.s.f.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2024-10-31 09:49:58 [DEBUG] o.s.b.w.s.f.OrderedFormContentFilter - Filter 'formContentFilter' configured for use
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'demo1Application'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'admMemberController'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'memberService'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'memberRepository'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataSource'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jdbcConnectionDetails'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jdbcConnectionDetails' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dataSource' via factory method to bean named 'jdbcConnectionDetails'
2024-10-31 09:49:58 [DEBUG] com.zaxxer.hikari.HikariConfig - Driver class net.sf.log4jdbc.sql.jdbcapi.DriverSpy found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1f99b11c
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - log4jdbc-logj2 properties initialization...
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - Using logger: net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - x log4jdbc.debug.stack.prefix is not defined
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - x log4jdbc.sqltiming.warn.threshold is not defined
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - x log4jdbc.sqltiming.error.threshold is not defined
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - x log4jdbc.dump.booleanastruefalse is not defined (using default value false)
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug -   log4jdbc.dump.sql.maxlinelength = 0
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - x log4jdbc.dump.fulldebugstacktrace is not defined (using default value false)
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - x log4jdbc.statement.warn is not defined (using default value false)
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - x log4jdbc.dump.sql.select is not defined (using default value true)
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - x log4jdbc.dump.sql.insert is not defined (using default value true)
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - x log4jdbc.dump.sql.update is not defined (using default value true)
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - x log4jdbc.dump.sql.delete is not defined (using default value true)
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - x log4jdbc.dump.sql.create is not defined (using default value true)
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - x log4jdbc.dump.sql.addsemicolon is not defined (using default value false)
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - x log4jdbc.auto.load.popular.drivers is not defined (using default value true)
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - x log4jdbc.drivers is not defined
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - x log4jdbc.trim.sql is not defined (using default value true)
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - x log4jdbc.trim.sql.extrablanklines is not defined (using default value true)
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - x log4jdbc.suppress.generated.keys.exception is not defined (using default value false)
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - log4jdbc-logj2 properties initialization done.
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - DriverSpy intialization...
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug -   FOUND DRIVER com.mysql.jdbc.Driver
2024-10-31 09:49:58 [DEBUG] log4jdbc.debug - DriverSpy intialization done.
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sqlSessionTemplate'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335128f0'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sqlSessionFactory'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
2024-10-31 09:49:58 [DEBUG] o.m.spring.SqlSessionFactoryBean - Property 'mapperLocations' was not specified.
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'memberService' via constructor to bean named 'memberRepository'
2024-10-31 09:49:58 [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'custom.siteMainUri' in PropertySource 'Config resource 'class path resource [application.yml]' via location 'optional:classpath:/'' with value of type String
2024-10-31 09:49:58 [DEBUG] o.s.c.e.PropertySourcesPropertyResolver - Found key 'custom.siteMainUri' in PropertySource 'environmentProperties' with value of type String
2024-10-31 09:49:58 [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'custom.siteName' in PropertySource 'Config resource 'class path resource [application.yml]' via location 'optional:classpath:/'' with value of type String
2024-10-31 09:49:58 [DEBUG] o.s.c.e.PropertySourcesPropertyResolver - Found key 'custom.siteName' in PropertySource 'environmentProperties' with value of type String
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mailService'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mailSender'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.mail-org.springframework.boot.autoconfigure.mail.MailProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mailSender' via factory method to bean named 'spring.mail-org.springframework.boot.autoconfigure.mail.MailProperties'
2024-10-31 09:49:58 [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'custom.emailFrom' in PropertySource 'Config resource 'class path resource [application.yml]' via location 'optional:classpath:/'' with value of type String
2024-10-31 09:49:58 [DEBUG] o.s.c.e.PropertySourcesPropertyResolver - Found key 'custom.emailFrom' in PropertySource 'environmentProperties' with value of type String
2024-10-31 09:49:58 [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'custom.emailFromName' in PropertySource 'Config resource 'class path resource [application.yml]' via location 'optional:classpath:/'' with value of type String
2024-10-31 09:49:58 [DEBUG] o.s.c.e.PropertySourcesPropertyResolver - Found key 'custom.emailFromName' in PropertySource 'environmentProperties' with value of type String
2024-10-31 09:49:58 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'rq'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'genFileController'
2024-10-31 09:49:59 [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'custom.genFileDirPath' in PropertySource 'Config resource 'class path resource [application.yml]' via location 'optional:classpath:/'' with value of type String
2024-10-31 09:49:59 [DEBUG] o.s.c.e.PropertySourcesPropertyResolver - Found key 'custom.genFileDirPath' in PropertySource 'environmentProperties' with value of type String
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'genFileService'
2024-10-31 09:49:59 [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'custom.genFileDirPath' in PropertySource 'Config resource 'class path resource [application.yml]' via location 'optional:classpath:/'' with value of type String
2024-10-31 09:49:59 [DEBUG] o.s.c.e.PropertySourcesPropertyResolver - Found key 'custom.genFileDirPath' in PropertySource 'environmentProperties' with value of type String
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'genFileRepository'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userAjaxTestController'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userAPITestController'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userArticleController'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'articleService'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'articleRepository'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'articleService' via constructor to bean named 'articleRepository'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'boardService'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'boardRepository'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'boardService' via constructor to bean named 'boardRepository'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'reactionPointService'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'reactionPointRepository'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'reactionPointService' via constructor to bean named 'reactionPointRepository'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'replyService'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'replyRepository'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'replyService' via constructor to bean named 'replyRepository'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userFaqController'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'faqService'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'faqRepository'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'faqService' via constructor to bean named 'faqRepository'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userHomeController'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userMemberController'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userReactionPointController'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userReplyController'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beforeActionInterceptor'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'needAdminInterceptor'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'needLoginInterceptor'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'needLogoutInterceptor'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'myWebMVCConfigurer'
2024-10-31 09:49:59 [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'custom.genFileDirPath' in PropertySource 'Config resource 'class path resource [application.yml]' via location 'optional:classpath:/'' with value of type String
2024-10-31 09:49:59 [DEBUG] o.s.c.e.PropertySourcesPropertyResolver - Found key 'custom.genFileDirPath' in PropertySource 'environmentProperties' with value of type String
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'threadPoolTaskExecutorBuilder'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'threadPoolTaskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'taskExecutorBuilder'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration' via constructor to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleAsyncTaskExecutorBuilder'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'error'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beanNameViewResolver'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335128f0'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'conventionErrorViewResolver'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorAttributes'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'basicErrorController'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@c89729f'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@c89729f'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcConversionService'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335128f0'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'welcomePageNotAcceptableHandlerMapping'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335128f0'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'localeResolver'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'themeResolver'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'flashMapManager'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcValidator'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-10-31 09:49:59 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.e.d.c.AdmMemberController:
	{ [/adm/member/doDeleteMembers]}: doDeleteMembers(String,String)
	{ [/adm/member/list]}: showList(Model,String,String,String,int)
	{ [/adm/member/doLogout]}: doLogout(String)
2024-10-31 09:49:59 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.e.d.c.GenFileController:
	{ [/common/genFile/doUpload]}: doUpload(Map,MultipartRequest)
	{GET [/common/genFile/doDownload]}: downloadFile(int,HttpServletRequest)
	{GET [/common/genFile/file/{relTypeCode}/{relId}/{typeCode}/{type2Code}/{fileNo}]}: showFile(HttpServletRequest,String,int,String,String,int)
2024-10-31 09:49:59 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.e.d.c.UserAjaxTestController:
	{ [/usr/home/plus]}: showTestPage()
	{ [/usr/home/doPlus]}: doPlus(int,int)
	{ [/usr/home/doPlusJson]}: doPlusJson(int,int)
2024-10-31 09:49:59 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.e.d.c.UserAPITestController:
	{ [/usr/home/APITest2]}: showAPITest2()
	{ [/usr/home/APITest]}: showAPITest()
2024-10-31 09:49:59 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.e.d.c.UserArticleController:
	{ [/usr/article/doDelete]}: doDelete(HttpServletRequest,int)
	{ [/usr/article/list]}: showList(HttpServletRequest,Model,int,int,String,String)
	{ [/usr/article/doWrite]}: doWrite(HttpServletRequest,String,String,String,String,MultipartRequest)
	{ [/usr/article/write]}: showWrite(Model)
	{ [/usr/article/doIncreaseHitCountRd]}: doIncreaseHitCount(int)
	{ [/usr/article/modify]}: showModify(HttpServletRequest,Model,int)
	{ [/usr/article/doModify]}: doModify(HttpServletRequest,int,String,String)
	{ [/usr/article/detail]}: showDetail(HttpServletRequest,Model,int)
	{ [/usr/article/getArticle]}: getArticle(int)
2024-10-31 09:49:59 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.e.d.c.UserFaqController:
	{ [/usr/faq/detail], produces [text/html;charset=UTF-8]}: showFaqDetail(int)
	{ [/usr/faq/list]}: showFaqList(HttpServletRequest,Model,int,int,String,String)
2024-10-31 09:49:59 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.e.d.c.UserHomeController:
	{ [/]}: showRoot()
	{ [/usr/home/main]}: showMain()
	{ [/usr/crawl]}: doCrawl()
2024-10-31 09:49:59 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.e.d.c.UserMemberController:
	{ [/usr/member/doLogin]}: doLogin(HttpServletRequest,String,String,String)
	{ [/usr/member/doLogout]}: doLogout(HttpServletRequest)
	{ [/usr/member/doModify]}: doModify(HttpServletRequest,String,String,String,String,String)
	{ [/usr/member/join]}: showJoin(HttpServletRequest)
	{ [/usr/member/doJoin]}: doJoin(HttpServletRequest,String,String,String,String,String,String)
	{ [/usr/member/login]}: showLogin(HttpServletRequest)
	{ [/usr/member/checkPw]}: showCheckPw()
	{ [/usr/member/myPage]}: showmyPage()
	{ [/usr/member/doCheckPw]}: doCheckPw(String)
	{ [/usr/member/modify]}: showmyModify()
	{ [/usr/member/doFindLoginId]}: doFindLoginId(String,String,String)
	{ [/usr/member/getLoginIdDup]}: getLoginIdDup(String)
	{ [/usr/member/findLoginPw]}: showFindLoginPw()
	{ [/usr/member/doFindLoginPw]}: doFindLoginPw(String,String,String)
	{ [/usr/member/findLoginId]}: showFindLoginId()
2024-10-31 09:49:59 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.e.d.c.UserReactionPointController:
	{ [/usr/reactionPoint/doGoodReaction]}: doGoodReaction(String,int,String)
	{ [/usr/reactionPoint/doBadReaction]}: doBadReaction(String,int,String)
2024-10-31 09:49:59 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.e.d.c.UserReplyController:
	{ [/usr/reply/doWrite]}: doWrite(HttpServletRequest,String,int,String)
	{ [/usr/reply/doModify]}: doModify(HttpServletRequest,int,String)
2024-10-31 09:49:59 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcPatternParser'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcUrlPathHelper'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcPathMatcher'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beanNameHandlerMapping'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-10-31 09:49:59 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'routerFunctionMapping'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'messageConverters'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'stringHttpMessageConverter'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jacksonObjectMapper'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'parameterNamesModule'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jsonMixinModule'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jsonMixinModuleEntries'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jsonMixinModuleEntries' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335128f0'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335128f0'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'jsonMixinModuleEntries'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jsonComponentModule'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335128f0'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'resourceHandlerMapping'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-10-31 09:49:59 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]], /gen/**=ResourceHttpRequestHandler [URL [file:/C:/work_jhr/sts-4.24.0.RELEASE-workspace/demo/images/]]}
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'applicationTaskExecutor'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
2024-10-31 09:49:59 [DEBUG] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'handlerFunctionAdapter'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'handlerExceptionResolver'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcViewResolver'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewNameTranslator'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultViewResolver'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewResolver'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@c89729f'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewResolver'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$MapperScannerRegistrarNotFoundConfiguration'
2024-10-31 09:49:59 [DEBUG] o.m.s.b.a.MybatisAutoConfiguration - Not found configuration for registering mapper bean using @MapperScan, MapperFactoryBean and MapperScannerConfigurer.
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' via constructor to bean named 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mbeanExporter'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'objectNamingStrategy'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@c89729f'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mbeanServer'
2024-10-31 09:49:59 [DEBUG] o.s.jmx.support.JmxUtils - Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@2471cca7
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
2024-10-31 09:49:59 [DEBUG] o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'applicationAvailability'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionExecutionListeners'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'lifecycleProcessor'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'gsonBuilder'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'gson'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jdbcTemplate'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jdbcClient'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jdbcClient' via factory method to bean named 'namedParameterJdbcTemplate'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'threadPoolTaskSchedulerBuilder'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'threadPoolTaskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'taskSchedulerBuilder'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration' via constructor to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleAsyncTaskSchedulerBuilder'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'environment'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionTemplate'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'httpMessageConvertersRestClientCustomizer'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'restClientSsl'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'restClientSsl' via factory method to bean named 'sslBundleRegistry'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'restClientBuilderConfigurer'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'multipartResolver'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'fileSystemWatcherFactory'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'classPathFileSystemWatcher'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'classPathRestartStrategy'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'optionalLiveReloadServer'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
2024-10-31 09:49:59 [DEBUG] o.s.b.d.livereload.LiveReloadServer - Starting live reload server on port 35729
2024-10-31 09:49:59 [WARN ] o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
2024-10-31 09:49:59 [DEBUG] o.s.b.d.a.OptionalLiveReloadServer - Live reload start error
java.net.BindException: Address already in use: bind
	at java.base/sun.nio.ch.Net.bind0(Native Method)
	at java.base/sun.nio.ch.Net.bind(Net.java:555)
	at java.base/sun.nio.ch.Net.bind(Net.java:544)
	at java.base/sun.nio.ch.NioSocketImpl.bind(NioSocketImpl.java:643)
	at java.base/java.net.ServerSocket.bind(ServerSocket.java:388)
	at java.base/java.net.ServerSocket.<init>(ServerSocket.java:274)
	at java.base/java.net.ServerSocket.<init>(ServerSocket.java:167)
	at org.springframework.boot.devtools.livereload.LiveReloadServer.start(LiveReloadServer.java:114)
	at org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer(OptionalLiveReloadServer.java:57)
	at org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.afterPropertiesSet(OptionalLiveReloadServer.java:49)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.demo.Demo1Application.main(Demo1Application.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'liveReloadServerEventListener'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
2024-10-31 09:49:59 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
2024-10-31 09:49:59 [DEBUG] o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2024-10-31 09:49:59 [DEBUG] o.s.j.e.a.AnnotationMBeanExporter - Auto-detecting user-defined JMX MBeans
2024-10-31 09:49:59 [DEBUG] o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2024-10-31 09:49:59 [DEBUG] o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2024-10-31 09:49:59 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase -2147483647
2024-10-31 09:49:59 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'springBootLoggingLifecycle'
2024-10-31 09:49:59 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147481599
2024-10-31 09:49:59 [INFO ] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-31 09:49:59 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Stopping beans in phase 2147483647
2024-10-31 09:49:59 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Bean 'applicationTaskExecutor' completed its stop procedure
2024-10-31 09:49:59 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Stopping beans in phase 2147482623
2024-10-31 09:49:59 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Stopping beans in phase 2147481599
2024-10-31 09:49:59 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Stopping beans in phase -2147483647
2024-10-31 09:49:59 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Bean 'springBootLoggingLifecycle' completed its stop procedure
2024-10-31 09:49:59 [WARN ] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2024-10-31 09:49:59 [DEBUG] o.s.j.e.a.AnnotationMBeanExporter - Unregistering JMX-exposed beans on shutdown
2024-10-31 09:49:59 [DEBUG] o.s.j.e.a.AnnotationMBeanExporter - Unregistering JMX-exposed beans
2024-10-31 09:49:59 [DEBUG] o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2024-10-31 09:49:59 [DEBUG] o.s.boot.devtools.restart.Restarter - Creating new Restarter for thread Thread[main,5,main]
2024-10-31 09:49:59 [DEBUG] o.s.boot.devtools.restart.Restarter - Immediately restarting application
2024-10-31 09:49:59 [DEBUG] o.s.boot.devtools.restart.Restarter - Starting application com.example.demo.Demo1Application with URLs [file:/C:/work_jhr/sts-4.24.0.RELEASE-workspace/demo-1/target/classes/]
2024-10-31 09:49:59 [DEBUG] o.s.b.a.l.ConditionEvaluationReportLogger - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration matched:
      - @ConditionalOnMissingClass did not find unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.sql.DataSource' (OnClassCondition)
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MailSenderAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.mail.internet.MimeMessage', 'jakarta.activation.MimeType', 'org.springframework.mail.MailSender' (OnClassCondition)
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.JndiNameProperty @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name'; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.HostProperty @ConditionalOnProperty (spring.mail.host) matched (MailSenderAutoConfiguration.MailSenderCondition)
      - @ConditionalOnMissingBean (types: org.springframework.mail.MailSender; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MailSenderPropertiesConfiguration matched:
      - @ConditionalOnProperty (spring.mail.host) matched (OnPropertyCondition)

   MailSenderPropertiesConfiguration#mailSender matched:
      - @ConditionalOnMissingBean (types: org.springframework.mail.javamail.JavaMailSender; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionFactory matched:
      - @ConditionalOnMissingBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionTemplate matched:
      - @ConditionalOnMissingBean (types: org.mybatis.spring.SqlSessionTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration matched:
      - @ConditionalOnMissingBean (types: org.mybatis.spring.mapper.MapperFactoryBean,org.mybatis.spring.mapper.MapperScannerConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisLanguageDriverAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.apache.ibatis.scripting.LanguageDriver' (OnClassCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.persistence.EntityManager' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderJndiConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'jakarta.mail.Session' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.FreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver', 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriverConfig' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyFreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyVelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.velocity.Driver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.ThymeleafConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.thymeleaf.ThymeleafLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.VelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.velocity.VelocityLanguageDriver', 'org.mybatis.scripting.velocity.VelocityLanguageDriverConfig' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SpringDataWebAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.web.PageableHandlerMethodArgumentResolver' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean did not find required type 'org.springframework.transaction.aspectj.AbstractTransactionAspect' (OnBeanCondition)
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-10-31 09:49:59 [DEBUG] o.s.b.d.LoggingFailureAnalysisReporter - Application failed to start due to an exception
org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
	at org.springframework.boot.web.server.PortInUseException.lambda$throwIfPortBindingException$0(PortInUseException.java:70)
	at org.springframework.boot.web.server.PortInUseException.lambda$ifPortBindingException$1(PortInUseException.java:85)
	at org.springframework.boot.web.server.PortInUseException.ifCausedBy(PortInUseException.java:103)
	at org.springframework.boot.web.server.PortInUseException.ifPortBindingException(PortInUseException.java:82)
	at org.springframework.boot.web.server.PortInUseException.throwIfPortBindingException(PortInUseException.java:69)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:248)
	at org.springframework.boot.web.servlet.context.WebServerStartStopLifecycle.start(WebServerStartStopLifecycle.java:44)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:285)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:469)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:257)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:202)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:990)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:628)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.demo.Demo1Application.main(Demo1Application.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalArgumentException: standardService.connector.startFailed
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:222)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:306)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:234)
	... 20 common frames omitted
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1061)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:219)
	... 22 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at java.base/sun.nio.ch.Net.bind0(Native Method)
	at java.base/sun.nio.ch.Net.bind(Net.java:555)
	at java.base/sun.nio.ch.ServerSocketChannelImpl.netBind(ServerSocketChannelImpl.java:337)
	at java.base/sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:294)
	at org.apache.tomcat.util.net.NioEndpoint.initServerSocket(NioEndpoint.java:239)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:194)
	at org.apache.tomcat.util.net.AbstractEndpoint.bindWithCleanup(AbstractEndpoint.java:1304)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1390)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:643)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1058)
	... 24 common frames omitted
2024-10-31 09:49:59 [ERROR] o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2024-10-31 09:50:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:50:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:50:16 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:16 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7098f073] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:16 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:16 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@899309572 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:16 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:50:16 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 1(Integer)
2024-10-31 09:50:16 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 1
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:50:16 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-------|-----|----------|--------|
|id |regdate             |updatedate          |code   |name |delstatus |deldate |
|---|--------------------|--------------------|-------|-----|----------|--------|
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |NOTICE |공지사항 |false     |null    |
|---|--------------------|--------------------|-------|-----|----------|--------|

2024-10-31 09:50:16 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:50:16 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7098f073]
2024-10-31 09:50:16 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:16 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4497d9e2] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:16 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:16 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@688934772 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:16 [DEBUG] c.e.d.r.A.getArticleCount - ==>  Preparing: SELECT COUNT(*), A.*, M.nickname AS extra__writer FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id WHERE 1 AND A.boardId = ? ORDER BY A.id DESC;
2024-10-31 09:50:16 [DEBUG] c.e.d.r.A.getArticleCount - ==> Parameters: 1(Integer)
2024-10-31 09:50:16 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT COUNT(*), A.*,  M.nickname AS extra__writer
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	WHERE 1

		AND A.boardId = 1

	ORDER BY A.id DESC;
 {executed in 0 msec}
2024-10-31 09:50:16 [INFO ] jdbc.resultsettable - 
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|count(*) |id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|3        |1  |2024-09-07T22:42:47 |2024-09-07T22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|

2024-10-31 09:50:16 [DEBUG] c.e.d.r.A.getArticleCount - <==      Total: 1
2024-10-31 09:50:16 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4497d9e2]
2024-10-31 09:50:16 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:16 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d2a3a] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:16 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:16 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@558021395 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:16 [DEBUG] c.e.d.r.A.getForPrintArticles - ==>  Preparing: SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id LEFT JOIN `reply` AS R ON A.id = R.relId WHERE 1 AND boardId = ? GROUP BY A.id ORDER BY A.id DESC LIMIT ?, ?
2024-10-31 09:50:16 [DEBUG] c.e.d.r.A.getForPrintArticles - ==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2024-10-31 09:50:16 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	LEFT JOIN `reply` AS R
	ON A.id = R.relId
	WHERE 1

		AND boardId = 1

	GROUP BY A.id
	ORDER BY A.id DESC

		LIMIT 0, 10
 {executed in 17 msec}
2024-10-31 09:50:16 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |extra__repliescount |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|9  |2024-09-09 23:08:49 |2024-09-09 23:08:49 |2        |1       |sdf   |sdf  |0        |0                 |0                |회원1_닉네임  |0                   |
|2  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목2   |내용2  |0        |1                 |1                |회원1_닉네임  |1                   |
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |3                   |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|

2024-10-31 09:50:16 [DEBUG] c.e.d.r.A.getForPrintArticles - <==      Total: 3
2024-10-31 09:50:16 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d2a3a]
2024-10-31 09:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@381b48ab] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:17 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@361216100 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:17 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:50:17 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 1(Integer)
2024-10-31 09:50:17 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 1
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:50:17 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-------|-----|----------|--------|
|id |regdate             |updatedate          |code   |name |delstatus |deldate |
|---|--------------------|--------------------|-------|-----|----------|--------|
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |NOTICE |공지사항 |false     |null    |
|---|--------------------|--------------------|-------|-----|----------|--------|

2024-10-31 09:50:17 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@381b48ab]
2024-10-31 09:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a15102e] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:17 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@153843889 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:17 [DEBUG] c.e.d.r.A.getArticleCount - ==>  Preparing: SELECT COUNT(*), A.*, M.nickname AS extra__writer FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id WHERE 1 AND A.boardId = ? ORDER BY A.id DESC;
2024-10-31 09:50:17 [DEBUG] c.e.d.r.A.getArticleCount - ==> Parameters: 1(Integer)
2024-10-31 09:50:17 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT COUNT(*), A.*,  M.nickname AS extra__writer
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	WHERE 1

		AND A.boardId = 1

	ORDER BY A.id DESC;
 {executed in 0 msec}
2024-10-31 09:50:17 [INFO ] jdbc.resultsettable - 
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|count(*) |id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|3        |1  |2024-09-07T22:42:47 |2024-09-07T22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|

2024-10-31 09:50:17 [DEBUG] c.e.d.r.A.getArticleCount - <==      Total: 1
2024-10-31 09:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a15102e]
2024-10-31 09:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f237a10] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:17 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@392042621 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:17 [DEBUG] c.e.d.r.A.getForPrintArticles - ==>  Preparing: SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id LEFT JOIN `reply` AS R ON A.id = R.relId WHERE 1 AND boardId = ? GROUP BY A.id ORDER BY A.id DESC LIMIT ?, ?
2024-10-31 09:50:17 [DEBUG] c.e.d.r.A.getForPrintArticles - ==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2024-10-31 09:50:17 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	LEFT JOIN `reply` AS R
	ON A.id = R.relId
	WHERE 1

		AND boardId = 1

	GROUP BY A.id
	ORDER BY A.id DESC

		LIMIT 0, 10
 {executed in 17 msec}
2024-10-31 09:50:17 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |extra__repliescount |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|9  |2024-09-09 23:08:49 |2024-09-09 23:08:49 |2        |1       |sdf   |sdf  |0        |0                 |0                |회원1_닉네임  |0                   |
|2  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목2   |내용2  |0        |1                 |1                |회원1_닉네임  |1                   |
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |3                   |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|

2024-10-31 09:50:17 [DEBUG] c.e.d.r.A.getForPrintArticles - <==      Total: 3
2024-10-31 09:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f237a10]
2024-10-31 09:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1289b457] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:17 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1092323299 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:17 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:50:17 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 1(Integer)
2024-10-31 09:50:17 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 1
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:50:17 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-------|-----|----------|--------|
|id |regdate             |updatedate          |code   |name |delstatus |deldate |
|---|--------------------|--------------------|-------|-----|----------|--------|
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |NOTICE |공지사항 |false     |null    |
|---|--------------------|--------------------|-------|-----|----------|--------|

2024-10-31 09:50:17 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1289b457]
2024-10-31 09:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20c57cf8] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:17 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2125793886 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:17 [DEBUG] c.e.d.r.A.getArticleCount - ==>  Preparing: SELECT COUNT(*), A.*, M.nickname AS extra__writer FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id WHERE 1 AND A.boardId = ? ORDER BY A.id DESC;
2024-10-31 09:50:17 [DEBUG] c.e.d.r.A.getArticleCount - ==> Parameters: 1(Integer)
2024-10-31 09:50:17 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT COUNT(*), A.*,  M.nickname AS extra__writer
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	WHERE 1

		AND A.boardId = 1

	ORDER BY A.id DESC;
 {executed in 1 msec}
2024-10-31 09:50:17 [INFO ] jdbc.resultsettable - 
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|count(*) |id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|3        |1  |2024-09-07T22:42:47 |2024-09-07T22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|

2024-10-31 09:50:17 [DEBUG] c.e.d.r.A.getArticleCount - <==      Total: 1
2024-10-31 09:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20c57cf8]
2024-10-31 09:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@706bdfaa] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:17 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1386041083 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:17 [DEBUG] c.e.d.r.A.getForPrintArticles - ==>  Preparing: SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id LEFT JOIN `reply` AS R ON A.id = R.relId WHERE 1 AND boardId = ? GROUP BY A.id ORDER BY A.id DESC LIMIT ?, ?
2024-10-31 09:50:17 [DEBUG] c.e.d.r.A.getForPrintArticles - ==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2024-10-31 09:50:17 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	LEFT JOIN `reply` AS R
	ON A.id = R.relId
	WHERE 1

		AND boardId = 1

	GROUP BY A.id
	ORDER BY A.id DESC

		LIMIT 0, 10
 {executed in 18 msec}
2024-10-31 09:50:17 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |extra__repliescount |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|9  |2024-09-09 23:08:49 |2024-09-09 23:08:49 |2        |1       |sdf   |sdf  |0        |0                 |0                |회원1_닉네임  |0                   |
|2  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목2   |내용2  |0        |1                 |1                |회원1_닉네임  |1                   |
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |3                   |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|

2024-10-31 09:50:17 [DEBUG] c.e.d.r.A.getForPrintArticles - <==      Total: 3
2024-10-31 09:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@706bdfaa]
2024-10-31 09:50:19 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:19 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55389885] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:19 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:19 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1748672712 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:19 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:50:19 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 1(Integer)
2024-10-31 09:50:19 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 1
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:50:19 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-------|-----|----------|--------|
|id |regdate             |updatedate          |code   |name |delstatus |deldate |
|---|--------------------|--------------------|-------|-----|----------|--------|
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |NOTICE |공지사항 |false     |null    |
|---|--------------------|--------------------|-------|-----|----------|--------|

2024-10-31 09:50:19 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:50:19 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55389885]
2024-10-31 09:50:19 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:19 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44fcc5ea] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:19 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:19 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1987096324 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:19 [DEBUG] c.e.d.r.A.getArticleCount - ==>  Preparing: SELECT COUNT(*), A.*, M.nickname AS extra__writer FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id WHERE 1 AND A.boardId = ? ORDER BY A.id DESC;
2024-10-31 09:50:19 [DEBUG] c.e.d.r.A.getArticleCount - ==> Parameters: 1(Integer)
2024-10-31 09:50:19 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT COUNT(*), A.*,  M.nickname AS extra__writer
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	WHERE 1

		AND A.boardId = 1

	ORDER BY A.id DESC;
 {executed in 1 msec}
2024-10-31 09:50:19 [INFO ] jdbc.resultsettable - 
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|count(*) |id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|3        |1  |2024-09-07T22:42:47 |2024-09-07T22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|

2024-10-31 09:50:19 [DEBUG] c.e.d.r.A.getArticleCount - <==      Total: 1
2024-10-31 09:50:19 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44fcc5ea]
2024-10-31 09:50:19 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:19 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a4a78a] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:19 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:19 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1195642259 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:19 [DEBUG] c.e.d.r.A.getForPrintArticles - ==>  Preparing: SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id LEFT JOIN `reply` AS R ON A.id = R.relId WHERE 1 AND boardId = ? GROUP BY A.id ORDER BY A.id DESC LIMIT ?, ?
2024-10-31 09:50:19 [DEBUG] c.e.d.r.A.getForPrintArticles - ==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2024-10-31 09:50:19 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	LEFT JOIN `reply` AS R
	ON A.id = R.relId
	WHERE 1

		AND boardId = 1

	GROUP BY A.id
	ORDER BY A.id DESC

		LIMIT 0, 10
 {executed in 13 msec}
2024-10-31 09:50:19 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |extra__repliescount |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|9  |2024-09-09 23:08:49 |2024-09-09 23:08:49 |2        |1       |sdf   |sdf  |0        |0                 |0                |회원1_닉네임  |0                   |
|2  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목2   |내용2  |0        |1                 |1                |회원1_닉네임  |1                   |
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |3                   |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|

2024-10-31 09:50:19 [DEBUG] c.e.d.r.A.getForPrintArticles - <==      Total: 3
2024-10-31 09:50:19 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a4a78a]
2024-10-31 09:50:19 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:19 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71bfa15c] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:19 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:19 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1150644055 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:19 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:50:19 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:50:19 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:50:19 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:50:19 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:50:19 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71bfa15c]
2024-10-31 09:50:22 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:22 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68c12a9d] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:22 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:22 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1542510337 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:22 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:50:22 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 1(Integer)
2024-10-31 09:50:22 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 1
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:50:22 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-------|-----|----------|--------|
|id |regdate             |updatedate          |code   |name |delstatus |deldate |
|---|--------------------|--------------------|-------|-----|----------|--------|
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |NOTICE |공지사항 |false     |null    |
|---|--------------------|--------------------|-------|-----|----------|--------|

2024-10-31 09:50:22 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:50:22 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68c12a9d]
2024-10-31 09:50:22 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:22 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f51db66] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:22 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:22 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1772607440 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:22 [DEBUG] c.e.d.r.A.getArticleCount - ==>  Preparing: SELECT COUNT(*), A.*, M.nickname AS extra__writer FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id WHERE 1 AND A.boardId = ? ORDER BY A.id DESC;
2024-10-31 09:50:22 [DEBUG] c.e.d.r.A.getArticleCount - ==> Parameters: 1(Integer)
2024-10-31 09:50:22 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT COUNT(*), A.*,  M.nickname AS extra__writer
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	WHERE 1

		AND A.boardId = 1

	ORDER BY A.id DESC;
 {executed in 0 msec}
2024-10-31 09:50:22 [INFO ] jdbc.resultsettable - 
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|count(*) |id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|3        |1  |2024-09-07T22:42:47 |2024-09-07T22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|

2024-10-31 09:50:22 [DEBUG] c.e.d.r.A.getArticleCount - <==      Total: 1
2024-10-31 09:50:22 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f51db66]
2024-10-31 09:50:22 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:22 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@240399e9] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:22 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:22 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@392674421 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:22 [DEBUG] c.e.d.r.A.getForPrintArticles - ==>  Preparing: SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id LEFT JOIN `reply` AS R ON A.id = R.relId WHERE 1 AND boardId = ? GROUP BY A.id ORDER BY A.id DESC LIMIT ?, ?
2024-10-31 09:50:22 [DEBUG] c.e.d.r.A.getForPrintArticles - ==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2024-10-31 09:50:22 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	LEFT JOIN `reply` AS R
	ON A.id = R.relId
	WHERE 1

		AND boardId = 1

	GROUP BY A.id
	ORDER BY A.id DESC

		LIMIT 0, 10
 {executed in 16 msec}
2024-10-31 09:50:22 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |extra__repliescount |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|9  |2024-09-09 23:08:49 |2024-09-09 23:08:49 |2        |1       |sdf   |sdf  |0        |0                 |0                |회원1_닉네임  |0                   |
|2  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목2   |내용2  |0        |1                 |1                |회원1_닉네임  |1                   |
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |3                   |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|

2024-10-31 09:50:22 [DEBUG] c.e.d.r.A.getForPrintArticles - <==      Total: 3
2024-10-31 09:50:22 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@240399e9]
2024-10-31 09:50:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@325c5ff8] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:25 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2128714208 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:25 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:50:25 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 1(Integer)
2024-10-31 09:50:25 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 1
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:50:25 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-------|-----|----------|--------|
|id |regdate             |updatedate          |code   |name |delstatus |deldate |
|---|--------------------|--------------------|-------|-----|----------|--------|
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |NOTICE |공지사항 |false     |null    |
|---|--------------------|--------------------|-------|-----|----------|--------|

2024-10-31 09:50:25 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:50:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@325c5ff8]
2024-10-31 09:50:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c0d51e2] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:25 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1347083411 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:25 [DEBUG] c.e.d.r.A.getArticleCount - ==>  Preparing: SELECT COUNT(*), A.*, M.nickname AS extra__writer FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id WHERE 1 AND A.boardId = ? ORDER BY A.id DESC;
2024-10-31 09:50:25 [DEBUG] c.e.d.r.A.getArticleCount - ==> Parameters: 1(Integer)
2024-10-31 09:50:25 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT COUNT(*), A.*,  M.nickname AS extra__writer
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	WHERE 1

		AND A.boardId = 1

	ORDER BY A.id DESC;
 {executed in 1 msec}
2024-10-31 09:50:25 [INFO ] jdbc.resultsettable - 
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|count(*) |id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|3        |1  |2024-09-07T22:42:47 |2024-09-07T22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|

2024-10-31 09:50:25 [DEBUG] c.e.d.r.A.getArticleCount - <==      Total: 1
2024-10-31 09:50:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c0d51e2]
2024-10-31 09:50:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@578a0b62] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:25 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1109439434 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:25 [DEBUG] c.e.d.r.A.getForPrintArticles - ==>  Preparing: SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id LEFT JOIN `reply` AS R ON A.id = R.relId WHERE 1 AND boardId = ? GROUP BY A.id ORDER BY A.id DESC LIMIT ?, ?
2024-10-31 09:50:25 [DEBUG] c.e.d.r.A.getForPrintArticles - ==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2024-10-31 09:50:25 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	LEFT JOIN `reply` AS R
	ON A.id = R.relId
	WHERE 1

		AND boardId = 1

	GROUP BY A.id
	ORDER BY A.id DESC

		LIMIT 0, 10
 {executed in 14 msec}
2024-10-31 09:50:25 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |extra__repliescount |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|9  |2024-09-09 23:08:49 |2024-09-09 23:08:49 |2        |1       |sdf   |sdf  |0        |0                 |0                |회원1_닉네임  |0                   |
|2  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목2   |내용2  |0        |1                 |1                |회원1_닉네임  |1                   |
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |3                   |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|

2024-10-31 09:50:25 [DEBUG] c.e.d.r.A.getForPrintArticles - <==      Total: 3
2024-10-31 09:50:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@578a0b62]
2024-10-31 09:50:26 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:26 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@542027f5] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:26 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:26 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@918846847 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:26 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:50:26 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:50:26 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 09:50:26 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:50:26 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:50:26 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@542027f5]
2024-10-31 09:50:27 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:27 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15d2a0fc] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:27 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:27 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@204758356 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:27 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:50:27 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:50:27 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:50:27 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:50:27 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:50:27 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15d2a0fc]
2024-10-31 09:50:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36ac06dc] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:33 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1405996864 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:50:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:50:33 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:50:33 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:50:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:50:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36ac06dc]
2024-10-31 09:50:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a94928a] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:33 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1255086366 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:33 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 09:50:33 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 09:50:33 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 15 msec}
2024-10-31 09:50:33 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 09:50:33 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 09:50:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a94928a]
2024-10-31 09:50:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13eb7781] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:33 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@562313301 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:33 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 09:50:33 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 09:50:33 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 11 msec}
2024-10-31 09:50:33 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 09:50:33 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 09:50:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13eb7781]
2024-10-31 09:50:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:50:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:50:41 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:41 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68938401] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:41 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:41 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1192411115 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:41 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:50:41 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:50:41 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:50:41 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:50:41 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:50:41 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68938401]
2024-10-31 09:50:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@701a6ef6] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:43 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:43 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@972960546 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:43 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:50:43 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 3(Integer)
2024-10-31 09:50:43 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 3
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 09:50:43 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-----|----------|--------|
|id |regdate             |updatedate          |code |name |delstatus |deldate |
|---|--------------------|--------------------|-----|-----|----------|--------|
|3  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |QnA  |질의응답 |false     |null    |
|---|--------------------|--------------------|-----|-----|----------|--------|

2024-10-31 09:50:43 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:50:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@701a6ef6]
2024-10-31 09:50:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682c42f7] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:43 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:43 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2061429161 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:43 [DEBUG] c.e.d.r.A.getArticleCount - ==>  Preparing: SELECT COUNT(*), A.*, M.nickname AS extra__writer FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id WHERE 1 AND A.boardId = ? ORDER BY A.id DESC;
2024-10-31 09:50:43 [DEBUG] c.e.d.r.A.getArticleCount - ==> Parameters: 3(Integer)
2024-10-31 09:50:43 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT COUNT(*), A.*,  M.nickname AS extra__writer
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	WHERE 1

		AND A.boardId = 3

	ORDER BY A.id DESC;
 {executed in 1 msec}
2024-10-31 09:50:43 [INFO ] jdbc.resultsettable - 
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|count(*) |id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|1        |4  |2024-09-07T22:42:47 |2024-09-07T22:42:47 |3        |3       |제목4   |내용4  |0        |0                 |0                |회원2_닉네임  |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|

2024-10-31 09:50:43 [DEBUG] c.e.d.r.A.getArticleCount - <==      Total: 1
2024-10-31 09:50:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682c42f7]
2024-10-31 09:50:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ed8736a] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:43 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:43 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@60545920 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:43 [DEBUG] c.e.d.r.A.getForPrintArticles - ==>  Preparing: SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id LEFT JOIN `reply` AS R ON A.id = R.relId WHERE 1 AND boardId = ? GROUP BY A.id ORDER BY A.id DESC LIMIT ?, ?
2024-10-31 09:50:43 [DEBUG] c.e.d.r.A.getForPrintArticles - ==> Parameters: 3(Integer), 0(Integer), 10(Integer)
2024-10-31 09:50:43 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	LEFT JOIN `reply` AS R
	ON A.id = R.relId
	WHERE 1

		AND boardId = 3

	GROUP BY A.id
	ORDER BY A.id DESC

		LIMIT 0, 10
 {executed in 15 msec}
2024-10-31 09:50:43 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |extra__repliescount |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |3        |3       |제목4   |내용4  |0        |0                 |0                |회원2_닉네임  |0                   |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|

2024-10-31 09:50:43 [DEBUG] c.e.d.r.A.getForPrintArticles - <==      Total: 1
2024-10-31 09:50:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ed8736a]
2024-10-31 09:50:44 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:44 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@533fe744] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:44 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:44 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@437407921 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:44 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:50:44 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:50:44 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:50:44 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:50:44 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:50:44 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@533fe744]
2024-10-31 09:50:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b4145d3] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:47 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:47 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@858435365 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:47 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:50:47 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:50:47 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:50:47 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:50:47 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:50:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b4145d3]
2024-10-31 09:50:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d9fe241] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:48 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:48 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@8802585 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:48 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:50:48 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 1(Integer)
2024-10-31 09:50:48 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 1
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:50:48 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-------|-----|----------|--------|
|id |regdate             |updatedate          |code   |name |delstatus |deldate |
|---|--------------------|--------------------|-------|-----|----------|--------|
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |NOTICE |공지사항 |false     |null    |
|---|--------------------|--------------------|-------|-----|----------|--------|

2024-10-31 09:50:48 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:50:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d9fe241]
2024-10-31 09:50:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@326df48e] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:48 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:48 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1964910497 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:48 [DEBUG] c.e.d.r.A.getArticleCount - ==>  Preparing: SELECT COUNT(*), A.*, M.nickname AS extra__writer FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id WHERE 1 AND A.boardId = ? ORDER BY A.id DESC;
2024-10-31 09:50:48 [DEBUG] c.e.d.r.A.getArticleCount - ==> Parameters: 1(Integer)
2024-10-31 09:50:48 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT COUNT(*), A.*,  M.nickname AS extra__writer
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	WHERE 1

		AND A.boardId = 1

	ORDER BY A.id DESC;
 {executed in 1 msec}
2024-10-31 09:50:48 [INFO ] jdbc.resultsettable - 
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|count(*) |id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|3        |1  |2024-09-07T22:42:47 |2024-09-07T22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|

2024-10-31 09:50:48 [DEBUG] c.e.d.r.A.getArticleCount - <==      Total: 1
2024-10-31 09:50:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@326df48e]
2024-10-31 09:50:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:50:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31490fa] was not registered for synchronization because synchronization is not active
2024-10-31 09:50:48 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:50:48 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@675742837 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:50:48 [DEBUG] c.e.d.r.A.getForPrintArticles - ==>  Preparing: SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id LEFT JOIN `reply` AS R ON A.id = R.relId WHERE 1 AND boardId = ? GROUP BY A.id ORDER BY A.id DESC LIMIT ?, ?
2024-10-31 09:50:48 [DEBUG] c.e.d.r.A.getForPrintArticles - ==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2024-10-31 09:50:48 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	LEFT JOIN `reply` AS R
	ON A.id = R.relId
	WHERE 1

		AND boardId = 1

	GROUP BY A.id
	ORDER BY A.id DESC

		LIMIT 0, 10
 {executed in 13 msec}
2024-10-31 09:50:48 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |extra__repliescount |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|9  |2024-09-09 23:08:49 |2024-09-09 23:08:49 |2        |1       |sdf   |sdf  |0        |0                 |0                |회원1_닉네임  |0                   |
|2  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목2   |내용2  |0        |1                 |1                |회원1_닉네임  |1                   |
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |3                   |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|

2024-10-31 09:50:48 [DEBUG] c.e.d.r.A.getForPrintArticles - <==      Total: 3
2024-10-31 09:50:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31490fa]
2024-10-31 09:51:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:51:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5470e99a] was not registered for synchronization because synchronization is not active
2024-10-31 09:51:00 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:51:00 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1475688669 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:51:00 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:51:00 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:51:00 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:51:00 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:51:00 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:51:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5470e99a]
2024-10-31 09:51:02 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:51:02 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f934f2e] was not registered for synchronization because synchronization is not active
2024-10-31 09:51:02 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:51:02 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@668912646 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:51:02 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:51:02 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:51:02 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 09:51:02 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:51:02 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:51:02 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f934f2e]
2024-10-31 09:51:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:51:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4222c84b] was not registered for synchronization because synchronization is not active
2024-10-31 09:51:03 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:51:03 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1351916134 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:51:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:51:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:51:03 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 09:51:03 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:51:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:51:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4222c84b]
2024-10-31 09:51:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:51:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d765085] was not registered for synchronization because synchronization is not active
2024-10-31 09:51:03 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:51:03 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@547834101 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:51:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:51:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:51:03 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:51:03 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:51:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:51:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d765085]
2024-10-31 09:51:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:51:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fd0e7a3] was not registered for synchronization because synchronization is not active
2024-10-31 09:51:03 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:51:03 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1812946099 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:51:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:51:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:51:03 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 09:51:03 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:51:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:51:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fd0e7a3]
2024-10-31 09:51:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:51:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5862f3b3] was not registered for synchronization because synchronization is not active
2024-10-31 09:51:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:51:07 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1757297966 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66] will not be managed by Spring
2024-10-31 09:51:07 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:51:07 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:51:07 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 09:51:07 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:51:07 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:51:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5862f3b3]
2024-10-31 09:51:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:51:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:51:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:51:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:52:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:52:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:52:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:52:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:53:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:53:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:53:26 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@16dd3f66: (connection has passed maxLifetime)
2024-10-31 09:53:26 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574
2024-10-31 09:53:26 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@41b37cc3: (connection has passed maxLifetime)
2024-10-31 09:53:26 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4eac8f4f
2024-10-31 09:53:28 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6796f708: (connection has passed maxLifetime)
2024-10-31 09:53:28 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7f28827c
2024-10-31 09:53:34 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@17479f78: (connection has passed maxLifetime)
2024-10-31 09:53:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@50720827
2024-10-31 09:53:36 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@62d4b68d: (connection has passed maxLifetime)
2024-10-31 09:53:36 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@114f021c
2024-10-31 09:53:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:53:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:53:55 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5619e7aa: (connection has passed maxLifetime)
2024-10-31 09:53:55 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5ebece29
2024-10-31 09:53:57 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4684027c: (connection has passed maxLifetime)
2024-10-31 09:53:57 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1f83c412
2024-10-31 09:54:01 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@42ca3859: (connection has passed maxLifetime)
2024-10-31 09:54:01 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2e56bf47
2024-10-31 09:54:05 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@26abfd33: (connection has passed maxLifetime)
2024-10-31 09:54:05 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7fac3b5d
2024-10-31 09:54:06 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3b0db8cb: (connection has passed maxLifetime)
2024-10-31 09:54:06 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6d120794
2024-10-31 09:54:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:54:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:54:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:54:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:55:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:55:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:55:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:55:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cdae21f] was not registered for synchronization because synchronization is not active
2024-10-31 09:55:39 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:55:39 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1916671417 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 09:55:39 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:55:39 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:55:39 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:55:39 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:55:39 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:55:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cdae21f]
2024-10-31 09:55:41 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:55:41 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55af8214] was not registered for synchronization because synchronization is not active
2024-10-31 09:55:41 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:55:41 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@755067657 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 09:55:41 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:55:41 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:55:41 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:55:41 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:55:41 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:55:41 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55af8214]
2024-10-31 09:55:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:55:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:55:41 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:55:41 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5945ac5] was not registered for synchronization because synchronization is not active
2024-10-31 09:55:41 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:55:41 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@30711543 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 09:55:41 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:55:41 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:55:41 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 09:55:41 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:55:41 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:55:41 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5945ac5]
2024-10-31 09:55:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:55:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17b2d25b] was not registered for synchronization because synchronization is not active
2024-10-31 09:55:42 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:55:42 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@986915423 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 09:55:42 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:55:42 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:55:42 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:55:42 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:55:42 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:55:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17b2d25b]
2024-10-31 09:55:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:55:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e317f64] was not registered for synchronization because synchronization is not active
2024-10-31 09:55:42 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:55:42 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@844561570 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 09:55:42 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:55:42 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:55:42 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 09:55:42 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:55:42 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:55:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e317f64]
2024-10-31 09:55:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:55:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10ff0f8e] was not registered for synchronization because synchronization is not active
2024-10-31 09:55:42 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:55:42 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@653774397 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 09:55:42 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:55:42 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:55:42 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:55:42 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:55:42 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:55:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10ff0f8e]
2024-10-31 09:55:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:55:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30e9ef0f] was not registered for synchronization because synchronization is not active
2024-10-31 09:55:42 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:55:42 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@522321751 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 09:55:42 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:55:42 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:55:42 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:55:42 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:55:42 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:55:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30e9ef0f]
2024-10-31 09:55:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:55:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77f2ebcf] was not registered for synchronization because synchronization is not active
2024-10-31 09:55:43 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:55:43 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@182496102 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 09:55:43 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:55:43 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:55:43 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:55:43 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:55:43 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:55:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77f2ebcf]
2024-10-31 09:56:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:56:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:56:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:56:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65127f85] was not registered for synchronization because synchronization is not active
2024-10-31 09:56:24 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:56:24 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@629172402 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 09:56:24 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:56:24 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:56:24 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 09:56:24 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:56:24 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:56:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65127f85]
2024-10-31 09:56:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:56:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:56:57 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:56:57 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dfb3c0d] was not registered for synchronization because synchronization is not active
2024-10-31 09:56:57 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:56:57 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1246773011 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 09:56:57 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:56:57 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:56:57 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 09:56:57 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:56:57 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:56:57 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dfb3c0d]
2024-10-31 09:56:57 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:56:57 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4321e4b6] was not registered for synchronization because synchronization is not active
2024-10-31 09:56:57 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:56:57 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@407834807 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 09:56:57 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 09:56:57 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 09:56:57 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 09:56:57 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 09:56:57 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 09:56:57 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4321e4b6]
2024-10-31 09:56:57 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:56:57 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a92713e] was not registered for synchronization because synchronization is not active
2024-10-31 09:56:57 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:56:57 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@939044267 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 09:56:57 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 09:56:57 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 09:56:57 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 14 msec}
2024-10-31 09:56:57 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 09:56:57 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 09:56:57 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a92713e]
2024-10-31 09:56:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:56:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38283847] was not registered for synchronization because synchronization is not active
2024-10-31 09:56:58 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:56:58 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@959010175 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 09:56:58 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 09:56:58 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 29(Integer)
2024-10-31 09:56:58 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 29
 {executed in 1 msec}
2024-10-31 09:56:58 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                    |body                                 |nickname |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요? |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|

2024-10-31 09:56:58 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 09:56:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38283847]
2024-10-31 09:57:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:57:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50d99642] was not registered for synchronization because synchronization is not active
2024-10-31 09:57:00 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:57:00 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1174702785 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 09:57:00 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 09:57:00 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 29(Integer)
2024-10-31 09:57:00 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 29
 {executed in 0 msec}
2024-10-31 09:57:00 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                    |body                                 |nickname |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요? |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|

2024-10-31 09:57:00 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 09:57:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50d99642]
2024-10-31 09:57:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:57:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c172f84] was not registered for synchronization because synchronization is not active
2024-10-31 09:57:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:57:07 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1117809090 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 09:57:07 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 09:57:07 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 09:57:07 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 09:57:07 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 09:57:07 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 09:57:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c172f84]
2024-10-31 09:57:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:57:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2598e2f8] was not registered for synchronization because synchronization is not active
2024-10-31 09:57:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:57:07 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@269144440 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 09:57:07 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 09:57:07 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 09:57:07 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 0 msec}
2024-10-31 09:57:07 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 09:57:07 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 09:57:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2598e2f8]
2024-10-31 09:57:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 09:57:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c530045] was not registered for synchronization because synchronization is not active
2024-10-31 09:57:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 09:57:07 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@811801217 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 09:57:07 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 09:57:07 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 09:57:07 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 15 msec}
2024-10-31 09:57:07 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 09:57:07 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 09:57:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c530045]
2024-10-31 09:57:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:57:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:57:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:57:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:58:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:58:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:58:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:58:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:59:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:59:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 09:59:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 09:59:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:00:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:00:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:00:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:00:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:01:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:01:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:01:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:01:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:02:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:02:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:02:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:02:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:03:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:03:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:03:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:03:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:04:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:04:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:04:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:04:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:05:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:05:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:05:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:05:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:06:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:06:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:06:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:06:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:06:54 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:06:54 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@205e7ef6] was not registered for synchronization because synchronization is not active
2024-10-31 10:06:54 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:06:54 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1006362943 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:06:54 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:06:54 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:06:54 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:06:54 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:06:54 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:06:54 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@205e7ef6]
2024-10-31 10:06:54 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:06:54 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1af86cc3] was not registered for synchronization because synchronization is not active
2024-10-31 10:06:54 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:06:54 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@935320243 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:06:54 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:06:54 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:06:54 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 2 msec}
2024-10-31 10:06:54 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:06:54 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:06:54 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1af86cc3]
2024-10-31 10:06:54 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:06:54 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f4a8a64] was not registered for synchronization because synchronization is not active
2024-10-31 10:06:54 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:06:54 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@341256093 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:06:54 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:06:54 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:06:54 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 20 msec}
2024-10-31 10:06:54 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:06:54 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:06:54 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f4a8a64]
2024-10-31 10:06:54 [ERROR] o.a.c.c.C.[.[localhost].[/].[jsp] - Servlet.service() for servlet [jsp] threw exception
jakarta.el.PropertyNotFoundException: Property [category] not found on type [com.example.demo.vo.Faq]
	at jakarta.el.BeanELResolver$BeanProperties.get(BeanELResolver.java:261)
	at jakarta.el.BeanELResolver.property(BeanELResolver.java:330)
	at jakarta.el.BeanELResolver.getValue(BeanELResolver.java:99)
	at org.apache.jasper.el.JasperELResolver.getValue(JasperELResolver.java:130)
	at org.apache.el.parser.AstValue.getValue(AstValue.java:169)
	at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:170)
	at org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:701)
	at org.apache.jsp.WEB_002dINF.jsp.usr.faq.list_jsp._jspx_meth_c_005fforEach_005f0(list_jsp.java:512)
	at org.apache.jsp.WEB_002dINF.jsp.usr.faq.list_jsp._jspService(list_jsp.java:275)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:67)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:456)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:377)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:325)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:632)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:408)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:330)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:267)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:314)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1432)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1168)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-10-31 10:06:54 [ERROR] o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [An exception occurred processing [/WEB-INF/jsp/usr/faq/list.jsp] at line [35]

32:                 <c:forEach var="faq" items="${faqs}">
33:                     <tr class="border-b border-gray-200 hover:bg-gray-50">
34:                         <td class="py-3">${faq.id}</td>
35:                         <td class="py-3">${faq.category}</td>
36:                         <td class="py-3">
37:                             <a href="javascript:void(0);" onclick="loadFaqDetail(${faq.id});" class="text-blue-500 hover:underline">${faq.title}</a>
38:                         </td>


Stacktrace:] with root cause
jakarta.el.PropertyNotFoundException: Property [category] not found on type [com.example.demo.vo.Faq]
	at jakarta.el.BeanELResolver$BeanProperties.get(BeanELResolver.java:261)
	at jakarta.el.BeanELResolver.property(BeanELResolver.java:330)
	at jakarta.el.BeanELResolver.getValue(BeanELResolver.java:99)
	at org.apache.jasper.el.JasperELResolver.getValue(JasperELResolver.java:130)
	at org.apache.el.parser.AstValue.getValue(AstValue.java:169)
	at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:170)
	at org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:701)
	at org.apache.jsp.WEB_002dINF.jsp.usr.faq.list_jsp._jspx_meth_c_005fforEach_005f0(list_jsp.java:512)
	at org.apache.jsp.WEB_002dINF.jsp.usr.faq.list_jsp._jspService(list_jsp.java:275)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:67)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:456)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:377)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:325)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:632)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:408)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:330)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:267)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:314)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1432)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1168)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-10-31 10:06:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:06:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@618dc3c6] was not registered for synchronization because synchronization is not active
2024-10-31 10:06:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:06:55 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@728471950 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:06:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:06:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:06:55 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:06:55 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:06:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:06:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@618dc3c6]
2024-10-31 10:06:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:06:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7593a136] was not registered for synchronization because synchronization is not active
2024-10-31 10:06:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:06:55 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@584577692 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:06:55 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:06:55 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:06:55 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:06:55 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:06:55 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:06:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7593a136]
2024-10-31 10:06:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:06:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d5910b6] was not registered for synchronization because synchronization is not active
2024-10-31 10:06:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:06:55 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1607667674 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:06:55 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:06:55 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:06:55 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 15 msec}
2024-10-31 10:06:55 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:06:55 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:06:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d5910b6]
2024-10-31 10:06:55 [ERROR] o.a.c.c.C.[.[localhost].[/].[jsp] - Servlet.service() for servlet [jsp] threw exception
jakarta.el.PropertyNotFoundException: Property [category] not found on type [com.example.demo.vo.Faq]
	at jakarta.el.BeanELResolver$BeanProperties.get(BeanELResolver.java:261)
	at jakarta.el.BeanELResolver.property(BeanELResolver.java:330)
	at jakarta.el.BeanELResolver.getValue(BeanELResolver.java:99)
	at org.apache.jasper.el.JasperELResolver.getValue(JasperELResolver.java:130)
	at org.apache.el.parser.AstValue.getValue(AstValue.java:169)
	at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:170)
	at org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:701)
	at org.apache.jsp.WEB_002dINF.jsp.usr.faq.list_jsp._jspx_meth_c_005fforEach_005f0(list_jsp.java:512)
	at org.apache.jsp.WEB_002dINF.jsp.usr.faq.list_jsp._jspService(list_jsp.java:275)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:67)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:456)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:377)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:325)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:632)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:408)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:330)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:267)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:314)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1432)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1168)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-10-31 10:06:55 [ERROR] o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [An exception occurred processing [/WEB-INF/jsp/usr/faq/list.jsp] at line [35]

32:                 <c:forEach var="faq" items="${faqs}">
33:                     <tr class="border-b border-gray-200 hover:bg-gray-50">
34:                         <td class="py-3">${faq.id}</td>
35:                         <td class="py-3">${faq.category}</td>
36:                         <td class="py-3">
37:                             <a href="javascript:void(0);" onclick="loadFaqDetail(${faq.id});" class="text-blue-500 hover:underline">${faq.title}</a>
38:                         </td>


Stacktrace:] with root cause
jakarta.el.PropertyNotFoundException: Property [category] not found on type [com.example.demo.vo.Faq]
	at jakarta.el.BeanELResolver$BeanProperties.get(BeanELResolver.java:261)
	at jakarta.el.BeanELResolver.property(BeanELResolver.java:330)
	at jakarta.el.BeanELResolver.getValue(BeanELResolver.java:99)
	at org.apache.jasper.el.JasperELResolver.getValue(JasperELResolver.java:130)
	at org.apache.el.parser.AstValue.getValue(AstValue.java:169)
	at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:170)
	at org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:701)
	at org.apache.jsp.WEB_002dINF.jsp.usr.faq.list_jsp._jspx_meth_c_005fforEach_005f0(list_jsp.java:512)
	at org.apache.jsp.WEB_002dINF.jsp.usr.faq.list_jsp._jspService(list_jsp.java:275)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:67)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:456)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:377)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:325)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:632)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:408)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:330)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:267)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:314)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1432)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1168)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-10-31 10:07:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:07:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37aa01c6] was not registered for synchronization because synchronization is not active
2024-10-31 10:07:00 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:07:00 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1373670448 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:07:00 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:07:00 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:07:00 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:07:00 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:07:00 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:07:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37aa01c6]
2024-10-31 10:07:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:07:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72c00ef] was not registered for synchronization because synchronization is not active
2024-10-31 10:07:00 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:07:00 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1438311134 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:07:00 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:07:00 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:07:00 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:07:00 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:07:00 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:07:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72c00ef]
2024-10-31 10:07:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:07:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@783c8862] was not registered for synchronization because synchronization is not active
2024-10-31 10:07:00 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:07:00 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@89847118 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:07:00 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:07:00 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:07:00 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 12 msec}
2024-10-31 10:07:00 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:07:00 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:07:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@783c8862]
2024-10-31 10:07:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:07:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f94e7fd] was not registered for synchronization because synchronization is not active
2024-10-31 10:07:03 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:07:03 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@511400547 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:07:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:07:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:07:03 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:07:03 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:07:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:07:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f94e7fd]
2024-10-31 10:07:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:07:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:07:29 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:07:29 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5efebb5e] was not registered for synchronization because synchronization is not active
2024-10-31 10:07:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:07:29 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@997995180 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:07:29 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:07:29 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:07:29 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:07:29 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:07:29 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:07:29 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5efebb5e]
2024-10-31 10:07:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:07:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:07:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:07:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7036e6f5] was not registered for synchronization because synchronization is not active
2024-10-31 10:07:43 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:07:43 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@249558373 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:07:43 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:07:43 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:07:43 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:07:43 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:07:43 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:07:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7036e6f5]
2024-10-31 10:07:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:07:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c38eee] was not registered for synchronization because synchronization is not active
2024-10-31 10:07:43 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:07:43 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1136672598 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:07:43 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:07:43 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:07:43 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:07:43 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:07:43 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:07:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c38eee]
2024-10-31 10:07:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:07:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15317172] was not registered for synchronization because synchronization is not active
2024-10-31 10:07:43 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:07:43 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@151097622 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:07:43 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:07:43 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:07:43 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 18 msec}
2024-10-31 10:07:43 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:07:43 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:07:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15317172]
2024-10-31 10:08:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:08:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:08:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c34336e] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:32 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:32 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@907086747 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:32 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:08:32 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:08:32 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:08:32 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:08:32 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:08:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c34336e]
2024-10-31 10:08:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a2b6afc] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:32 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:32 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@263581622 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:32 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:08:32 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:08:32 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:08:32 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:08:32 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:08:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a2b6afc]
2024-10-31 10:08:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35ce7faf] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:32 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:32 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@606920194 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:32 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:08:32 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:08:32 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 14 msec}
2024-10-31 10:08:32 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:08:32 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:08:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35ce7faf]
2024-10-31 10:08:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fe472bf] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:33 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@522913829 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:08:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:08:33 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:08:33 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:08:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:08:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fe472bf]
2024-10-31 10:08:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20243b05] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:33 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1468285126 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:33 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:08:33 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:08:33 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:08:33 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:08:33 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:08:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20243b05]
2024-10-31 10:08:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@689bf33] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:33 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1540967301 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:33 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:08:33 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:08:33 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 14 msec}
2024-10-31 10:08:33 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:08:33 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:08:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@689bf33]
2024-10-31 10:08:34 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:34 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@494c8aa7] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:34 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:34 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@523806965 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:34 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:08:34 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:08:34 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:08:34 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:08:34 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:08:34 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@494c8aa7]
2024-10-31 10:08:36 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:36 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58dbc3f7] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:36 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:36 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@207970323 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:36 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:08:36 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 1(Integer)
2024-10-31 10:08:36 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 1
AND delStatus = 0
 {executed in 2 msec}
2024-10-31 10:08:36 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-------|-----|----------|--------|
|id |regdate             |updatedate          |code   |name |delstatus |deldate |
|---|--------------------|--------------------|-------|-----|----------|--------|
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |NOTICE |공지사항 |false     |null    |
|---|--------------------|--------------------|-------|-----|----------|--------|

2024-10-31 10:08:36 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:08:36 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58dbc3f7]
2024-10-31 10:08:36 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:36 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@125d545f] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:36 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:36 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@938276762 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:36 [DEBUG] c.e.d.r.A.getArticleCount - ==>  Preparing: SELECT COUNT(*), A.*, M.nickname AS extra__writer FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id WHERE 1 AND A.boardId = ? ORDER BY A.id DESC;
2024-10-31 10:08:36 [DEBUG] c.e.d.r.A.getArticleCount - ==> Parameters: 1(Integer)
2024-10-31 10:08:36 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*), A.*,  M.nickname AS extra__writer
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	WHERE 1

		AND A.boardId = 1

	ORDER BY A.id DESC;
 {executed in 1 msec}
2024-10-31 10:08:36 [INFO ] jdbc.resultsettable - 
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|count(*) |id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|3        |1  |2024-09-07T22:42:47 |2024-09-07T22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|

2024-10-31 10:08:36 [DEBUG] c.e.d.r.A.getArticleCount - <==      Total: 1
2024-10-31 10:08:36 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@125d545f]
2024-10-31 10:08:36 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:36 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@650274a5] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:36 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:36 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1465928396 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:36 [DEBUG] c.e.d.r.A.getForPrintArticles - ==>  Preparing: SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id LEFT JOIN `reply` AS R ON A.id = R.relId WHERE 1 AND boardId = ? GROUP BY A.id ORDER BY A.id DESC LIMIT ?, ?
2024-10-31 10:08:36 [DEBUG] c.e.d.r.A.getForPrintArticles - ==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2024-10-31 10:08:36 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	LEFT JOIN `reply` AS R
	ON A.id = R.relId
	WHERE 1

		AND boardId = 1

	GROUP BY A.id
	ORDER BY A.id DESC

		LIMIT 0, 10
 {executed in 18 msec}
2024-10-31 10:08:36 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |extra__repliescount |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|9  |2024-09-09 23:08:49 |2024-09-09 23:08:49 |2        |1       |sdf   |sdf  |0        |0                 |0                |회원1_닉네임  |0                   |
|2  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목2   |내용2  |0        |1                 |1                |회원1_닉네임  |1                   |
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |3                   |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|

2024-10-31 10:08:36 [DEBUG] c.e.d.r.A.getForPrintArticles - <==      Total: 3
2024-10-31 10:08:36 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@650274a5]
2024-10-31 10:08:37 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:37 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aca964d] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:37 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:37 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@83213003 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:37 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:08:37 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 1(Integer)
2024-10-31 10:08:37 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 1
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:08:37 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-------|-----|----------|--------|
|id |regdate             |updatedate          |code   |name |delstatus |deldate |
|---|--------------------|--------------------|-------|-----|----------|--------|
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |NOTICE |공지사항 |false     |null    |
|---|--------------------|--------------------|-------|-----|----------|--------|

2024-10-31 10:08:37 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:08:37 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aca964d]
2024-10-31 10:08:37 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:37 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@781972f9] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:37 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:37 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@627720985 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:37 [DEBUG] c.e.d.r.A.getArticleCount - ==>  Preparing: SELECT COUNT(*), A.*, M.nickname AS extra__writer FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id WHERE 1 AND A.boardId = ? ORDER BY A.id DESC;
2024-10-31 10:08:37 [DEBUG] c.e.d.r.A.getArticleCount - ==> Parameters: 1(Integer)
2024-10-31 10:08:37 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*), A.*,  M.nickname AS extra__writer
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	WHERE 1

		AND A.boardId = 1

	ORDER BY A.id DESC;
 {executed in 1 msec}
2024-10-31 10:08:37 [INFO ] jdbc.resultsettable - 
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|count(*) |id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|3        |1  |2024-09-07T22:42:47 |2024-09-07T22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|

2024-10-31 10:08:37 [DEBUG] c.e.d.r.A.getArticleCount - <==      Total: 1
2024-10-31 10:08:37 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@781972f9]
2024-10-31 10:08:37 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:37 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b8cbdb3] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:37 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:37 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1621221531 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:37 [DEBUG] c.e.d.r.A.getForPrintArticles - ==>  Preparing: SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id LEFT JOIN `reply` AS R ON A.id = R.relId WHERE 1 AND boardId = ? GROUP BY A.id ORDER BY A.id DESC LIMIT ?, ?
2024-10-31 10:08:37 [DEBUG] c.e.d.r.A.getForPrintArticles - ==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2024-10-31 10:08:37 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	LEFT JOIN `reply` AS R
	ON A.id = R.relId
	WHERE 1

		AND boardId = 1

	GROUP BY A.id
	ORDER BY A.id DESC

		LIMIT 0, 10
 {executed in 12 msec}
2024-10-31 10:08:37 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |extra__repliescount |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|9  |2024-09-09 23:08:49 |2024-09-09 23:08:49 |2        |1       |sdf   |sdf  |0        |0                 |0                |회원1_닉네임  |0                   |
|2  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목2   |내용2  |0        |1                 |1                |회원1_닉네임  |1                   |
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |3                   |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|

2024-10-31 10:08:37 [DEBUG] c.e.d.r.A.getForPrintArticles - <==      Total: 3
2024-10-31 10:08:37 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b8cbdb3]
2024-10-31 10:08:38 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:38 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1701f945] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:38 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:38 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1565155302 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:38 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:08:38 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:08:38 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:08:38 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:08:38 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:08:38 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1701f945]
2024-10-31 10:08:38 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:38 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d52fec9] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:38 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:38 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1333601991 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:38 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:08:38 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:08:38 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:08:38 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:08:38 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:08:38 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d52fec9]
2024-10-31 10:08:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34c64547] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:39 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:39 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@803653066 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:39 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:08:39 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:08:39 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:08:39 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:08:39 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:08:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34c64547]
2024-10-31 10:08:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b0b4a56] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:39 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:39 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@424981985 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:39 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:08:39 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:08:39 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:08:39 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:08:39 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:08:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b0b4a56]
2024-10-31 10:08:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@266ddfb1] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:39 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:39 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@691869062 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:39 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:08:39 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:08:39 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:08:39 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:08:39 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:08:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@266ddfb1]
2024-10-31 10:08:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:08:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:08:44 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:44 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d99d3d0] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:44 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:44 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1617512657 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:44 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:08:44 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:08:44 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:08:44 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:08:44 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:08:44 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d99d3d0]
2024-10-31 10:08:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67786db] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:53 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:53 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1820780211 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:53 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:08:53 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:08:53 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:08:53 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:08:53 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:08:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67786db]
2024-10-31 10:08:54 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:54 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6216d3b3] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:54 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:54 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1255557001 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:54 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:08:54 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:08:54 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:08:54 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:08:54 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:08:54 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6216d3b3]
2024-10-31 10:08:54 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:54 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@671edc9c] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:54 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:54 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1243134417 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:54 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:08:54 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:08:54 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:08:54 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:08:54 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:08:54 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@671edc9c]
2024-10-31 10:08:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@607b7031] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:55 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1578172182 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:08:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:08:55 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:08:55 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:08:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:08:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@607b7031]
2024-10-31 10:08:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23ff4fc4] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:55 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1256023469 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:08:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:08:55 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 2 msec}
2024-10-31 10:08:55 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:08:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:08:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23ff4fc4]
2024-10-31 10:08:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8522e4f] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:55 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@289147478 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:08:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:08:55 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:08:55 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:08:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:08:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8522e4f]
2024-10-31 10:08:56 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:56 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@686a4422] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:56 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:56 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@691728087 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:56 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:08:56 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:08:56 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:08:56 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:08:56 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:08:56 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@686a4422]
2024-10-31 10:08:57 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:08:57 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f26ae90] was not registered for synchronization because synchronization is not active
2024-10-31 10:08:57 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:08:57 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@629459544 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:08:57 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:08:57 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:08:57 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:08:57 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:08:57 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:08:57 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f26ae90]
2024-10-31 10:09:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:09:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@305df7cb] was not registered for synchronization because synchronization is not active
2024-10-31 10:09:00 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:09:00 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1526742759 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:09:00 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:09:00 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:09:00 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:09:00 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:09:00 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:09:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@305df7cb]
2024-10-31 10:09:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:09:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d33f757] was not registered for synchronization because synchronization is not active
2024-10-31 10:09:00 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:09:00 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@475061998 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:09:00 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:09:00 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:09:00 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 0 msec}
2024-10-31 10:09:00 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:09:00 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:09:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d33f757]
2024-10-31 10:09:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:09:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2169e10c] was not registered for synchronization because synchronization is not active
2024-10-31 10:09:00 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:09:00 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@238052318 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:09:00 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:09:00 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:09:00 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 17 msec}
2024-10-31 10:09:00 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:09:00 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:09:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2169e10c]
2024-10-31 10:09:00 [ERROR] o.a.c.c.C.[.[localhost].[/].[jsp] - Servlet.service() for servlet [jsp] threw exception
jakarta.el.PropertyNotFoundException: Property [category] not found on type [com.example.demo.vo.Faq]
	at jakarta.el.BeanELResolver$BeanProperties.get(BeanELResolver.java:261)
	at jakarta.el.BeanELResolver.property(BeanELResolver.java:330)
	at jakarta.el.BeanELResolver.getValue(BeanELResolver.java:99)
	at org.apache.jasper.el.JasperELResolver.getValue(JasperELResolver.java:130)
	at org.apache.el.parser.AstValue.getValue(AstValue.java:169)
	at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:170)
	at org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:701)
	at org.apache.jsp.WEB_002dINF.jsp.usr.faq.list_jsp._jspx_meth_c_005fforEach_005f0(list_jsp.java:609)
	at org.apache.jsp.WEB_002dINF.jsp.usr.faq.list_jsp._jspService(list_jsp.java:299)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:67)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:456)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:377)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:325)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:632)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:408)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:330)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:267)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:314)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1432)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1168)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-10-31 10:09:00 [ERROR] o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [An exception occurred processing [/WEB-INF/jsp/usr/faq/list.jsp] at line [78]

75: 				<c:forEach var="faq" items="${faqs}">
76: 					<tr class="border-b border-gray-200 hover:bg-gray-50">
77: 						<td class="py-3">${faq.id}</td>
78: 						<td class="py-3">${faq.category}</td>
79: 						<td class="py-3"><a href="javascript:void(0);" onclick="loadFaqDetail(${faq.id});"
80: 							class="text-blue-500 hover:underline">${faq.title}</a></td>
81: 						<td class="py-3">${faq.regDate.substring(0,10)}</td>


Stacktrace:] with root cause
jakarta.el.PropertyNotFoundException: Property [category] not found on type [com.example.demo.vo.Faq]
	at jakarta.el.BeanELResolver$BeanProperties.get(BeanELResolver.java:261)
	at jakarta.el.BeanELResolver.property(BeanELResolver.java:330)
	at jakarta.el.BeanELResolver.getValue(BeanELResolver.java:99)
	at org.apache.jasper.el.JasperELResolver.getValue(JasperELResolver.java:130)
	at org.apache.el.parser.AstValue.getValue(AstValue.java:169)
	at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:170)
	at org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:701)
	at org.apache.jsp.WEB_002dINF.jsp.usr.faq.list_jsp._jspx_meth_c_005fforEach_005f0(list_jsp.java:609)
	at org.apache.jsp.WEB_002dINF.jsp.usr.faq.list_jsp._jspService(list_jsp.java:299)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:67)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:456)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:377)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:325)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:632)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:408)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:330)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:267)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:314)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1432)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1168)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-10-31 10:09:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:09:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:09:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:09:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:10:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:10:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:10:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:10:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:11:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:11:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:11:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:11:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6376160e] was not registered for synchronization because synchronization is not active
2024-10-31 10:11:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:11:31 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1767824595 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:11:31 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:11:31 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:11:31 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:11:31 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:11:31 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:11:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6376160e]
2024-10-31 10:11:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:11:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:12:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:12:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:12:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:12:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:13:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:13:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:13:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:13:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:14:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:14:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:14:22 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:14:22 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ac10de6] was not registered for synchronization because synchronization is not active
2024-10-31 10:14:22 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:14:22 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@244188544 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:14:22 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:14:22 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:14:22 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:14:22 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:14:22 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:14:22 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ac10de6]
2024-10-31 10:14:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:14:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66c4dc6f] was not registered for synchronization because synchronization is not active
2024-10-31 10:14:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:14:33 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@587648963 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:14:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:14:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:14:33 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:14:33 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:14:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:14:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66c4dc6f]
2024-10-31 10:14:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:14:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7781c28a] was not registered for synchronization because synchronization is not active
2024-10-31 10:14:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:14:33 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@839486248 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:14:33 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:14:33 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:14:33 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:14:33 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:14:33 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:14:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7781c28a]
2024-10-31 10:14:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:14:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33e76457] was not registered for synchronization because synchronization is not active
2024-10-31 10:14:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:14:33 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@502666847 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:14:33 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:14:33 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:14:33 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 18 msec}
2024-10-31 10:14:33 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:14:33 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:14:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33e76457]
2024-10-31 10:14:33 [ERROR] o.a.c.c.C.[.[localhost].[/].[jsp] - Servlet.service() for servlet [jsp] threw exception
jakarta.el.PropertyNotFoundException: Property [category] not found on type [com.example.demo.vo.Faq]
	at jakarta.el.BeanELResolver$BeanProperties.get(BeanELResolver.java:261)
	at jakarta.el.BeanELResolver.property(BeanELResolver.java:330)
	at jakarta.el.BeanELResolver.getValue(BeanELResolver.java:99)
	at org.apache.jasper.el.JasperELResolver.getValue(JasperELResolver.java:130)
	at org.apache.el.parser.AstValue.getValue(AstValue.java:169)
	at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:170)
	at org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:701)
	at org.apache.jsp.WEB_002dINF.jsp.usr.faq.list_jsp._jspx_meth_c_005fforEach_005f0(list_jsp.java:619)
	at org.apache.jsp.WEB_002dINF.jsp.usr.faq.list_jsp._jspService(list_jsp.java:300)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:67)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:456)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:377)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:325)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:632)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:408)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:330)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:267)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:314)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1432)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1168)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-10-31 10:14:33 [ERROR] o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [An exception occurred processing [/WEB-INF/jsp/usr/faq/list.jsp] at line [78]

75:             <c:forEach var="faq" items="${faqs}">
76:                 <tr class="hover" id="faq-${faq.id}">
77:                     <td style="text-align: center;">${faq.id}</td>
78:                     <td style="text-align: center;">${faq.category}</td>
79:                     <td style="text-align: center;">
80:                         <a class="hover:underline" href="javascript:void(0);" onclick="loadFaqDetail(${faq.id});">${faq.title}</a>
81:                     </td>


Stacktrace:] with root cause
jakarta.el.PropertyNotFoundException: Property [category] not found on type [com.example.demo.vo.Faq]
	at jakarta.el.BeanELResolver$BeanProperties.get(BeanELResolver.java:261)
	at jakarta.el.BeanELResolver.property(BeanELResolver.java:330)
	at jakarta.el.BeanELResolver.getValue(BeanELResolver.java:99)
	at org.apache.jasper.el.JasperELResolver.getValue(JasperELResolver.java:130)
	at org.apache.el.parser.AstValue.getValue(AstValue.java:169)
	at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:170)
	at org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:701)
	at org.apache.jsp.WEB_002dINF.jsp.usr.faq.list_jsp._jspx_meth_c_005fforEach_005f0(list_jsp.java:619)
	at org.apache.jsp.WEB_002dINF.jsp.usr.faq.list_jsp._jspService(list_jsp.java:300)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:67)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:456)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:377)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:325)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:632)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:408)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:330)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:267)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:314)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1432)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1168)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-10-31 10:14:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:14:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:15:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:15:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:15:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:15:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:16:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:16:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c86ef4d] was not registered for synchronization because synchronization is not active
2024-10-31 10:16:01 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:16:01 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@139835955 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:16:01 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:16:01 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:16:01 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:16:01 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:16:01 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:16:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c86ef4d]
2024-10-31 10:16:02 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:16:02 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24df9b54] was not registered for synchronization because synchronization is not active
2024-10-31 10:16:02 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:16:02 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1332687769 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:16:02 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:16:02 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:16:02 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:16:02 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:16:02 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:16:02 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24df9b54]
2024-10-31 10:16:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:16:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f58c84c] was not registered for synchronization because synchronization is not active
2024-10-31 10:16:03 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:16:03 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@849153125 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:16:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:16:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:16:03 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:16:03 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:16:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:16:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f58c84c]
2024-10-31 10:16:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:16:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:16:13 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:16:13 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b63632d] was not registered for synchronization because synchronization is not active
2024-10-31 10:16:13 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:16:13 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@99343319 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:16:13 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:16:13 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:16:13 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:16:13 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:16:13 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:16:13 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b63632d]
2024-10-31 10:16:16 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:16:16 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@361a24a4] was not registered for synchronization because synchronization is not active
2024-10-31 10:16:16 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:16:16 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1423879574 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:16:16 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:16:16 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:16:16 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:16:16 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:16:16 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:16:16 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@361a24a4]
2024-10-31 10:16:16 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:16:16 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@548c0742] was not registered for synchronization because synchronization is not active
2024-10-31 10:16:16 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:16:16 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1494431406 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:16:16 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:16:16 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:16:16 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:16:16 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:16:16 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:16:16 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@548c0742]
2024-10-31 10:16:16 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:16:16 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57175d81] was not registered for synchronization because synchronization is not active
2024-10-31 10:16:16 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:16:16 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1180995161 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:16:16 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:16:16 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:16:16 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 16 msec}
2024-10-31 10:16:16 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:16:16 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:16:16 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57175d81]
2024-10-31 10:16:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:16:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:16:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:16:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b9f2abd] was not registered for synchronization because synchronization is not active
2024-10-31 10:16:53 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:16:53 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1872555919 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:16:53 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:16:53 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:16:53 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:16:53 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:16:53 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:16:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b9f2abd]
2024-10-31 10:16:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:16:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@798fd805] was not registered for synchronization because synchronization is not active
2024-10-31 10:16:53 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:16:53 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1967457161 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:16:53 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:16:53 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:16:53 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 0 msec}
2024-10-31 10:16:53 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:16:53 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:16:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@798fd805]
2024-10-31 10:16:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:16:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5924eccb] was not registered for synchronization because synchronization is not active
2024-10-31 10:16:53 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:16:53 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@491058706 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:16:53 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:16:53 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:16:53 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 16 msec}
2024-10-31 10:16:53 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:16:53 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:16:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5924eccb]
2024-10-31 10:17:02 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:17:02 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e66a058] was not registered for synchronization because synchronization is not active
2024-10-31 10:17:02 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:17:02 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@105910853 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:17:02 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:17:02 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:17:02 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:17:02 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:17:02 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:17:02 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e66a058]
2024-10-31 10:17:02 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:17:02 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39aba29c] was not registered for synchronization because synchronization is not active
2024-10-31 10:17:02 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:17:02 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@139059549 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:17:02 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:17:02 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:17:02 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:17:02 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:17:02 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:17:02 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39aba29c]
2024-10-31 10:17:02 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:17:02 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dc0a217] was not registered for synchronization because synchronization is not active
2024-10-31 10:17:02 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:17:02 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1854228843 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:17:02 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:17:02 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:17:02 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 16 msec}
2024-10-31 10:17:02 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:17:02 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:17:02 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dc0a217]
2024-10-31 10:17:08 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:17:08 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22da043e] was not registered for synchronization because synchronization is not active
2024-10-31 10:17:08 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:17:08 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1861872041 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:17:08 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:17:08 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 1(Integer)
2024-10-31 10:17:08 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 1
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:17:08 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-------|-----|----------|--------|
|id |regdate             |updatedate          |code   |name |delstatus |deldate |
|---|--------------------|--------------------|-------|-----|----------|--------|
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |NOTICE |공지사항 |false     |null    |
|---|--------------------|--------------------|-------|-----|----------|--------|

2024-10-31 10:17:08 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:17:08 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22da043e]
2024-10-31 10:17:08 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:17:08 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dee5923] was not registered for synchronization because synchronization is not active
2024-10-31 10:17:08 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:17:08 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1328067593 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:17:08 [DEBUG] c.e.d.r.A.getArticleCount - ==>  Preparing: SELECT COUNT(*), A.*, M.nickname AS extra__writer FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id WHERE 1 AND A.boardId = ? ORDER BY A.id DESC;
2024-10-31 10:17:08 [DEBUG] c.e.d.r.A.getArticleCount - ==> Parameters: 1(Integer)
2024-10-31 10:17:08 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*), A.*,  M.nickname AS extra__writer
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	WHERE 1

		AND A.boardId = 1

	ORDER BY A.id DESC;
 {executed in 1 msec}
2024-10-31 10:17:08 [INFO ] jdbc.resultsettable - 
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|count(*) |id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|3        |1  |2024-09-07T22:42:47 |2024-09-07T22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|

2024-10-31 10:17:08 [DEBUG] c.e.d.r.A.getArticleCount - <==      Total: 1
2024-10-31 10:17:08 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dee5923]
2024-10-31 10:17:08 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:17:08 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f95399b] was not registered for synchronization because synchronization is not active
2024-10-31 10:17:08 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:17:08 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1256712544 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:17:08 [DEBUG] c.e.d.r.A.getForPrintArticles - ==>  Preparing: SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id LEFT JOIN `reply` AS R ON A.id = R.relId WHERE 1 AND boardId = ? GROUP BY A.id ORDER BY A.id DESC LIMIT ?, ?
2024-10-31 10:17:08 [DEBUG] c.e.d.r.A.getForPrintArticles - ==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2024-10-31 10:17:08 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	LEFT JOIN `reply` AS R
	ON A.id = R.relId
	WHERE 1

		AND boardId = 1

	GROUP BY A.id
	ORDER BY A.id DESC

		LIMIT 0, 10
 {executed in 18 msec}
2024-10-31 10:17:08 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |extra__repliescount |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|9  |2024-09-09 23:08:49 |2024-09-09 23:08:49 |2        |1       |sdf   |sdf  |0        |0                 |0                |회원1_닉네임  |0                   |
|2  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목2   |내용2  |0        |1                 |1                |회원1_닉네임  |1                   |
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |3                   |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|

2024-10-31 10:17:08 [DEBUG] c.e.d.r.A.getForPrintArticles - <==      Total: 3
2024-10-31 10:17:08 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f95399b]
2024-10-31 10:17:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:17:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:17:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:17:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4be5e3db] was not registered for synchronization because synchronization is not active
2024-10-31 10:17:24 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:17:24 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1380260374 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:17:24 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:17:24 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:17:24 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:17:24 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:17:24 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:17:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4be5e3db]
2024-10-31 10:17:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:17:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:17:44 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:17:44 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44d8897a] was not registered for synchronization because synchronization is not active
2024-10-31 10:17:44 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:17:44 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@862341289 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:17:44 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:17:44 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:17:44 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:17:44 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:17:44 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:17:44 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44d8897a]
2024-10-31 10:17:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:17:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2887f362] was not registered for synchronization because synchronization is not active
2024-10-31 10:17:47 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:17:47 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1997614720 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:17:47 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:17:47 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:17:47 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:17:47 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:17:47 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:17:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2887f362]
2024-10-31 10:17:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:17:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33e52fdc] was not registered for synchronization because synchronization is not active
2024-10-31 10:17:47 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:17:47 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@348882478 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:17:47 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:17:47 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:17:47 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:17:47 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:17:47 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:17:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33e52fdc]
2024-10-31 10:17:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:17:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33b7d0a7] was not registered for synchronization because synchronization is not active
2024-10-31 10:17:47 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:17:47 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1631601096 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:17:47 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:17:47 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:17:47 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 21 msec}
2024-10-31 10:17:47 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:17:47 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:17:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33b7d0a7]
2024-10-31 10:17:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:17:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b207675] was not registered for synchronization because synchronization is not active
2024-10-31 10:17:58 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:17:58 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2057504483 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:17:58 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:17:58 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:17:58 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:17:58 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:17:58 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:17:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b207675]
2024-10-31 10:17:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:17:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12c7b381] was not registered for synchronization because synchronization is not active
2024-10-31 10:17:58 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:17:58 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@566307695 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:17:58 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:17:58 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:17:58 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:17:58 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:17:58 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:17:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12c7b381]
2024-10-31 10:17:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:17:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@edec98f] was not registered for synchronization because synchronization is not active
2024-10-31 10:17:58 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:17:58 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2060221300 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:17:58 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:17:58 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:17:58 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 15 msec}
2024-10-31 10:17:58 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:17:58 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:17:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@edec98f]
2024-10-31 10:18:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:18:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:18:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:18:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:18:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:18:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78965834] was not registered for synchronization because synchronization is not active
2024-10-31 10:18:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:18:55 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1264595773 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:18:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:18:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:18:55 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:18:55 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:18:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:18:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78965834]
2024-10-31 10:18:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:18:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ed407d9] was not registered for synchronization because synchronization is not active
2024-10-31 10:18:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:18:55 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@880787904 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:18:55 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:18:55 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:18:55 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:18:55 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:18:55 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:18:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ed407d9]
2024-10-31 10:18:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:18:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69e24776] was not registered for synchronization because synchronization is not active
2024-10-31 10:18:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:18:55 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@616780862 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:18:55 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:18:55 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:18:55 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 13 msec}
2024-10-31 10:18:55 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:18:55 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:18:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69e24776]
2024-10-31 10:18:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:18:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a7c11a0] was not registered for synchronization because synchronization is not active
2024-10-31 10:18:58 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:18:58 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1981607925 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:18:58 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:18:58 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:18:58 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:18:58 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:18:58 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:18:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a7c11a0]
2024-10-31 10:18:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:18:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bec568e] was not registered for synchronization because synchronization is not active
2024-10-31 10:18:58 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:18:58 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@701418856 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:18:58 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:18:58 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:18:58 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:18:58 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:18:58 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:18:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bec568e]
2024-10-31 10:18:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:18:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b8f0e94] was not registered for synchronization because synchronization is not active
2024-10-31 10:18:58 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:18:58 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1927622240 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:18:58 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:18:58 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:18:58 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 13 msec}
2024-10-31 10:18:58 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:18:58 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:18:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b8f0e94]
2024-10-31 10:18:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:18:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1673b1bd] was not registered for synchronization because synchronization is not active
2024-10-31 10:18:59 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:18:59 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@837498673 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:18:59 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:18:59 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:18:59 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:18:59 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:18:59 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:18:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1673b1bd]
2024-10-31 10:18:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:18:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@670aa046] was not registered for synchronization because synchronization is not active
2024-10-31 10:18:59 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:18:59 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2098091918 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:18:59 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:18:59 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:18:59 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:18:59 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:18:59 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:18:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@670aa046]
2024-10-31 10:18:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:18:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fca715e] was not registered for synchronization because synchronization is not active
2024-10-31 10:18:59 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:18:59 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1982096224 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:18:59 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:18:59 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:18:59 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 13 msec}
2024-10-31 10:18:59 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:18:59 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:18:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fca715e]
2024-10-31 10:19:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:19:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45e1df9d] was not registered for synchronization because synchronization is not active
2024-10-31 10:19:01 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:19:01 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@964904099 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:19:01 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:19:01 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:19:01 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:19:01 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:19:01 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:19:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45e1df9d]
2024-10-31 10:19:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:19:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@654302f0] was not registered for synchronization because synchronization is not active
2024-10-31 10:19:01 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:19:01 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1568447625 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:19:01 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:19:01 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:19:01 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:19:01 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:19:01 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:19:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@654302f0]
2024-10-31 10:19:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:19:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d863654] was not registered for synchronization because synchronization is not active
2024-10-31 10:19:01 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:19:01 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@632037382 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:19:01 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:19:01 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:19:01 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 11 msec}
2024-10-31 10:19:01 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:19:01 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:19:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d863654]
2024-10-31 10:19:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:19:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c087e09] was not registered for synchronization because synchronization is not active
2024-10-31 10:19:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:19:09 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2055538515 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:19:09 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:19:09 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:19:09 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:19:09 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:19:09 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:19:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c087e09]
2024-10-31 10:19:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:19:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ac66d54] was not registered for synchronization because synchronization is not active
2024-10-31 10:19:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:19:09 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@639664201 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:19:09 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:19:09 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:19:09 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:19:09 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:19:09 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:19:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ac66d54]
2024-10-31 10:19:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:19:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e5c46a1] was not registered for synchronization because synchronization is not active
2024-10-31 10:19:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:19:09 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@352792529 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:19:09 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:19:09 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:19:09 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 15 msec}
2024-10-31 10:19:09 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:19:09 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:19:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e5c46a1]
2024-10-31 10:19:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:19:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:19:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:19:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:20:08 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:20:08 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f2b2d27] was not registered for synchronization because synchronization is not active
2024-10-31 10:20:08 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:20:08 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1810340648 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:20:08 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:20:08 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:20:08 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:20:08 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:20:08 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:20:08 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f2b2d27]
2024-10-31 10:20:08 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:20:08 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@671f250c] was not registered for synchronization because synchronization is not active
2024-10-31 10:20:08 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:20:08 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1113390510 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:20:08 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:20:08 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:20:08 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 0 msec}
2024-10-31 10:20:08 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:20:08 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:20:08 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@671f250c]
2024-10-31 10:20:08 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:20:08 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d7882f0] was not registered for synchronization because synchronization is not active
2024-10-31 10:20:08 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:20:08 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2069922956 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:20:08 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:20:08 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:20:08 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 17 msec}
2024-10-31 10:20:08 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:20:08 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:20:08 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d7882f0]
2024-10-31 10:20:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:20:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:20:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:20:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@691c308a] was not registered for synchronization because synchronization is not active
2024-10-31 10:20:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:20:31 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1467586755 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:20:31 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:20:31 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:20:31 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:20:31 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:20:31 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:20:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@691c308a]
2024-10-31 10:20:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:20:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cdf9ff7] was not registered for synchronization because synchronization is not active
2024-10-31 10:20:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:20:31 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@817244685 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:20:31 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:20:31 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:20:31 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:20:31 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:20:31 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:20:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cdf9ff7]
2024-10-31 10:20:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:20:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f06bd78] was not registered for synchronization because synchronization is not active
2024-10-31 10:20:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:20:31 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@661902741 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:20:31 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:20:31 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:20:31 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 13 msec}
2024-10-31 10:20:31 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:20:31 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:20:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f06bd78]
2024-10-31 10:20:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:20:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:21:04 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:21:04 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78eb0e6f] was not registered for synchronization because synchronization is not active
2024-10-31 10:21:04 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:21:04 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@220194079 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:21:04 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:21:04 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:21:04 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:21:04 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:21:04 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:21:04 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78eb0e6f]
2024-10-31 10:21:04 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:21:04 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8cc487c] was not registered for synchronization because synchronization is not active
2024-10-31 10:21:04 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:21:04 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1323507212 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:21:04 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:21:04 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:21:04 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:21:04 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:21:04 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:21:04 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8cc487c]
2024-10-31 10:21:04 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:21:04 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6878bf2e] was not registered for synchronization because synchronization is not active
2024-10-31 10:21:04 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:21:04 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@380681785 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:21:04 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:21:04 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:21:04 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 17 msec}
2024-10-31 10:21:04 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:21:04 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:21:04 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6878bf2e]
2024-10-31 10:21:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:21:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:21:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:21:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dd186ce] was not registered for synchronization because synchronization is not active
2024-10-31 10:21:32 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:21:32 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@358869614 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:21:32 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:21:32 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:21:32 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:21:32 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:21:32 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:21:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dd186ce]
2024-10-31 10:21:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:21:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40168a27] was not registered for synchronization because synchronization is not active
2024-10-31 10:21:32 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:21:32 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@197216980 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:21:32 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:21:32 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:21:32 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:21:32 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:21:32 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:21:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40168a27]
2024-10-31 10:21:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:21:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ea7d2d4] was not registered for synchronization because synchronization is not active
2024-10-31 10:21:32 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:21:32 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1463327405 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:21:32 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:21:32 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:21:32 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 15 msec}
2024-10-31 10:21:32 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:21:32 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:21:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ea7d2d4]
2024-10-31 10:21:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:21:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:21:49 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:21:49 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3630af20] was not registered for synchronization because synchronization is not active
2024-10-31 10:21:49 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:21:49 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1799350667 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:21:49 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:21:49 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:21:49 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:21:49 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:21:49 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:21:49 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3630af20]
2024-10-31 10:21:49 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:21:49 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7251a173] was not registered for synchronization because synchronization is not active
2024-10-31 10:21:49 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:21:49 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1552054475 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:21:49 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:21:49 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:21:49 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:21:49 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:21:49 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:21:49 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7251a173]
2024-10-31 10:21:49 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:21:49 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7abd3b9b] was not registered for synchronization because synchronization is not active
2024-10-31 10:21:49 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:21:49 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1455025411 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:21:49 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:21:49 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:21:49 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 15 msec}
2024-10-31 10:21:49 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:21:49 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:21:49 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7abd3b9b]
2024-10-31 10:21:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:21:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b194c63] was not registered for synchronization because synchronization is not active
2024-10-31 10:21:51 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:21:51 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@470738375 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:21:51 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:21:51 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:21:51 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:21:51 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:21:51 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:21:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b194c63]
2024-10-31 10:21:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:21:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46836b13] was not registered for synchronization because synchronization is not active
2024-10-31 10:21:51 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:21:51 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@169426609 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:21:51 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:21:51 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:21:51 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:21:51 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:21:51 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:21:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46836b13]
2024-10-31 10:21:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:21:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dc9c0f7] was not registered for synchronization because synchronization is not active
2024-10-31 10:21:51 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:21:51 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1783051290 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:21:51 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:21:51 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:21:51 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 11 msec}
2024-10-31 10:21:51 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:21:51 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:21:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dc9c0f7]
2024-10-31 10:21:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:21:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56be865c] was not registered for synchronization because synchronization is not active
2024-10-31 10:21:51 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:21:51 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2130995238 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:21:51 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:21:51 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:21:51 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:21:51 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:21:51 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:21:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56be865c]
2024-10-31 10:21:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:21:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40747a6c] was not registered for synchronization because synchronization is not active
2024-10-31 10:21:51 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:21:51 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@756912931 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:21:51 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:21:51 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:21:51 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 10:21:51 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:21:51 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:21:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40747a6c]
2024-10-31 10:21:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:21:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e88802f] was not registered for synchronization because synchronization is not active
2024-10-31 10:21:51 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:21:51 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1636271266 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:21:51 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:21:51 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:21:51 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 12 msec}
2024-10-31 10:21:51 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:21:51 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:21:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e88802f]
2024-10-31 10:21:52 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:21:52 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d999704] was not registered for synchronization because synchronization is not active
2024-10-31 10:21:52 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:21:52 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1852470665 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:21:52 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:21:52 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:21:52 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:21:52 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:21:52 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:21:52 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d999704]
2024-10-31 10:21:52 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:21:52 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43f7c1e5] was not registered for synchronization because synchronization is not active
2024-10-31 10:21:52 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:21:52 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1853235677 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:21:52 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:21:52 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:21:52 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 0 msec}
2024-10-31 10:21:52 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:21:52 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:21:52 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43f7c1e5]
2024-10-31 10:21:52 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:21:52 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@653f0c82] was not registered for synchronization because synchronization is not active
2024-10-31 10:21:52 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:21:52 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1223065958 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:21:52 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:21:52 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:21:52 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 12 msec}
2024-10-31 10:21:52 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:21:52 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:21:52 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@653f0c82]
2024-10-31 10:22:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:22:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:22:15 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:22:15 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a4d081] was not registered for synchronization because synchronization is not active
2024-10-31 10:22:15 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:22:15 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@820626225 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:22:15 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:22:15 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:22:15 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:22:15 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:22:15 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:22:15 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a4d081]
2024-10-31 10:22:15 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:22:15 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2efb7ced] was not registered for synchronization because synchronization is not active
2024-10-31 10:22:15 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:22:15 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1559804872 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:22:15 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 10:22:15 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 10:22:15 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 0 msec}
2024-10-31 10:22:15 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 10:22:15 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 10:22:15 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2efb7ced]
2024-10-31 10:22:15 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:22:15 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24bde8e1] was not registered for synchronization because synchronization is not active
2024-10-31 10:22:15 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:22:15 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1310233460 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:22:15 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 10:22:15 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 10:22:15 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 16 msec}
2024-10-31 10:22:15 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 10:22:15 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 10:22:15 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24bde8e1]
2024-10-31 10:22:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:22:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eee6e6e] was not registered for synchronization because synchronization is not active
2024-10-31 10:22:21 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:22:21 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@299290762 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:22:21 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:22:21 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:22:21 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:22:21 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:22:21 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:22:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eee6e6e]
2024-10-31 10:22:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:22:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bc9a1fe] was not registered for synchronization because synchronization is not active
2024-10-31 10:22:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:22:33 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1739363481 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574] will not be managed by Spring
2024-10-31 10:22:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:22:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:22:33 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:22:33 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:22:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:22:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bc9a1fe]
2024-10-31 10:22:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:22:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:22:55 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@114f021c: (connection has passed maxLifetime)
2024-10-31 10:22:55 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4459fabb
2024-10-31 10:22:57 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7f28827c: (connection has passed maxLifetime)
2024-10-31 10:22:57 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@564f080
2024-10-31 10:22:57 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f918574: (connection has passed maxLifetime)
2024-10-31 10:22:57 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@34ab7605
2024-10-31 10:22:57 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4eac8f4f: (connection has passed maxLifetime)
2024-10-31 10:22:57 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@654b0fcf
2024-10-31 10:23:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:23:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:23:23 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7fac3b5d: (connection has passed maxLifetime)
2024-10-31 10:23:23 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@550762d4
2024-10-31 10:23:27 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@50720827: (connection has passed maxLifetime)
2024-10-31 10:23:27 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@143a68ef
2024-10-31 10:23:29 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1f83c412: (connection has passed maxLifetime)
2024-10-31 10:23:29 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@25e4b9b6
2024-10-31 10:23:38 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6d120794: (connection has passed maxLifetime)
2024-10-31 10:23:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1a6cd394
2024-10-31 10:23:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:23:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:23:46 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5ebece29: (connection has passed maxLifetime)
2024-10-31 10:23:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5b1af7a2
2024-10-31 10:23:52 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2e56bf47: (connection has passed maxLifetime)
2024-10-31 10:23:52 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7e9fd295
2024-10-31 10:24:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:24:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:24:29 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:24:29 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60d9e30e] was not registered for synchronization because synchronization is not active
2024-10-31 10:24:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:24:29 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1333866852 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4459fabb] will not be managed by Spring
2024-10-31 10:24:29 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:24:29 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:24:29 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:24:29 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:24:29 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:24:29 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60d9e30e]
2024-10-31 10:24:30 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:24:30 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18fdc985] was not registered for synchronization because synchronization is not active
2024-10-31 10:24:30 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:24:30 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1524305637 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4459fabb] will not be managed by Spring
2024-10-31 10:24:30 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:24:30 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:24:30 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:24:30 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:24:30 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:24:30 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18fdc985]
2024-10-31 10:24:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:24:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47ede911] was not registered for synchronization because synchronization is not active
2024-10-31 10:24:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:24:31 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1504431601 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4459fabb] will not be managed by Spring
2024-10-31 10:24:31 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:24:31 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:24:31 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:24:31 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:24:31 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:24:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47ede911]
2024-10-31 10:24:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:24:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e166a8c] was not registered for synchronization because synchronization is not active
2024-10-31 10:24:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:24:31 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1228762032 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4459fabb] will not be managed by Spring
2024-10-31 10:24:31 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:24:31 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:24:31 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:24:31 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:24:31 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:24:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e166a8c]
2024-10-31 10:24:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:24:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d5626a2] was not registered for synchronization because synchronization is not active
2024-10-31 10:24:32 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:24:32 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1057545998 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4459fabb] will not be managed by Spring
2024-10-31 10:24:32 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:24:32 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:24:32 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:24:32 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:24:32 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:24:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d5626a2]
2024-10-31 10:24:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:24:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13f8267] was not registered for synchronization because synchronization is not active
2024-10-31 10:24:32 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:24:32 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1811777059 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4459fabb] will not be managed by Spring
2024-10-31 10:24:32 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:24:32 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:24:32 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:24:32 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:24:32 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:24:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13f8267]
2024-10-31 10:24:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:24:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7407d99a] was not registered for synchronization because synchronization is not active
2024-10-31 10:24:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:24:33 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2035950007 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4459fabb] will not be managed by Spring
2024-10-31 10:24:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:24:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:24:33 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:24:33 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:24:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:24:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7407d99a]
2024-10-31 10:24:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:24:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:25:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:25:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:25:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:25:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:26:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:26:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:26:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:26:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:27:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:27:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:27:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:27:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:28:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:28:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:28:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:28:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:29:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:29:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:29:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:29:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:30:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:30:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:30:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:30:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:31:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:31:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:31:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:31:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:32:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:32:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:32:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:32:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:33:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:33:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:33:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:33:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:34:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:34:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:34:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:34:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:35:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:35:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:35:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:35:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:36:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:36:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:36:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:36:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:37:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:37:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:37:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:37:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:38:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:38:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:38:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:38:41 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:39:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:39:11 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:39:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:39:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:40:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:40:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:40:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:40:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:41:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:41:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:41:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:41:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:42:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:42:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:42:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:42:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:43:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:43:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:43:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:43:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:44:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:44:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:44:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:44:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:45:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:45:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:45:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:45:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:46:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:46:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:46:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:46:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:47:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:47:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:47:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:47:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:48:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:48:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:48:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:48:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:49:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:49:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:49:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:49:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:50:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:50:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:50:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:50:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:51:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:51:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:51:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:51:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:52:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:52:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:52:19 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@654b0fcf: (connection has passed maxLifetime)
2024-10-31 10:52:19 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693
2024-10-31 10:52:25 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@564f080: (connection has passed maxLifetime)
2024-10-31 10:52:25 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5b2c036b
2024-10-31 10:52:30 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@34ab7605: (connection has passed maxLifetime)
2024-10-31 10:52:30 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1a110950
2024-10-31 10:52:35 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4459fabb: (connection has passed maxLifetime)
2024-10-31 10:52:35 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2bc1f54a
2024-10-31 10:52:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:52:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:52:56 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@550762d4: (connection has passed maxLifetime)
2024-10-31 10:52:56 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@79f12b20
2024-10-31 10:53:04 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1a6cd394: (connection has passed maxLifetime)
2024-10-31 10:53:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@22858cf
2024-10-31 10:53:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:53:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:53:16 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5b1af7a2: (connection has passed maxLifetime)
2024-10-31 10:53:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5f1700de
2024-10-31 10:53:18 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@143a68ef: (connection has passed maxLifetime)
2024-10-31 10:53:18 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1e2a0ae5
2024-10-31 10:53:28 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@25e4b9b6: (connection has passed maxLifetime)
2024-10-31 10:53:28 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1244de59
2024-10-31 10:53:40 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7e9fd295: (connection has passed maxLifetime)
2024-10-31 10:53:40 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6900ef0f
2024-10-31 10:53:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:53:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:54:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:54:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:54:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:54:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:55:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:55:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:55:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:55:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:56:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:56:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:56:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:56:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:57:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:57:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:57:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:57:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:58:04 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:58:04 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@703eb566] was not registered for synchronization because synchronization is not active
2024-10-31 10:58:04 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:58:04 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1370813092 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 10:58:04 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:58:04 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:58:04 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:58:04 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:58:04 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:58:04 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@703eb566]
2024-10-31 10:58:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:58:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:58:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:58:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:58:56 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:58:56 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55e1dd77] was not registered for synchronization because synchronization is not active
2024-10-31 10:58:56 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:58:56 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2015782143 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 10:58:56 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:58:56 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:58:56 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 10:58:56 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:58:56 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:58:56 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55e1dd77]
2024-10-31 10:59:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:59:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 10:59:23 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:59:23 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54d074fb] was not registered for synchronization because synchronization is not active
2024-10-31 10:59:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:59:23 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@874597791 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 10:59:23 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:59:23 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:59:23 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:59:23 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:59:23 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:59:23 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54d074fb]
2024-10-31 10:59:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 10:59:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46ace8bc] was not registered for synchronization because synchronization is not active
2024-10-31 10:59:24 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 10:59:24 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1098675804 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 10:59:24 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 10:59:24 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 10:59:24 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 10:59:24 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 10:59:24 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 10:59:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46ace8bc]
2024-10-31 10:59:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 10:59:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:00:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:00:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:00:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:00:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:00:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:00:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7179126a] was not registered for synchronization because synchronization is not active
2024-10-31 11:00:51 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:00:51 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1676610591 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:00:51 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:00:51 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:00:51 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:00:51 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:00:51 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:00:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7179126a]
2024-10-31 11:01:04 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:01:04 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d91ce80] was not registered for synchronization because synchronization is not active
2024-10-31 11:01:04 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:01:04 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@134276768 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:01:04 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:01:04 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:01:04 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:01:04 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:01:04 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:01:04 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d91ce80]
2024-10-31 11:01:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:01:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:01:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:01:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:02:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:02:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:02:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:02:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:03:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:03:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:03:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:03:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:04:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:04:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:04:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:04:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:05:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:05:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:05:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:05:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:06:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:06:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:06:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:06:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:07:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:07:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:07:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:07:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:08:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:08:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:08:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:08:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:08:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:08:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30dd15cb] was not registered for synchronization because synchronization is not active
2024-10-31 11:08:58 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:08:58 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@67404697 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:08:58 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:08:58 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:08:58 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:08:58 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:08:58 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:08:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30dd15cb]
2024-10-31 11:09:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:09:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:09:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:09:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:10:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:10:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:10:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:10:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42587928] was not registered for synchronization because synchronization is not active
2024-10-31 11:10:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:10:31 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@624515963 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:10:31 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:10:31 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:10:31 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:10:31 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:10:31 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:10:31 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42587928]
2024-10-31 11:10:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:10:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:10:46 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:10:46 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2303ba3f] was not registered for synchronization because synchronization is not active
2024-10-31 11:10:46 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:10:46 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2009451153 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:10:46 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:10:46 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:10:46 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:10:46 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:10:46 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:10:46 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2303ba3f]
2024-10-31 11:11:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:11:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:11:22 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:11:22 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@432d572f] was not registered for synchronization because synchronization is not active
2024-10-31 11:11:22 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:11:22 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@327067457 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:11:22 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:11:22 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:11:22 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:11:22 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:11:22 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:11:22 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@432d572f]
2024-10-31 11:11:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:11:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@681a3992] was not registered for synchronization because synchronization is not active
2024-10-31 11:11:24 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:11:24 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@619093598 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:11:24 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:11:24 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:11:24 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:11:24 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:11:24 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:11:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@681a3992]
2024-10-31 11:11:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:11:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5634f81a] was not registered for synchronization because synchronization is not active
2024-10-31 11:11:32 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:11:32 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@795163581 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:11:32 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:11:32 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:11:32 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:11:32 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:11:32 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:11:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5634f81a]
2024-10-31 11:11:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:11:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45010138] was not registered for synchronization because synchronization is not active
2024-10-31 11:11:32 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:11:32 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@791960402 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:11:32 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:11:32 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:11:32 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:11:32 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:11:32 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:11:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45010138]
2024-10-31 11:11:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:11:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b18b8e] was not registered for synchronization because synchronization is not active
2024-10-31 11:11:32 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:11:32 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1094086663 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:11:32 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:11:32 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:11:32 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 16 msec}
2024-10-31 11:11:32 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:11:32 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:11:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b18b8e]
2024-10-31 11:11:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:11:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:12:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:12:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:12:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:12:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@775967a1] was not registered for synchronization because synchronization is not active
2024-10-31 11:12:12 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:12:12 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1194173462 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:12:12 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:12:12 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:12:12 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:12:12 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:12:12 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:12:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@775967a1]
2024-10-31 11:12:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:12:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a6e418c] was not registered for synchronization because synchronization is not active
2024-10-31 11:12:12 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:12:12 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@320236134 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:12:12 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:12:12 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:12:12 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:12:12 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:12:12 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:12:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a6e418c]
2024-10-31 11:12:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:12:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5da1f133] was not registered for synchronization because synchronization is not active
2024-10-31 11:12:12 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:12:12 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@595132113 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:12:12 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:12:12 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:12:12 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 19 msec}
2024-10-31 11:12:12 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:12:12 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:12:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5da1f133]
2024-10-31 11:12:23 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:12:23 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a2ed777] was not registered for synchronization because synchronization is not active
2024-10-31 11:12:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:12:23 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1768638553 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:12:23 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:12:23 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:12:23 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:12:23 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:12:23 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:12:23 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a2ed777]
2024-10-31 11:12:23 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:12:23 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f0f0791] was not registered for synchronization because synchronization is not active
2024-10-31 11:12:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:12:23 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1170403241 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:12:23 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:12:23 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:12:23 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 0 msec}
2024-10-31 11:12:23 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:12:23 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:12:23 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f0f0791]
2024-10-31 11:12:23 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:12:23 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2adc21b8] was not registered for synchronization because synchronization is not active
2024-10-31 11:12:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:12:23 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@710870926 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:12:23 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:12:23 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:12:23 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 14 msec}
2024-10-31 11:12:23 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:12:23 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:12:23 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2adc21b8]
2024-10-31 11:12:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:12:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62127f9] was not registered for synchronization because synchronization is not active
2024-10-31 11:12:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:12:33 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2096714571 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:12:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:12:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 1(Integer)
2024-10-31 11:12:33 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 1
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:12:33 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-------|-----|----------|--------|
|id |regdate             |updatedate          |code   |name |delstatus |deldate |
|---|--------------------|--------------------|-------|-----|----------|--------|
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |NOTICE |공지사항 |false     |null    |
|---|--------------------|--------------------|-------|-----|----------|--------|

2024-10-31 11:12:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:12:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62127f9]
2024-10-31 11:12:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:12:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79f84c0a] was not registered for synchronization because synchronization is not active
2024-10-31 11:12:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:12:33 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1401517637 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:12:33 [DEBUG] c.e.d.r.A.getArticleCount - ==>  Preparing: SELECT COUNT(*), A.*, M.nickname AS extra__writer FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id WHERE 1 AND A.boardId = ? ORDER BY A.id DESC;
2024-10-31 11:12:33 [DEBUG] c.e.d.r.A.getArticleCount - ==> Parameters: 1(Integer)
2024-10-31 11:12:33 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*), A.*,  M.nickname AS extra__writer
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	WHERE 1

		AND A.boardId = 1

	ORDER BY A.id DESC;
 {executed in 1 msec}
2024-10-31 11:12:33 [INFO ] jdbc.resultsettable - 
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|count(*) |id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|3        |1  |2024-09-07T22:42:47 |2024-09-07T22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|

2024-10-31 11:12:33 [DEBUG] c.e.d.r.A.getArticleCount - <==      Total: 1
2024-10-31 11:12:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79f84c0a]
2024-10-31 11:12:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:12:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@574cc6ad] was not registered for synchronization because synchronization is not active
2024-10-31 11:12:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:12:33 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@937205274 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:12:33 [DEBUG] c.e.d.r.A.getForPrintArticles - ==>  Preparing: SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id LEFT JOIN `reply` AS R ON A.id = R.relId WHERE 1 AND boardId = ? GROUP BY A.id ORDER BY A.id DESC LIMIT ?, ?
2024-10-31 11:12:33 [DEBUG] c.e.d.r.A.getForPrintArticles - ==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2024-10-31 11:12:33 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	LEFT JOIN `reply` AS R
	ON A.id = R.relId
	WHERE 1

		AND boardId = 1

	GROUP BY A.id
	ORDER BY A.id DESC

		LIMIT 0, 10
 {executed in 15 msec}
2024-10-31 11:12:33 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |extra__repliescount |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|9  |2024-09-09 23:08:49 |2024-09-09 23:08:49 |2        |1       |sdf   |sdf  |0        |0                 |0                |회원1_닉네임  |0                   |
|2  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목2   |내용2  |0        |1                 |1                |회원1_닉네임  |1                   |
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |3                   |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|

2024-10-31 11:12:33 [DEBUG] c.e.d.r.A.getForPrintArticles - <==      Total: 3
2024-10-31 11:12:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@574cc6ad]
2024-10-31 11:12:37 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:12:37 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@798f37f0] was not registered for synchronization because synchronization is not active
2024-10-31 11:12:37 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:12:37 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@479276142 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:12:37 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:12:37 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:12:37 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:12:37 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:12:37 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:12:37 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@798f37f0]
2024-10-31 11:12:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:12:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:13:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:13:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:13:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:13:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f775547] was not registered for synchronization because synchronization is not active
2024-10-31 11:13:32 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:13:32 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@676229054 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:13:32 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:13:32 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:13:32 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:13:32 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:13:32 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:13:32 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f775547]
2024-10-31 11:13:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:13:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:14:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:14:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:14:26 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:14:26 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7677bd51] was not registered for synchronization because synchronization is not active
2024-10-31 11:14:26 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:14:26 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1226575877 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:14:26 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:14:26 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:14:26 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:14:26 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:14:26 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:14:26 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7677bd51]
2024-10-31 11:14:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:14:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:15:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:15:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5af3af75] was not registered for synchronization because synchronization is not active
2024-10-31 11:15:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:15:07 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@814120032 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:15:07 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:15:07 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:15:07 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:15:07 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:15:07 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:15:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5af3af75]
2024-10-31 11:15:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:15:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:15:40 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:15:40 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68e3f14e] was not registered for synchronization because synchronization is not active
2024-10-31 11:15:40 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:15:40 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2069250167 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:15:40 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:15:40 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 1(Integer)
2024-10-31 11:15:40 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 1
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:15:40 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-------|-----|----------|--------|
|id |regdate             |updatedate          |code   |name |delstatus |deldate |
|---|--------------------|--------------------|-------|-----|----------|--------|
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |NOTICE |공지사항 |false     |null    |
|---|--------------------|--------------------|-------|-----|----------|--------|

2024-10-31 11:15:40 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:15:40 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68e3f14e]
2024-10-31 11:15:40 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:15:40 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d5d1ba3] was not registered for synchronization because synchronization is not active
2024-10-31 11:15:40 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:15:40 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@3485208 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:15:40 [DEBUG] c.e.d.r.A.getArticleCount - ==>  Preparing: SELECT COUNT(*), A.*, M.nickname AS extra__writer FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id WHERE 1 AND A.boardId = ? ORDER BY A.id DESC;
2024-10-31 11:15:40 [DEBUG] c.e.d.r.A.getArticleCount - ==> Parameters: 1(Integer)
2024-10-31 11:15:40 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*), A.*,  M.nickname AS extra__writer
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	WHERE 1

		AND A.boardId = 1

	ORDER BY A.id DESC;
 {executed in 1 msec}
2024-10-31 11:15:40 [INFO ] jdbc.resultsettable - 
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|count(*) |id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|3        |1  |2024-09-07T22:42:47 |2024-09-07T22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|

2024-10-31 11:15:40 [DEBUG] c.e.d.r.A.getArticleCount - <==      Total: 1
2024-10-31 11:15:40 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d5d1ba3]
2024-10-31 11:15:40 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:15:40 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f527e20] was not registered for synchronization because synchronization is not active
2024-10-31 11:15:40 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:15:40 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1646972889 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:15:40 [DEBUG] c.e.d.r.A.getForPrintArticles - ==>  Preparing: SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id LEFT JOIN `reply` AS R ON A.id = R.relId WHERE 1 AND boardId = ? GROUP BY A.id ORDER BY A.id DESC LIMIT ?, ?
2024-10-31 11:15:40 [DEBUG] c.e.d.r.A.getForPrintArticles - ==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2024-10-31 11:15:40 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	LEFT JOIN `reply` AS R
	ON A.id = R.relId
	WHERE 1

		AND boardId = 1

	GROUP BY A.id
	ORDER BY A.id DESC

		LIMIT 0, 10
 {executed in 18 msec}
2024-10-31 11:15:40 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |extra__repliescount |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|9  |2024-09-09 23:08:49 |2024-09-09 23:08:49 |2        |1       |sdf   |sdf  |0        |0                 |0                |회원1_닉네임  |0                   |
|2  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목2   |내용2  |0        |1                 |1                |회원1_닉네임  |1                   |
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |3                   |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|

2024-10-31 11:15:40 [DEBUG] c.e.d.r.A.getForPrintArticles - <==      Total: 3
2024-10-31 11:15:40 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f527e20]
2024-10-31 11:15:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:15:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:15:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:15:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2270dc9c] was not registered for synchronization because synchronization is not active
2024-10-31 11:15:43 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:15:43 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2058735869 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:15:43 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:15:43 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:15:43 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:15:43 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:15:43 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:15:43 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2270dc9c]
2024-10-31 11:15:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:15:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34c0d7c] was not registered for synchronization because synchronization is not active
2024-10-31 11:15:48 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:15:48 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1162852595 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:15:48 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:15:48 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:15:48 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:15:48 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:15:48 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:15:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34c0d7c]
2024-10-31 11:15:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:15:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72d1ad3d] was not registered for synchronization because synchronization is not active
2024-10-31 11:15:48 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:15:48 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1915626621 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:15:48 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:15:48 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:15:48 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 0 msec}
2024-10-31 11:15:48 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:15:48 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:15:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72d1ad3d]
2024-10-31 11:15:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:15:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73b555ba] was not registered for synchronization because synchronization is not active
2024-10-31 11:15:48 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:15:48 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@195293598 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:15:48 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:15:48 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:15:48 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 16 msec}
2024-10-31 11:15:48 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:15:48 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:15:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73b555ba]
2024-10-31 11:16:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:16:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@387f272] was not registered for synchronization because synchronization is not active
2024-10-31 11:16:06 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:16:06 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@28941075 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:16:06 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:16:06 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:16:06 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:16:06 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:16:06 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:16:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@387f272]
2024-10-31 11:16:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:16:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66280aeb] was not registered for synchronization because synchronization is not active
2024-10-31 11:16:06 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:16:06 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@119092523 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:16:06 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:16:06 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:16:06 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 0 msec}
2024-10-31 11:16:06 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:16:06 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:16:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66280aeb]
2024-10-31 11:16:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:16:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@769279a1] was not registered for synchronization because synchronization is not active
2024-10-31 11:16:06 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:16:06 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1793555496 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:16:06 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:16:06 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:16:06 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 13 msec}
2024-10-31 11:16:06 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:16:06 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:16:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@769279a1]
2024-10-31 11:16:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:16:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:16:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:16:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:17:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:17:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:17:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:17:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6af2cdc3] was not registered for synchronization because synchronization is not active
2024-10-31 11:17:21 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:17:21 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2035739766 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:17:21 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:17:21 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:17:21 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:17:21 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:17:21 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:17:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6af2cdc3]
2024-10-31 11:17:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:17:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46375c12] was not registered for synchronization because synchronization is not active
2024-10-31 11:17:21 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:17:21 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1403504933 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:17:21 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:17:21 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:17:21 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:17:21 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:17:21 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:17:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46375c12]
2024-10-31 11:17:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:17:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ce3d3d6] was not registered for synchronization because synchronization is not active
2024-10-31 11:17:21 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:17:21 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1272277788 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:17:21 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:17:21 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:17:21 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 15 msec}
2024-10-31 11:17:21 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:17:21 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:17:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ce3d3d6]
2024-10-31 11:17:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:17:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:17:49 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:17:49 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11249b88] was not registered for synchronization because synchronization is not active
2024-10-31 11:17:49 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:17:49 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@274823672 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:17:49 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:17:49 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:17:49 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:17:49 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:17:49 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:17:49 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11249b88]
2024-10-31 11:17:49 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:17:49 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5175695a] was not registered for synchronization because synchronization is not active
2024-10-31 11:17:49 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:17:49 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1430975308 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:17:49 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:17:49 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:17:49 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:17:49 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:17:49 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:17:49 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5175695a]
2024-10-31 11:17:49 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:17:49 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e24bd87] was not registered for synchronization because synchronization is not active
2024-10-31 11:17:49 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:17:49 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1185512544 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:17:49 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:17:49 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:17:49 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 15 msec}
2024-10-31 11:17:49 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:17:49 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:17:49 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e24bd87]
2024-10-31 11:18:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:18:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b25f91f] was not registered for synchronization because synchronization is not active
2024-10-31 11:18:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:18:09 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@757779967 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:18:09 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:18:09 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:18:09 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:18:09 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:18:09 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:18:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b25f91f]
2024-10-31 11:18:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:18:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@660c6cf9] was not registered for synchronization because synchronization is not active
2024-10-31 11:18:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:18:09 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@174373981 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:18:09 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:18:09 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:18:09 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:18:09 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:18:09 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:18:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@660c6cf9]
2024-10-31 11:18:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:18:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b8bb8c] was not registered for synchronization because synchronization is not active
2024-10-31 11:18:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:18:09 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@163163763 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:18:09 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:18:09 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:18:09 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 20 msec}
2024-10-31 11:18:09 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:18:09 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:18:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b8bb8c]
2024-10-31 11:18:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:18:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:18:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:18:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c5e26a7] was not registered for synchronization because synchronization is not active
2024-10-31 11:18:21 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:18:21 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@804348896 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:18:21 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:18:21 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:18:21 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:18:21 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:18:21 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:18:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c5e26a7]
2024-10-31 11:18:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:18:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5870c283] was not registered for synchronization because synchronization is not active
2024-10-31 11:18:21 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:18:21 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1017392184 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:18:21 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:18:21 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:18:21 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:18:21 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:18:21 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:18:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5870c283]
2024-10-31 11:18:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:18:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bec4eba] was not registered for synchronization because synchronization is not active
2024-10-31 11:18:21 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:18:21 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1672223379 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:18:21 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:18:21 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:18:21 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 20 msec}
2024-10-31 11:18:21 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:18:21 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:18:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bec4eba]
2024-10-31 11:18:27 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:18:27 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14f33e50] was not registered for synchronization because synchronization is not active
2024-10-31 11:18:27 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:18:27 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1863609503 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:18:27 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:18:27 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:18:27 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:18:27 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:18:27 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:18:27 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14f33e50]
2024-10-31 11:18:27 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:18:27 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cdd049d] was not registered for synchronization because synchronization is not active
2024-10-31 11:18:27 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:18:27 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@334025700 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:18:27 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:18:27 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:18:27 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:18:27 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:18:27 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:18:27 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cdd049d]
2024-10-31 11:18:27 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:18:27 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70b9e88a] was not registered for synchronization because synchronization is not active
2024-10-31 11:18:27 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:18:27 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@24265148 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:18:27 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:18:27 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:18:27 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 12 msec}
2024-10-31 11:18:27 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:18:27 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:18:27 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70b9e88a]
2024-10-31 11:18:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:18:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:19:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:19:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:19:18 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:19:18 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@febb25a] was not registered for synchronization because synchronization is not active
2024-10-31 11:19:18 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:19:18 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1718420099 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:19:18 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:19:18 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:19:18 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:19:18 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:19:18 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:19:18 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@febb25a]
2024-10-31 11:19:18 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:19:18 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27ed59fd] was not registered for synchronization because synchronization is not active
2024-10-31 11:19:18 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:19:18 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1449926993 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:19:18 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:19:18 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:19:18 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 0 msec}
2024-10-31 11:19:18 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:19:18 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:19:18 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27ed59fd]
2024-10-31 11:19:18 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:19:18 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1281a11a] was not registered for synchronization because synchronization is not active
2024-10-31 11:19:18 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:19:18 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@104915776 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:19:18 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:19:18 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:19:18 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 18 msec}
2024-10-31 11:19:18 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:19:18 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:19:18 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1281a11a]
2024-10-31 11:19:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:19:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ece8375] was not registered for synchronization because synchronization is not active
2024-10-31 11:19:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:19:25 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@327432876 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:19:25 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:19:25 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:19:25 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:19:25 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:19:25 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:19:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ece8375]
2024-10-31 11:19:29 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:19:29 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a25f5e6] was not registered for synchronization because synchronization is not active
2024-10-31 11:19:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:19:29 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1018917965 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:19:29 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:19:29 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:19:29 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:19:29 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:19:29 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:19:29 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a25f5e6]
2024-10-31 11:19:30 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:19:30 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dfdbeb1] was not registered for synchronization because synchronization is not active
2024-10-31 11:19:30 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:19:30 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@29644894 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:19:30 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:19:30 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:19:30 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:19:30 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:19:30 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:19:30 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dfdbeb1]
2024-10-31 11:19:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:19:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:19:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:19:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ecb597d] was not registered for synchronization because synchronization is not active
2024-10-31 11:19:48 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:19:48 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@296284344 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:19:48 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:19:48 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:19:48 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:19:48 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:19:48 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:19:48 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ecb597d]
2024-10-31 11:19:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:19:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@450152b3] was not registered for synchronization because synchronization is not active
2024-10-31 11:19:51 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:19:51 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1611629208 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:19:51 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:19:51 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:19:51 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:19:51 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:19:51 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:19:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@450152b3]
2024-10-31 11:19:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:19:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1164d96c] was not registered for synchronization because synchronization is not active
2024-10-31 11:19:51 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:19:51 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@476677848 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:19:51 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:19:51 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:19:51 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:19:51 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:19:51 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:19:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1164d96c]
2024-10-31 11:19:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:19:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27ad2124] was not registered for synchronization because synchronization is not active
2024-10-31 11:19:51 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:19:51 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@847277374 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:19:51 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:19:51 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:19:51 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 14 msec}
2024-10-31 11:19:51 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:19:51 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:19:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27ad2124]
2024-10-31 11:19:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:19:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@665ae3e8] was not registered for synchronization because synchronization is not active
2024-10-31 11:19:59 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:19:59 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1660027072 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:19:59 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:19:59 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:19:59 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:19:59 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:19:59 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:19:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@665ae3e8]
2024-10-31 11:19:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:19:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51e8e90c] was not registered for synchronization because synchronization is not active
2024-10-31 11:19:59 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:19:59 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@225928268 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:19:59 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:19:59 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:19:59 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:19:59 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:19:59 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:19:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51e8e90c]
2024-10-31 11:19:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:19:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@711444b4] was not registered for synchronization because synchronization is not active
2024-10-31 11:19:59 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:19:59 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1300186573 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:19:59 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:19:59 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:19:59 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 13 msec}
2024-10-31 11:19:59 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:19:59 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:19:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@711444b4]
2024-10-31 11:20:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:20:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:20:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:20:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:20:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:20:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c0d34bd] was not registered for synchronization because synchronization is not active
2024-10-31 11:20:59 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:20:59 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@289427559 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:20:59 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:20:59 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:20:59 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:20:59 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:20:59 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:20:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c0d34bd]
2024-10-31 11:20:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:20:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6eef7800] was not registered for synchronization because synchronization is not active
2024-10-31 11:20:59 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:20:59 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@466886515 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:20:59 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:20:59 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:20:59 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:20:59 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:20:59 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:20:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6eef7800]
2024-10-31 11:20:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:20:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62109f83] was not registered for synchronization because synchronization is not active
2024-10-31 11:20:59 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:20:59 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1385527091 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:20:59 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:20:59 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:20:59 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 14 msec}
2024-10-31 11:20:59 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:20:59 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:20:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62109f83]
2024-10-31 11:21:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:21:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f764b06] was not registered for synchronization because synchronization is not active
2024-10-31 11:21:00 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:21:00 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1205681868 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:21:00 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:21:00 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:21:00 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:21:00 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:21:00 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:21:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f764b06]
2024-10-31 11:21:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:21:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25d8de6b] was not registered for synchronization because synchronization is not active
2024-10-31 11:21:00 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:21:00 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1404196755 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:21:00 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:21:00 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:21:00 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:21:00 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:21:00 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:21:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25d8de6b]
2024-10-31 11:21:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:21:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66ee7b8d] was not registered for synchronization because synchronization is not active
2024-10-31 11:21:00 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:21:00 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1184640434 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:21:00 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:21:00 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:21:00 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 13 msec}
2024-10-31 11:21:00 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:21:00 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:21:00 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66ee7b8d]
2024-10-31 11:21:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:21:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15e0e80f] was not registered for synchronization because synchronization is not active
2024-10-31 11:21:03 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:21:03 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1256402431 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:21:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:21:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:21:03 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:21:03 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:21:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:21:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15e0e80f]
2024-10-31 11:21:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:21:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:21:27 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:21:27 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59c1182] was not registered for synchronization because synchronization is not active
2024-10-31 11:21:27 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:21:27 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@812834994 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:21:27 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:21:27 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:21:27 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:21:27 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:21:27 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:21:27 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59c1182]
2024-10-31 11:21:28 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:21:28 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c6f7780] was not registered for synchronization because synchronization is not active
2024-10-31 11:21:28 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:21:28 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2090025359 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:21:28 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:21:28 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:21:28 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:21:28 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:21:28 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:21:28 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c6f7780]
2024-10-31 11:21:34 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:21:34 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e7d87f4] was not registered for synchronization because synchronization is not active
2024-10-31 11:21:34 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:21:34 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1631703580 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:21:34 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:21:34 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:21:34 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:21:34 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:21:34 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:21:34 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e7d87f4]
2024-10-31 11:21:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:21:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ab78dda] was not registered for synchronization because synchronization is not active
2024-10-31 11:21:39 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:21:39 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@468775174 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:21:39 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:21:39 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:21:39 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:21:39 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:21:39 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:21:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ab78dda]
2024-10-31 11:21:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:21:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ff83120] was not registered for synchronization because synchronization is not active
2024-10-31 11:21:39 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:21:39 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@966636864 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:21:39 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:21:39 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:21:39 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:21:39 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:21:39 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:21:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ff83120]
2024-10-31 11:21:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:21:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f5cfee5] was not registered for synchronization because synchronization is not active
2024-10-31 11:21:39 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:21:39 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@295762401 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:21:39 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:21:39 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:21:39 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 16 msec}
2024-10-31 11:21:39 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:21:39 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:21:39 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f5cfee5]
2024-10-31 11:21:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:21:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:21:54 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5b2c036b: (connection has passed maxLifetime)
2024-10-31 11:21:54 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6
2024-10-31 11:22:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:22:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a516188] was not registered for synchronization because synchronization is not active
2024-10-31 11:22:03 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:22:03 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1440689756 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:22:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:22:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:22:03 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:22:03 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:22:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:22:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a516188]
2024-10-31 11:22:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:22:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4484cb40] was not registered for synchronization because synchronization is not active
2024-10-31 11:22:03 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:22:03 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1994251740 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:22:03 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:22:03 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:22:03 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:22:03 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:22:03 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:22:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4484cb40]
2024-10-31 11:22:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:22:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a4cec83] was not registered for synchronization because synchronization is not active
2024-10-31 11:22:03 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:22:03 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1032389753 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693] will not be managed by Spring
2024-10-31 11:22:03 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:22:03 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:22:03 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 13 msec}
2024-10-31 11:22:03 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:22:03 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:22:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a4cec83]
2024-10-31 11:22:06 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14f94693: (connection has passed maxLifetime)
2024-10-31 11:22:06 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3ca260b3
2024-10-31 11:22:07 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1a110950: (connection has passed maxLifetime)
2024-10-31 11:22:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7d9f6a88
2024-10-31 11:22:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:22:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38eb0615] was not registered for synchronization because synchronization is not active
2024-10-31 11:22:12 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:22:12 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1566483894 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2bc1f54a] will not be managed by Spring
2024-10-31 11:22:12 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:22:12 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:22:12 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
34. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:22:12 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:22:12 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:22:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38eb0615]
2024-10-31 11:22:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:22:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:22:20 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@79f12b20: (connection has passed maxLifetime)
2024-10-31 11:22:20 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7ed579a6
2024-10-31 11:22:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:22:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f01e9d] was not registered for synchronization because synchronization is not active
2024-10-31 11:22:21 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:22:21 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@361069515 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2bc1f54a] will not be managed by Spring
2024-10-31 11:22:21 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:22:21 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:22:21 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
34. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:22:21 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:22:21 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:22:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f01e9d]
2024-10-31 11:22:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:22:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4edba71b] was not registered for synchronization because synchronization is not active
2024-10-31 11:22:21 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:22:21 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1166128922 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2bc1f54a] will not be managed by Spring
2024-10-31 11:22:21 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:22:21 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:22:21 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
34. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 0 msec}
2024-10-31 11:22:21 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:22:21 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:22:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4edba71b]
2024-10-31 11:22:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:22:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35d485da] was not registered for synchronization because synchronization is not active
2024-10-31 11:22:21 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:22:21 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@32941984 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2bc1f54a] will not be managed by Spring
2024-10-31 11:22:21 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:22:21 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:22:21 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
34. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 17 msec}
2024-10-31 11:22:21 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:22:21 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:22:21 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35d485da]
2024-10-31 11:22:24 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2bc1f54a: (connection has passed maxLifetime)
2024-10-31 11:22:24 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3fe8739d
2024-10-31 11:22:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:22:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ee1efec] was not registered for synchronization because synchronization is not active
2024-10-31 11:22:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:22:33 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1183636359 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@22858cf] will not be managed by Spring
2024-10-31 11:22:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:22:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:22:33 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
36. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:22:33 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:22:33 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:22:33 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ee1efec]
2024-10-31 11:22:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:22:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:22:50 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@22858cf: (connection has passed maxLifetime)
2024-10-31 11:22:50 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6c8bf982
2024-10-31 11:23:02 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1244de59: (connection has passed maxLifetime)
2024-10-31 11:23:02 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1967491b
2024-10-31 11:23:05 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5f1700de: (connection has passed maxLifetime)
2024-10-31 11:23:05 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@585a4320
2024-10-31 11:23:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:23:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:23:14 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1e2a0ae5: (connection has passed maxLifetime)
2024-10-31 11:23:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7f5c683
2024-10-31 11:23:36 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6900ef0f: (connection has passed maxLifetime)
2024-10-31 11:23:36 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a90695
2024-10-31 11:23:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:23:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:24:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:24:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:24:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:24:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:25:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:25:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:25:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:25:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:26:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:26:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:26:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:26:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:27:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:27:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:27:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:27:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:28:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:28:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:28:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:28:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:29:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:29:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:29:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:29:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:30:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:30:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:30:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:30:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:31:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:31:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:31:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:31:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:32:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:32:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:32:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:32:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:33:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:33:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:33:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:33:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:34:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:34:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:34:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:34:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:35:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:35:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:35:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:35:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:35:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:35:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76329fa8] was not registered for synchronization because synchronization is not active
2024-10-31 11:35:47 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:35:47 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@782330198 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:35:47 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:35:47 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:35:47 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:35:47 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:35:47 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:35:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76329fa8]
2024-10-31 11:35:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:35:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41523b18] was not registered for synchronization because synchronization is not active
2024-10-31 11:35:47 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:35:47 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1007408602 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:35:47 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:35:47 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:35:47 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:35:47 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:35:47 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:35:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41523b18]
2024-10-31 11:35:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:35:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9eda877] was not registered for synchronization because synchronization is not active
2024-10-31 11:35:47 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:35:47 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1069691453 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:35:47 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:35:47 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:35:47 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 16 msec}
2024-10-31 11:35:47 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:35:47 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:35:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9eda877]
2024-10-31 11:36:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:36:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:36:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:36:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:37:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:37:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:37:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:37:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:38:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:38:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:38:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:38:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:38:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:38:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@555bd43e] was not registered for synchronization because synchronization is not active
2024-10-31 11:38:53 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:38:53 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2018924958 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:38:53 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:38:53 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:38:53 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:38:53 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:38:53 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:38:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@555bd43e]
2024-10-31 11:38:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:38:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32f29f89] was not registered for synchronization because synchronization is not active
2024-10-31 11:38:53 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:38:53 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@213813147 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:38:53 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:38:53 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:38:53 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 0 msec}
2024-10-31 11:38:53 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:38:53 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:38:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32f29f89]
2024-10-31 11:38:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:38:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1daec59f] was not registered for synchronization because synchronization is not active
2024-10-31 11:38:53 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:38:53 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2127120498 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:38:53 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:38:53 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:38:53 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 15 msec}
2024-10-31 11:38:53 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:38:53 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:38:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1daec59f]
2024-10-31 11:38:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:38:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e5cb4fb] was not registered for synchronization because synchronization is not active
2024-10-31 11:38:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:38:55 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@429952763 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:38:55 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:38:55 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 29(Integer)
2024-10-31 11:38:55 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 29
 {executed in 1 msec}
2024-10-31 11:38:55 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                    |body                                 |nickname |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요? |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|

2024-10-31 11:38:55 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:38:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e5cb4fb]
2024-10-31 11:38:56 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:38:56 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d385b81] was not registered for synchronization because synchronization is not active
2024-10-31 11:38:56 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:38:56 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@667643010 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:38:56 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:38:56 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 28(Integer)
2024-10-31 11:38:56 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 28
 {executed in 0 msec}
2024-10-31 11:38:56 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|-------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                       |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|-------------------------------------------|---------|
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|-------------------------------------------|---------|

2024-10-31 11:38:56 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:38:56 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d385b81]
2024-10-31 11:38:57 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:38:57 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ef86bf5] was not registered for synchronization because synchronization is not active
2024-10-31 11:38:57 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:38:57 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1887696058 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:38:57 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:38:57 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 21(Integer)
2024-10-31 11:38:57 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 21
 {executed in 0 msec}
2024-10-31 11:38:57 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------|---------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title              |body                                               |nickname |
|---|--------------------|--------------------|---------|--------|-------------------|---------------------------------------------------|---------|
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요? |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------|---------------------------------------------------|---------|

2024-10-31 11:38:57 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:38:57 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ef86bf5]
2024-10-31 11:38:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:38:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34410bac] was not registered for synchronization because synchronization is not active
2024-10-31 11:38:58 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:38:58 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@123934164 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:38:58 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:38:58 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 18(Integer)
2024-10-31 11:38:58 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 18
 {executed in 1 msec}
2024-10-31 11:38:58 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------|---------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                  |body                                                     |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------|---------------------------------------------------------|---------|
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요? |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------|---------------------------------------------------------|---------|

2024-10-31 11:38:58 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:38:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34410bac]
2024-10-31 11:38:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:38:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45305071] was not registered for synchronization because synchronization is not active
2024-10-31 11:38:58 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:38:58 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@355858766 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:38:58 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:38:58 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 15(Integer)
2024-10-31 11:38:58 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 15
 {executed in 1 msec}
2024-10-31 11:38:58 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------|------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title              |body                                            |nickname |
|---|--------------------|--------------------|---------|--------|-------------------|------------------------------------------------|---------|
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요? |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------|------------------------------------------------|---------|

2024-10-31 11:38:58 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:38:58 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45305071]
2024-10-31 11:38:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:38:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e07c240] was not registered for synchronization because synchronization is not active
2024-10-31 11:38:59 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:38:59 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@397631355 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:38:59 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:38:59 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 2(Integer)
2024-10-31 11:38:59 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 2
 {executed in 0 msec}
2024-10-31 11:38:59 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                   |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|------------------------|--------------------------------------------------------------------|---------|
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요? |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:38:59 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:38:59 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e07c240]
2024-10-31 11:39:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:39:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f909aa] was not registered for synchronization because synchronization is not active
2024-10-31 11:39:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:39:09 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1163079561 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:39:09 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:39:09 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:39:09 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:39:09 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:39:09 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:39:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f909aa]
2024-10-31 11:39:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:39:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a699bc3] was not registered for synchronization because synchronization is not active
2024-10-31 11:39:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:39:09 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2005545608 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:39:09 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:39:09 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:39:09 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:39:09 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:39:09 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:39:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a699bc3]
2024-10-31 11:39:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:39:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12c5c94c] was not registered for synchronization because synchronization is not active
2024-10-31 11:39:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:39:09 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1053321015 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:39:09 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:39:09 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:39:09 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 13 msec}
2024-10-31 11:39:09 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:39:09 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:39:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12c5c94c]
2024-10-31 11:39:10 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:39:10 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61855a40] was not registered for synchronization because synchronization is not active
2024-10-31 11:39:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:39:10 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1305667462 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:39:10 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:39:10 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 29(Integer)
2024-10-31 11:39:10 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 29
 {executed in 1 msec}
2024-10-31 11:39:10 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                    |body                                 |nickname |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요? |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|

2024-10-31 11:39:10 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:39:10 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61855a40]
2024-10-31 11:39:11 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:39:11 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587f5a9a] was not registered for synchronization because synchronization is not active
2024-10-31 11:39:11 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:39:11 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1932564258 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:39:11 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:39:11 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 28(Integer)
2024-10-31 11:39:11 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 28
 {executed in 1 msec}
2024-10-31 11:39:11 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|-------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                       |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|-------------------------------------------|---------|
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|-------------------------------------------|---------|

2024-10-31 11:39:11 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:39:11 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587f5a9a]
2024-10-31 11:39:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:39:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:39:23 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:39:23 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4629d412] was not registered for synchronization because synchronization is not active
2024-10-31 11:39:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:39:23 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@156257205 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:39:23 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:39:23 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 18(Integer)
2024-10-31 11:39:23 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 18
 {executed in 0 msec}
2024-10-31 11:39:23 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------|---------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                  |body                                                     |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------|---------------------------------------------------------|---------|
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요? |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------|---------------------------------------------------------|---------|

2024-10-31 11:39:23 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:39:23 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4629d412]
2024-10-31 11:39:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:39:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6067f0dc] was not registered for synchronization because synchronization is not active
2024-10-31 11:39:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:39:25 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@641677773 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:39:25 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:39:25 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 14(Integer)
2024-10-31 11:39:25 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 14
 {executed in 1 msec}
2024-10-31 11:39:25 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------|----------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title              |body                                                |nickname |
|---|--------------------|--------------------|---------|--------|-------------------|----------------------------------------------------|---------|
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요? |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------|----------------------------------------------------|---------|

2024-10-31 11:39:25 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:39:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6067f0dc]
2024-10-31 11:39:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:39:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:40:10 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:40:10 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b7c4633] was not registered for synchronization because synchronization is not active
2024-10-31 11:40:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:40:10 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@162332427 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:40:10 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:40:10 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 29(Integer)
2024-10-31 11:40:10 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 29
 {executed in 1 msec}
2024-10-31 11:40:10 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                    |body                                 |nickname |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요? |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|

2024-10-31 11:40:10 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:40:10 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b7c4633]
2024-10-31 11:40:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:40:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ff64092] was not registered for synchronization because synchronization is not active
2024-10-31 11:40:12 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:40:12 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2133397871 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:40:12 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:40:12 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:40:12 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:40:12 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:40:12 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:40:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ff64092]
2024-10-31 11:40:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:40:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56ba7f80] was not registered for synchronization because synchronization is not active
2024-10-31 11:40:12 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:40:12 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1689845504 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:40:12 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:40:12 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:40:12 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:40:12 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:40:12 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:40:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56ba7f80]
2024-10-31 11:40:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:40:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76a06872] was not registered for synchronization because synchronization is not active
2024-10-31 11:40:12 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:40:12 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1882065362 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:40:12 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:40:12 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:40:12 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 16 msec}
2024-10-31 11:40:12 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:40:12 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:40:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76a06872]
2024-10-31 11:40:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:40:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5878365d] was not registered for synchronization because synchronization is not active
2024-10-31 11:40:12 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:40:12 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1083193688 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:40:12 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:40:12 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 29(Integer)
2024-10-31 11:40:12 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 29
 {executed in 0 msec}
2024-10-31 11:40:12 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                    |body                                 |nickname |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요? |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|

2024-10-31 11:40:12 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:40:12 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5878365d]
2024-10-31 11:40:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:40:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:40:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:40:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:40:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:40:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@540465d1] was not registered for synchronization because synchronization is not active
2024-10-31 11:40:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:40:55 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1327058836 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:40:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:40:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:40:55 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:40:55 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:40:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:40:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@540465d1]
2024-10-31 11:40:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:40:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@281bff07] was not registered for synchronization because synchronization is not active
2024-10-31 11:40:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:40:55 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@976119180 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:40:55 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:40:55 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:40:55 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 0 msec}
2024-10-31 11:40:55 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:40:55 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:40:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@281bff07]
2024-10-31 11:40:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:40:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75ec839] was not registered for synchronization because synchronization is not active
2024-10-31 11:40:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:40:55 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@628627680 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:40:55 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:40:55 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:40:55 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 16 msec}
2024-10-31 11:40:55 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:40:55 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:40:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75ec839]
2024-10-31 11:40:57 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:40:57 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59a4a4f2] was not registered for synchronization because synchronization is not active
2024-10-31 11:40:57 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:40:57 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2068219303 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:40:57 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:40:57 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 29(Integer)
2024-10-31 11:40:57 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 29
 {executed in 0 msec}
2024-10-31 11:40:57 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                    |body                                 |nickname |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요? |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|

2024-10-31 11:40:57 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:40:57 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59a4a4f2]
2024-10-31 11:41:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:41:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:41:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:41:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a1204c4] was not registered for synchronization because synchronization is not active
2024-10-31 11:41:42 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:41:42 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@843579818 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:41:42 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:41:42 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:41:42 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:41:42 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:41:42 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:41:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a1204c4]
2024-10-31 11:41:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:41:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@232184b9] was not registered for synchronization because synchronization is not active
2024-10-31 11:41:42 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:41:42 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@168112787 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:41:42 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:41:42 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:41:42 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:41:42 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:41:42 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:41:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@232184b9]
2024-10-31 11:41:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:41:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a3bab69] was not registered for synchronization because synchronization is not active
2024-10-31 11:41:42 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:41:42 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1938825630 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:41:42 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:41:42 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:41:42 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 16 msec}
2024-10-31 11:41:42 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:41:42 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:41:42 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a3bab69]
2024-10-31 11:41:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:41:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:41:44 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:41:44 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c75e668] was not registered for synchronization because synchronization is not active
2024-10-31 11:41:44 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:41:44 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1535777761 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:41:44 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:41:44 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:41:44 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:41:44 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:41:44 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:41:44 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c75e668]
2024-10-31 11:41:44 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:41:44 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29db90b5] was not registered for synchronization because synchronization is not active
2024-10-31 11:41:44 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:41:44 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@684569433 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:41:44 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:41:44 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:41:44 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:41:44 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:41:44 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:41:44 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29db90b5]
2024-10-31 11:41:44 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:41:44 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d954328] was not registered for synchronization because synchronization is not active
2024-10-31 11:41:44 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:41:44 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1482819171 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:41:44 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:41:44 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:41:44 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 13 msec}
2024-10-31 11:41:44 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:41:44 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:41:44 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d954328]
2024-10-31 11:41:45 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:41:45 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e6563b4] was not registered for synchronization because synchronization is not active
2024-10-31 11:41:45 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:41:45 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@370524646 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:41:45 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:41:45 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 29(Integer)
2024-10-31 11:41:45 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 29
 {executed in 1 msec}
2024-10-31 11:41:45 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                    |body                                 |nickname |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요? |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|

2024-10-31 11:41:45 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:41:45 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e6563b4]
2024-10-31 11:41:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:41:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d4b8879] was not registered for synchronization because synchronization is not active
2024-10-31 11:41:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:41:55 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@122875652 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:41:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:41:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:41:55 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:41:55 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:41:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:41:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d4b8879]
2024-10-31 11:41:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:41:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d22eaad] was not registered for synchronization because synchronization is not active
2024-10-31 11:41:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:41:55 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1341097134 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:41:55 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:41:55 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:41:55 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 0 msec}
2024-10-31 11:41:55 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:41:55 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:41:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d22eaad]
2024-10-31 11:41:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:41:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cf62b0a] was not registered for synchronization because synchronization is not active
2024-10-31 11:41:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:41:55 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1736063939 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:41:55 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:41:55 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:41:55 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 17 msec}
2024-10-31 11:41:55 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:41:55 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:41:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cf62b0a]
2024-10-31 11:41:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:41:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c418774] was not registered for synchronization because synchronization is not active
2024-10-31 11:41:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:41:55 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@51586896 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:41:55 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:41:55 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 29(Integer)
2024-10-31 11:41:55 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 29
 {executed in 0 msec}
2024-10-31 11:41:55 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                    |body                                 |nickname |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요? |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|

2024-10-31 11:41:55 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:41:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c418774]
2024-10-31 11:42:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:42:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c41e1db] was not registered for synchronization because synchronization is not active
2024-10-31 11:42:01 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:42:01 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@730851078 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:42:01 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:42:01 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:42:01 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:42:01 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:42:01 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:42:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c41e1db]
2024-10-31 11:42:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:42:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31760aca] was not registered for synchronization because synchronization is not active
2024-10-31 11:42:01 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:42:01 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1584665311 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:42:01 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:42:01 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:42:01 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:42:01 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:42:01 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:42:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31760aca]
2024-10-31 11:42:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:42:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7da2db6] was not registered for synchronization because synchronization is not active
2024-10-31 11:42:01 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:42:01 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@248211404 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:42:01 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:42:01 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:42:01 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 16 msec}
2024-10-31 11:42:01 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:42:01 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:42:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7da2db6]
2024-10-31 11:42:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:42:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a4c1d7e] was not registered for synchronization because synchronization is not active
2024-10-31 11:42:03 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:42:03 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@287765185 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:42:03 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:42:03 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 29(Integer)
2024-10-31 11:42:03 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 29
 {executed in 1 msec}
2024-10-31 11:42:03 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                    |body                                 |nickname |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요? |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|

2024-10-31 11:42:03 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:42:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a4c1d7e]
2024-10-31 11:42:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:42:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:42:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:42:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c683650] was not registered for synchronization because synchronization is not active
2024-10-31 11:42:24 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:42:24 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1540433552 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:42:24 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:42:24 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:42:24 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:42:24 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:42:24 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:42:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c683650]
2024-10-31 11:42:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:42:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@632b5f6e] was not registered for synchronization because synchronization is not active
2024-10-31 11:42:24 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:42:24 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1078284767 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:42:24 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:42:24 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:42:24 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:42:24 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:42:24 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:42:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@632b5f6e]
2024-10-31 11:42:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:42:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2244bd32] was not registered for synchronization because synchronization is not active
2024-10-31 11:42:24 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:42:24 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@868653281 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:42:24 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:42:24 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:42:24 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 16 msec}
2024-10-31 11:42:24 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:42:24 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:42:24 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2244bd32]
2024-10-31 11:42:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:42:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@673094dd] was not registered for synchronization because synchronization is not active
2024-10-31 11:42:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:42:25 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@826659422 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:42:25 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:42:25 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 29(Integer)
2024-10-31 11:42:25 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 29
 {executed in 1 msec}
2024-10-31 11:42:25 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                    |body                                 |nickname |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요? |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|

2024-10-31 11:42:25 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:42:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@673094dd]
2024-10-31 11:42:35 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:42:35 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d5687d4] was not registered for synchronization because synchronization is not active
2024-10-31 11:42:35 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:42:35 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1620200273 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:42:35 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:42:35 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:42:35 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:42:35 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:42:35 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:42:35 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d5687d4]
2024-10-31 11:42:35 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:42:35 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a8f66d9] was not registered for synchronization because synchronization is not active
2024-10-31 11:42:35 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:42:35 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1325342003 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:42:35 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:42:35 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:42:35 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 0 msec}
2024-10-31 11:42:35 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:42:35 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:42:35 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a8f66d9]
2024-10-31 11:42:35 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:42:35 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38c95a3d] was not registered for synchronization because synchronization is not active
2024-10-31 11:42:35 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:42:35 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1997195884 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:42:35 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:42:35 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:42:35 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 16 msec}
2024-10-31 11:42:35 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:42:35 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:42:35 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38c95a3d]
2024-10-31 11:42:35 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:42:35 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@689bc73d] was not registered for synchronization because synchronization is not active
2024-10-31 11:42:35 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:42:35 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1385580183 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:42:35 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:42:35 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 29(Integer)
2024-10-31 11:42:35 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 29
 {executed in 1 msec}
2024-10-31 11:42:35 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                    |body                                 |nickname |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요? |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|

2024-10-31 11:42:35 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:42:35 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@689bc73d]
2024-10-31 11:42:38 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:42:38 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57a6a9bf] was not registered for synchronization because synchronization is not active
2024-10-31 11:42:38 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:42:38 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@512235993 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:42:38 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:42:38 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 21(Integer)
2024-10-31 11:42:38 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 21
 {executed in 1 msec}
2024-10-31 11:42:38 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------|---------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title              |body                                               |nickname |
|---|--------------------|--------------------|---------|--------|-------------------|---------------------------------------------------|---------|
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요? |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------|---------------------------------------------------|---------|

2024-10-31 11:42:38 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:42:38 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57a6a9bf]
2024-10-31 11:42:40 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:42:40 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@559eff91] was not registered for synchronization because synchronization is not active
2024-10-31 11:42:40 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:42:40 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@374560849 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:42:40 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:42:40 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 29(Integer)
2024-10-31 11:42:40 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 29
 {executed in 1 msec}
2024-10-31 11:42:40 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                    |body                                 |nickname |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요? |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|

2024-10-31 11:42:40 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:42:40 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@559eff91]
2024-10-31 11:42:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:42:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:42:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:42:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bddb658] was not registered for synchronization because synchronization is not active
2024-10-31 11:42:47 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:42:47 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@845253901 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:42:47 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:42:47 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:42:47 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:42:47 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:42:47 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:42:47 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bddb658]
2024-10-31 11:43:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:43:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:43:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:43:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2345281a] was not registered for synchronization because synchronization is not active
2024-10-31 11:43:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:43:25 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1720537584 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:43:25 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:43:25 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 2(Integer)
2024-10-31 11:43:25 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 2
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:43:25 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-----|----------|--------|
|id |regdate             |updatedate          |code |name |delstatus |deldate |
|---|--------------------|--------------------|-----|-----|----------|--------|
|2  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FREE |자유   |false     |null    |
|---|--------------------|--------------------|-----|-----|----------|--------|

2024-10-31 11:43:25 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:43:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2345281a]
2024-10-31 11:43:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:43:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e166b84] was not registered for synchronization because synchronization is not active
2024-10-31 11:43:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:43:25 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1241980634 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:43:25 [DEBUG] c.e.d.r.A.getArticleCount - ==>  Preparing: SELECT COUNT(*), A.*, M.nickname AS extra__writer FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id WHERE 1 AND A.boardId = ? ORDER BY A.id DESC;
2024-10-31 11:43:25 [DEBUG] c.e.d.r.A.getArticleCount - ==> Parameters: 2(Integer)
2024-10-31 11:43:25 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT COUNT(*), A.*,  M.nickname AS extra__writer
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	WHERE 1

		AND A.boardId = 2

	ORDER BY A.id DESC;
 {executed in 0 msec}
2024-10-31 11:43:25 [INFO ] jdbc.resultsettable - 
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|count(*) |id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|1        |3  |2024-09-07T22:42:47 |2024-09-07T22:42:47 |3        |2       |제목3   |내용3  |0        |0                 |0                |회원2_닉네임  |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|

2024-10-31 11:43:25 [DEBUG] c.e.d.r.A.getArticleCount - <==      Total: 1
2024-10-31 11:43:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e166b84]
2024-10-31 11:43:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:43:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9ab5f32] was not registered for synchronization because synchronization is not active
2024-10-31 11:43:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:43:25 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@256472538 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:43:25 [DEBUG] c.e.d.r.A.getForPrintArticles - ==>  Preparing: SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id LEFT JOIN `reply` AS R ON A.id = R.relId WHERE 1 AND boardId = ? GROUP BY A.id ORDER BY A.id DESC LIMIT ?, ?
2024-10-31 11:43:25 [DEBUG] c.e.d.r.A.getForPrintArticles - ==> Parameters: 2(Integer), 0(Integer), 10(Integer)
2024-10-31 11:43:25 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	LEFT JOIN `reply` AS R
	ON A.id = R.relId
	WHERE 1

		AND boardId = 2

	GROUP BY A.id
	ORDER BY A.id DESC

		LIMIT 0, 10
 {executed in 18 msec}
2024-10-31 11:43:25 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |extra__repliescount |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|3  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |3        |2       |제목3   |내용3  |0        |0                 |0                |회원2_닉네임  |0                   |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|

2024-10-31 11:43:25 [DEBUG] c.e.d.r.A.getForPrintArticles - <==      Total: 1
2024-10-31 11:43:25 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9ab5f32]
2024-10-31 11:43:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:43:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:43:46 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:43:46 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c3189a9] was not registered for synchronization because synchronization is not active
2024-10-31 11:43:46 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:43:46 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1707045748 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:43:46 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:43:46 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:43:46 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:43:46 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:43:46 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:43:46 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c3189a9]
2024-10-31 11:43:46 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:43:46 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@386b1361] was not registered for synchronization because synchronization is not active
2024-10-31 11:43:46 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:43:46 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1409016425 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:43:46 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:43:46 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:43:46 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:43:46 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:43:46 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:43:46 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@386b1361]
2024-10-31 11:43:46 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:43:46 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46382724] was not registered for synchronization because synchronization is not active
2024-10-31 11:43:46 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:43:46 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@70529533 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:43:46 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:43:46 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:43:46 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 13 msec}
2024-10-31 11:43:46 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:43:46 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:43:46 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46382724]
2024-10-31 11:43:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:43:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c100221] was not registered for synchronization because synchronization is not active
2024-10-31 11:43:53 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:43:53 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1862720542 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:43:53 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:43:53 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:43:53 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:43:53 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:43:53 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:43:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c100221]
2024-10-31 11:43:54 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:43:54 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a299d8c] was not registered for synchronization because synchronization is not active
2024-10-31 11:43:54 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:43:54 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@228210081 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:43:54 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:43:54 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:43:54 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:43:54 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:43:54 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:43:54 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a299d8c]
2024-10-31 11:44:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:44:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@db45a52] was not registered for synchronization because synchronization is not active
2024-10-31 11:44:06 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:44:06 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1659347975 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:44:06 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:44:06 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:44:06 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:44:06 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:44:06 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:44:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@db45a52]
2024-10-31 11:44:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:44:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6143a7bd] was not registered for synchronization because synchronization is not active
2024-10-31 11:44:06 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:44:06 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@632077998 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:44:06 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:44:06 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:44:06 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 0 msec}
2024-10-31 11:44:06 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:44:06 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:44:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6143a7bd]
2024-10-31 11:44:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:44:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@578648aa] was not registered for synchronization because synchronization is not active
2024-10-31 11:44:06 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:44:06 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@633062343 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:44:06 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:44:06 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:44:06 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 14 msec}
2024-10-31 11:44:06 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:44:06 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:44:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@578648aa]
2024-10-31 11:44:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:44:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@348e48b6] was not registered for synchronization because synchronization is not active
2024-10-31 11:44:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:44:07 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1435213660 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:44:07 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:44:07 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 29(Integer)
2024-10-31 11:44:07 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 29
 {executed in 1 msec}
2024-10-31 11:44:07 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                    |body                                 |nickname |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요? |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|

2024-10-31 11:44:07 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:44:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@348e48b6]
2024-10-31 11:44:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:44:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:44:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:44:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:45:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:45:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:45:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:45:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:45:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:45:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b8c285c] was not registered for synchronization because synchronization is not active
2024-10-31 11:45:51 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:45:51 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1499210887 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:45:51 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:45:51 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:45:51 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:45:51 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:45:51 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:45:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b8c285c]
2024-10-31 11:45:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:45:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3884fd04] was not registered for synchronization because synchronization is not active
2024-10-31 11:45:51 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:45:51 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@497741146 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:45:51 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:45:51 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:45:51 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:45:51 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:45:51 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:45:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3884fd04]
2024-10-31 11:45:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:45:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e61623] was not registered for synchronization because synchronization is not active
2024-10-31 11:45:51 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:45:51 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2020212195 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:45:51 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:45:51 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:45:51 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 15 msec}
2024-10-31 11:45:51 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:45:51 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:45:51 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e61623]
2024-10-31 11:45:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:45:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33060fbb] was not registered for synchronization because synchronization is not active
2024-10-31 11:45:53 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:45:53 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@20551008 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:45:53 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:45:53 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:45:53 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:45:53 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:45:53 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:45:53 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33060fbb]
2024-10-31 11:45:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:45:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1da2cdb7] was not registered for synchronization because synchronization is not active
2024-10-31 11:45:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:45:55 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@872246172 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:45:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:45:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:45:55 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:45:55 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:45:55 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:45:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1da2cdb7]
2024-10-31 11:45:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:45:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45cf6a0] was not registered for synchronization because synchronization is not active
2024-10-31 11:45:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:45:55 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1025073968 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:45:55 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:45:55 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:45:55 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:45:55 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:45:55 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:45:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45cf6a0]
2024-10-31 11:45:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:45:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58860d5f] was not registered for synchronization because synchronization is not active
2024-10-31 11:45:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:45:55 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@171682228 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:45:55 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:45:55 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:45:55 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 14 msec}
2024-10-31 11:45:55 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:45:55 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:45:55 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58860d5f]
2024-10-31 11:46:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:46:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62d97dd7] was not registered for synchronization because synchronization is not active
2024-10-31 11:46:01 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:46:01 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1170300405 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:46:01 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:46:01 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:46:01 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:46:01 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:46:01 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:46:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62d97dd7]
2024-10-31 11:46:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:46:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a481080] was not registered for synchronization because synchronization is not active
2024-10-31 11:46:01 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:46:01 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@711577349 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:46:01 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:46:01 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 아이디(String), 아이디(String)
2024-10-31 11:46:01 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '아이디', '%')
                OR F.`body` LIKE CONCAT('%', '아이디', '%')
 {executed in 1 msec}
2024-10-31 11:46:01 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|3        |
|---------|

2024-10-31 11:46:01 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:46:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a481080]
2024-10-31 11:46:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:46:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36c6d8be] was not registered for synchronization because synchronization is not active
2024-10-31 11:46:01 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:46:01 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@634686501 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:46:01 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:46:01 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 아이디(String), 0(Integer), 10(Integer)
2024-10-31 11:46:01 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '아이디', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 12 msec}
2024-10-31 11:46:01 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------------------------------|----------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                         |body                                                |nickname |
|---|--------------------|--------------------|---------|--------|------------------------------|----------------------------------------------------|---------|
|24 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |아이디와 비밀번호를 분실했을 때 어떻게 해야 하나요? |고객 센터에 문의하여 본인 확인 절차를 거친 후, 아이디 및 비밀번호를 복구할 수 있습니다. |관리자      |
|17 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |아이디를 변경할 수 있나요?               |아이디는 가입 후 변경이 불가능합니다. 계정을 탈퇴하고 새로 가입해야 합니다.         |관리자      |
|---|--------------------|--------------------|---------|--------|------------------------------|----------------------------------------------------|---------|

2024-10-31 11:46:01 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 2
2024-10-31 11:46:01 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36c6d8be]
2024-10-31 11:46:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:46:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b6b11c5] was not registered for synchronization because synchronization is not active
2024-10-31 11:46:03 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:46:03 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@2119360782 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:46:03 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:46:03 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 17(Integer)
2024-10-31 11:46:03 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 17
 {executed in 1 msec}
2024-10-31 11:46:03 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|----------------|--------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title           |body                                        |nickname |
|---|--------------------|--------------------|---------|--------|----------------|--------------------------------------------|---------|
|17 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |아이디를 변경할 수 있나요? |아이디는 가입 후 변경이 불가능합니다. 계정을 탈퇴하고 새로 가입해야 합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|----------------|--------------------------------------------|---------|

2024-10-31 11:46:03 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:46:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b6b11c5]
2024-10-31 11:46:04 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:46:04 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24b8fab6] was not registered for synchronization because synchronization is not active
2024-10-31 11:46:04 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:46:04 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1922208431 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:46:04 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:46:04 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 24(Integer)
2024-10-31 11:46:04 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 24
 {executed in 1 msec}
2024-10-31 11:46:04 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------------------------------|----------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                         |body                                                |nickname |
|---|--------------------|--------------------|---------|--------|------------------------------|----------------------------------------------------|---------|
|24 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |아이디와 비밀번호를 분실했을 때 어떻게 해야 하나요? |고객 센터에 문의하여 본인 확인 절차를 거친 후, 아이디 및 비밀번호를 복구할 수 있습니다. |관리자      |
|---|--------------------|--------------------|---------|--------|------------------------------|----------------------------------------------------|---------|

2024-10-31 11:46:04 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:46:04 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24b8fab6]
2024-10-31 11:46:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:46:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b5f895] was not registered for synchronization because synchronization is not active
2024-10-31 11:46:06 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:46:06 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1520036072 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:46:06 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:46:06 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:46:06 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:46:06 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:46:06 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:46:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b5f895]
2024-10-31 11:46:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:46:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17c67c0c] was not registered for synchronization because synchronization is not active
2024-10-31 11:46:06 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:46:06 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@791889388 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:46:06 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:46:06 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:46:06 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:46:06 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:46:06 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:46:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17c67c0c]
2024-10-31 11:46:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:46:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d77f30c] was not registered for synchronization because synchronization is not active
2024-10-31 11:46:06 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:46:06 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1724520629 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:46:06 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:46:06 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:46:06 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 13 msec}
2024-10-31 11:46:06 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:46:06 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:46:06 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d77f30c]
2024-10-31 11:46:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:46:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65d64770] was not registered for synchronization because synchronization is not active
2024-10-31 11:46:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:46:07 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@434393628 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:46:07 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:46:07 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 1(Integer)
2024-10-31 11:46:07 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 1
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:46:07 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-------|-----|----------|--------|
|id |regdate             |updatedate          |code   |name |delstatus |deldate |
|---|--------------------|--------------------|-------|-----|----------|--------|
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |NOTICE |공지사항 |false     |null    |
|---|--------------------|--------------------|-------|-----|----------|--------|

2024-10-31 11:46:07 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:46:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65d64770]
2024-10-31 11:46:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:46:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54586dbf] was not registered for synchronization because synchronization is not active
2024-10-31 11:46:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:46:07 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@632376948 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:46:07 [DEBUG] c.e.d.r.A.getArticleCount - ==>  Preparing: SELECT COUNT(*), A.*, M.nickname AS extra__writer FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id WHERE 1 AND A.boardId = ? ORDER BY A.id DESC;
2024-10-31 11:46:07 [DEBUG] c.e.d.r.A.getArticleCount - ==> Parameters: 1(Integer)
2024-10-31 11:46:07 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT COUNT(*), A.*,  M.nickname AS extra__writer
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	WHERE 1

		AND A.boardId = 1

	ORDER BY A.id DESC;
 {executed in 1 msec}
2024-10-31 11:46:07 [INFO ] jdbc.resultsettable - 
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|count(*) |id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|3        |1  |2024-09-07T22:42:47 |2024-09-07T22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|

2024-10-31 11:46:07 [DEBUG] c.e.d.r.A.getArticleCount - <==      Total: 1
2024-10-31 11:46:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54586dbf]
2024-10-31 11:46:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:46:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3de29ea4] was not registered for synchronization because synchronization is not active
2024-10-31 11:46:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:46:07 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1990349686 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:46:07 [DEBUG] c.e.d.r.A.getForPrintArticles - ==>  Preparing: SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id LEFT JOIN `reply` AS R ON A.id = R.relId WHERE 1 AND boardId = ? GROUP BY A.id ORDER BY A.id DESC LIMIT ?, ?
2024-10-31 11:46:07 [DEBUG] c.e.d.r.A.getForPrintArticles - ==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2024-10-31 11:46:07 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	LEFT JOIN `reply` AS R
	ON A.id = R.relId
	WHERE 1

		AND boardId = 1

	GROUP BY A.id
	ORDER BY A.id DESC

		LIMIT 0, 10
 {executed in 16 msec}
2024-10-31 11:46:07 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |extra__repliescount |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|9  |2024-09-09 23:08:49 |2024-09-09 23:08:49 |2        |1       |sdf   |sdf  |0        |0                 |0                |회원1_닉네임  |0                   |
|2  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목2   |내용2  |0        |1                 |1                |회원1_닉네임  |1                   |
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |3                   |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|

2024-10-31 11:46:07 [DEBUG] c.e.d.r.A.getForPrintArticles - <==      Total: 3
2024-10-31 11:46:07 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3de29ea4]
2024-10-31 11:46:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:46:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cca14a8] was not registered for synchronization because synchronization is not active
2024-10-31 11:46:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:46:09 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1350128522 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:46:09 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:46:09 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:46:09 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 11:46:09 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:46:09 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:46:09 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cca14a8]
2024-10-31 11:46:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:46:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:46:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:46:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:47:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:47:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:47:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:47:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:48:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:48:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:48:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:48:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:49:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:49:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:49:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:49:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:50:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:50:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:50:15 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:50:15 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@152a352] was not registered for synchronization because synchronization is not active
2024-10-31 11:50:15 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:50:15 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@506079881 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:50:15 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 11:50:15 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 11:50:15 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 11:50:15 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 11:50:15 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 11:50:15 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@152a352]
2024-10-31 11:50:15 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:50:15 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dfcbf0f] was not registered for synchronization because synchronization is not active
2024-10-31 11:50:15 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:50:15 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@933251006 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:50:15 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 11:50:15 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 11:50:15 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 11:50:15 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 11:50:15 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 11:50:15 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dfcbf0f]
2024-10-31 11:50:15 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:50:15 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ed6c96] was not registered for synchronization because synchronization is not active
2024-10-31 11:50:15 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:50:15 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1478108315 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:50:15 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 11:50:15 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 11:50:15 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 17 msec}
2024-10-31 11:50:15 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 11:50:15 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 11:50:15 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ed6c96]
2024-10-31 11:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eae710e] was not registered for synchronization because synchronization is not active
2024-10-31 11:50:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:50:17 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@39073153 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:50:17 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:50:17 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 29(Integer)
2024-10-31 11:50:17 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 29
 {executed in 1 msec}
2024-10-31 11:50:17 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                    |body                                 |nickname |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요? |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|

2024-10-31 11:50:17 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eae710e]
2024-10-31 11:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62997446] was not registered for synchronization because synchronization is not active
2024-10-31 11:50:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:50:17 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1133346672 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:50:17 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:50:17 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 28(Integer)
2024-10-31 11:50:17 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 28
 {executed in 1 msec}
2024-10-31 11:50:17 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|-------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                       |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|-------------------------------------------|---------|
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|-------------------------------------------|---------|

2024-10-31 11:50:17 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:50:17 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62997446]
2024-10-31 11:50:18 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 11:50:18 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@554a6038] was not registered for synchronization because synchronization is not active
2024-10-31 11:50:18 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 11:50:18 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@268604924 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6] will not be managed by Spring
2024-10-31 11:50:18 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 11:50:18 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 21(Integer)
2024-10-31 11:50:18 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 21
 {executed in 0 msec}
2024-10-31 11:50:18 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------|---------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title              |body                                               |nickname |
|---|--------------------|--------------------|---------|--------|-------------------|---------------------------------------------------|---------|
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요? |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------|---------------------------------------------------|---------|

2024-10-31 11:50:18 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 11:50:18 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@554a6038]
2024-10-31 11:50:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:50:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:51:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:51:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:51:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:51:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:51:44 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3fe8739d: (connection has passed maxLifetime)
2024-10-31 11:51:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@56c2be61
2024-10-31 11:51:48 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3ca260b3: (connection has passed maxLifetime)
2024-10-31 11:51:48 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@17ffb45a
2024-10-31 11:51:50 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a6822b6: (connection has passed maxLifetime)
2024-10-31 11:51:50 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@26a2230a
2024-10-31 11:52:06 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7ed579a6: (connection has passed maxLifetime)
2024-10-31 11:52:06 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3c827a37
2024-10-31 11:52:07 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7d9f6a88: (connection has passed maxLifetime)
2024-10-31 11:52:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7dbf700c
2024-10-31 11:52:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:52:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:52:26 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6c8bf982: (connection has passed maxLifetime)
2024-10-31 11:52:26 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@59894faf
2024-10-31 11:52:26 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Add connection elided, waiting=0, adders pending/running=1
2024-10-31 11:52:38 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7f5c683: (connection has passed maxLifetime)
2024-10-31 11:52:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@25851492
2024-10-31 11:52:39 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1967491b: (connection has passed maxLifetime)
2024-10-31 11:52:39 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@64b81ea9
2024-10-31 11:52:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:52:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:52:51 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@585a4320: (connection has passed maxLifetime)
2024-10-31 11:52:52 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@694dfed3
2024-10-31 11:52:55 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a90695: (connection has passed maxLifetime)
2024-10-31 11:52:55 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2870f4e8
2024-10-31 11:53:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:53:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:53:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:53:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:54:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:54:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:54:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:54:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:55:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:55:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:55:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:55:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:56:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:56:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:56:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:56:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:57:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:57:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:57:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:57:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:58:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:58:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:58:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:58:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:59:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:59:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 11:59:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 11:59:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:00:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:00:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:00:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:00:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:01:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:01:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:01:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:01:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:02:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:02:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:02:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:02:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:03:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:03:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:03:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:03:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:04:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:04:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:04:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:04:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:05:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:05:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:05:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:05:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:06:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:06:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:06:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:06:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:07:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:07:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:07:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:07:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:08:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:08:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:08:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:08:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:09:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:09:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:09:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:09:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:10:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:10:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:10:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:10:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:11:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:11:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:11:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:11:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:12:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:12:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:12:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:12:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:13:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:13:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:13:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:13:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:14:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:14:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:14:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:14:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:15:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:15:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:15:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:15:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:16:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:16:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:16:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:16:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:17:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:17:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:17:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:17:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:18:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:18:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:18:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:18:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:19:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:19:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:19:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:19:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:20:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:20:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:20:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:20:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:21:01 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@56c2be61: (connection has passed maxLifetime)
2024-10-31 12:21:01 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@a27fa47
2024-10-31 12:21:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:21:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:21:17 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@26a2230a: (connection has passed maxLifetime)
2024-10-31 12:21:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2396b3b9
2024-10-31 12:21:32 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@17ffb45a: (connection has passed maxLifetime)
2024-10-31 12:21:32 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1e01167f
2024-10-31 12:21:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:21:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:22:00 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7dbf700c: (connection has passed maxLifetime)
2024-10-31 12:22:00 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@561468db
2024-10-31 12:22:01 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3c827a37: (connection has passed maxLifetime)
2024-10-31 12:22:01 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@172962e0
2024-10-31 12:22:08 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@64b81ea9: (connection has passed maxLifetime)
2024-10-31 12:22:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3df45be8
2024-10-31 12:22:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:22:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:22:15 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@59894faf: (connection has passed maxLifetime)
2024-10-31 12:22:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@8ef0d72
2024-10-31 12:22:19 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@25851492: (connection has passed maxLifetime)
2024-10-31 12:22:19 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@49d20749
2024-10-31 12:22:27 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@694dfed3: (connection has passed maxLifetime)
2024-10-31 12:22:27 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1c987d0f
2024-10-31 12:22:39 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2870f4e8: (connection has passed maxLifetime)
2024-10-31 12:22:39 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@12d6d92b
2024-10-31 12:22:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:22:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:23:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:23:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:23:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:23:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:24:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:24:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:24:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:24:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:25:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:25:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:25:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:25:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:26:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:26:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:26:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:26:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:27:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:27:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:27:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:27:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:28:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:28:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:28:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:28:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:29:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:29:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:29:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:29:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:30:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:30:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:30:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:30:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:31:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:31:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:31:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:31:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:32:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:32:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:32:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:32:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:33:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:33:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:33:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:33:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:34:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:34:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:34:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:34:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:35:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:35:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:35:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:35:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:36:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:36:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:36:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:36:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:37:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:37:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:37:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:37:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:38:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:38:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:38:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:38:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:39:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:39:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:39:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:39:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:40:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:40:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:40:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:40:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:41:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:41:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:41:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:41:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:42:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:42:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:42:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:42:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:43:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:43:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:43:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:43:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:44:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:44:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:44:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:44:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:45:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:45:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:45:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:45:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:46:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:46:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:46:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:46:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:47:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:47:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:47:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:47:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:48:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:48:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:48:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:48:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:49:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:49:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:49:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:49:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:50:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:50:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:50:27 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@a27fa47: (connection has passed maxLifetime)
2024-10-31 12:50:27 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@561039ae
2024-10-31 12:50:34 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2396b3b9: (connection has passed maxLifetime)
2024-10-31 12:50:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@55952b50
2024-10-31 12:50:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:50:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:51:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:51:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:51:18 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@561468db: (connection has passed maxLifetime)
2024-10-31 12:51:18 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@66abfdd9
2024-10-31 12:51:26 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1e01167f: (connection has passed maxLifetime)
2024-10-31 12:51:26 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7f56079f
2024-10-31 12:51:42 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@49d20749: (connection has passed maxLifetime)
2024-10-31 12:51:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@51d6732e
2024-10-31 12:51:43 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@172962e0: (connection has passed maxLifetime)
2024-10-31 12:51:43 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@10eb7915
2024-10-31 12:51:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:51:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:51:44 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3df45be8: (connection has passed maxLifetime)
2024-10-31 12:51:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@21b1ed8c
2024-10-31 12:51:55 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@8ef0d72: (connection has passed maxLifetime)
2024-10-31 12:51:55 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@108a2b79
2024-10-31 12:52:08 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1c987d0f: (connection has passed maxLifetime)
2024-10-31 12:52:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@51187d5
2024-10-31 12:52:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:52:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:52:19 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@12d6d92b: (connection has passed maxLifetime)
2024-10-31 12:52:19 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@471564d
2024-10-31 12:52:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:52:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:53:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:53:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:53:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:53:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:54:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:54:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:54:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:54:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:55:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:55:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:55:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:55:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:56:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:56:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:56:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:56:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:57:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:57:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:57:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:57:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:58:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:58:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:58:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:58:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:59:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:59:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 12:59:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 12:59:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:00:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:00:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:00:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:00:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:01:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:01:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:01:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:01:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:02:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:02:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:02:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:02:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:03:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:03:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:03:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:03:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:04:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:04:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:04:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:04:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:05:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:05:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:05:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:05:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:06:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:06:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:06:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:06:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:06:50 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 13:06:50 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77cfd026] was not registered for synchronization because synchronization is not active
2024-10-31 13:06:50 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 13:06:50 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@836058099 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@561039ae] will not be managed by Spring
2024-10-31 13:06:50 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 13:06:50 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 1(Integer)
2024-10-31 13:06:50 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT *
FROM board
WHERE id = 1
AND delStatus = 0
 {executed in 0 msec}
2024-10-31 13:06:50 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-------|-----|----------|--------|
|id |regdate             |updatedate          |code   |name |delstatus |deldate |
|---|--------------------|--------------------|-------|-----|----------|--------|
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |NOTICE |공지사항 |false     |null    |
|---|--------------------|--------------------|-------|-----|----------|--------|

2024-10-31 13:06:50 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 13:06:50 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77cfd026]
2024-10-31 13:06:50 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 13:06:50 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35bf0c9d] was not registered for synchronization because synchronization is not active
2024-10-31 13:06:50 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 13:06:50 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@505739479 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@561039ae] will not be managed by Spring
2024-10-31 13:06:50 [DEBUG] c.e.d.r.A.getArticleCount - ==>  Preparing: SELECT COUNT(*), A.*, M.nickname AS extra__writer FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id WHERE 1 AND A.boardId = ? ORDER BY A.id DESC;
2024-10-31 13:06:50 [DEBUG] c.e.d.r.A.getArticleCount - ==> Parameters: 1(Integer)
2024-10-31 13:06:50 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT COUNT(*), A.*,  M.nickname AS extra__writer
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	WHERE 1

		AND A.boardId = 1

	ORDER BY A.id DESC;
 {executed in 1 msec}
2024-10-31 13:06:50 [INFO ] jdbc.resultsettable - 
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|count(*) |id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|
|3        |1  |2024-09-07T22:42:47 |2024-09-07T22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |
|---------|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|

2024-10-31 13:06:50 [DEBUG] c.e.d.r.A.getArticleCount - <==      Total: 1
2024-10-31 13:06:50 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35bf0c9d]
2024-10-31 13:06:50 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 13:06:50 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cd1fc02] was not registered for synchronization because synchronization is not active
2024-10-31 13:06:50 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 13:06:50 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1538330368 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@561039ae] will not be managed by Spring
2024-10-31 13:06:50 [DEBUG] c.e.d.r.A.getForPrintArticles - ==>  Preparing: SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount FROM article AS A INNER JOIN `member` AS M ON A.memberId = M.id LEFT JOIN `reply` AS R ON A.id = R.relId WHERE 1 AND boardId = ? GROUP BY A.id ORDER BY A.id DESC LIMIT ?, ?
2024-10-31 13:06:50 [DEBUG] c.e.d.r.A.getForPrintArticles - ==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2024-10-31 13:06:50 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS extra__repliesCount
	FROM article AS A
	INNER JOIN `member` AS M
	ON A.memberId = M.id
	LEFT JOIN `reply` AS R
	ON A.id = R.relId
	WHERE 1

		AND boardId = 1

	GROUP BY A.id
	ORDER BY A.id DESC

		LIMIT 0, 10
 {executed in 16 msec}
2024-10-31 13:06:50 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|id |regdate             |updatedate          |memberid |boardid |title |body |hitcount |goodreactionpoint |badreactionpoint |nickname |extra__repliescount |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|
|9  |2024-09-09 23:08:49 |2024-09-09 23:08:49 |2        |1       |sdf   |sdf  |0        |0                 |0                |회원1_닉네임  |0                   |
|2  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목2   |내용2  |0        |1                 |1                |회원1_닉네임  |1                   |
|1  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |2        |1       |제목1   |내용1  |0        |1                 |2                |회원1_닉네임  |3                   |
|---|--------------------|--------------------|---------|--------|------|-----|---------|------------------|-----------------|---------|--------------------|

2024-10-31 13:06:50 [DEBUG] c.e.d.r.A.getForPrintArticles - <==      Total: 3
2024-10-31 13:06:50 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cd1fc02]
2024-10-31 13:06:52 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 13:06:52 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20122d01] was not registered for synchronization because synchronization is not active
2024-10-31 13:06:52 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 13:06:52 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1060806686 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@561039ae] will not be managed by Spring
2024-10-31 13:06:52 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 13:06:52 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 13:06:52 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 13:06:52 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 13:06:52 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 13:06:52 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20122d01]
2024-10-31 13:07:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 13:07:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73cf8c1c] was not registered for synchronization because synchronization is not active
2024-10-31 13:07:03 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 13:07:03 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@728368101 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@561039ae] will not be managed by Spring
2024-10-31 13:07:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==>  Preparing: SELECT * FROM board WHERE id = ? AND delStatus = 0
2024-10-31 13:07:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - ==> Parameters: 4(Integer)
2024-10-31 13:07:03 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT *
FROM board
WHERE id = 4
AND delStatus = 0
 {executed in 1 msec}
2024-10-31 13:07:03 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|-----|-------|----------|--------|
|id |regdate             |updatedate          |code |name   |delstatus |deldate |
|---|--------------------|--------------------|-----|-------|----------|--------|
|4  |2024-09-07 22:42:47 |2024-09-07 22:42:47 |FAQ  |자주묻는질문 |false     |null    |
|---|--------------------|--------------------|-----|-------|----------|--------|

2024-10-31 13:07:03 [DEBUG] c.e.d.r.BoardRepository.getBoardById - <==      Total: 1
2024-10-31 13:07:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73cf8c1c]
2024-10-31 13:07:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 13:07:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40183e08] was not registered for synchronization because synchronization is not active
2024-10-31 13:07:03 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 13:07:03 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@795640161 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@561039ae] will not be managed by Spring
2024-10-31 13:07:03 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==>  Preparing: SELECT COUNT(*) FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') OR F.`body` LIKE CONCAT('%', ?, '%')
2024-10-31 13:07:03 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - ==> Parameters: 4(Integer), 회원(String), 회원(String)
2024-10-31 13:07:03 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT COUNT(*)
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

                AND F.title LIKE CONCAT('%', '회원', '%')
                OR F.`body` LIKE CONCAT('%', '회원', '%')
 {executed in 1 msec}
2024-10-31 13:07:03 [INFO ] jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|11       |
|---------|

2024-10-31 13:07:03 [DEBUG] c.e.d.r.FaqRepository.getFaqsCount - <==      Total: 1
2024-10-31 13:07:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40183e08]
2024-10-31 13:07:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 13:07:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4380ea8] was not registered for synchronization because synchronization is not active
2024-10-31 13:07:03 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 13:07:03 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@137109281 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@561039ae] will not be managed by Spring
2024-10-31 13:07:03 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE 1 AND F.boardId = ? AND F.title LIKE CONCAT('%', ?, '%') ORDER BY F.id DESC LIMIT ?, ?
2024-10-31 13:07:03 [DEBUG] c.e.d.r.F.getForPrintFaqs - ==> Parameters: 4(Integer), 회원(String), 0(Integer), 10(Integer)
2024-10-31 13:07:03 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT F.*, M.nickname AS extra__writer
    FROM faq AS F
    INNER JOIN `member` AS M
    ON F.memberId = M.id
    WHERE 1

        AND F.boardId = 4

        AND F.title LIKE CONCAT('%', '회원', '%')  

    ORDER BY F.id DESC

        LIMIT 0, 10
 {executed in 14 msec}
2024-10-31 13:07:03 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                                                |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요?     |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다.                                |관리자      |
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다.                          |관리자      |
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요?           |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다.                  |관리자      |
|18 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급에 따른 혜택은 어떻게 받나요?       |회원 등급에 따라 제공되는 혜택은 자동으로 적용되며, 필요한 경우 쿠폰함에서 다운로드할 수 있습니다.            |관리자      |
|15 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원이 되면 어떤 혜택이 있나요?           |회원이 되면 다양한 이벤트 참여와 혜택을 받을 수 있으며, 게시판 사용이 가능합니다.                     |관리자      |
|14 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 포인트는 어떻게 적립되나요?           |구매, 리뷰 작성, 이벤트 참여 등을 통해 포인트가 적립되며, 쇼핑 시 사용할 수 있습니다.                 |관리자      |
|12 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 혜택은 무엇인가요?                |회원 등급에 따라 할인 쿠폰, 적립금, 무료 배송 등의 혜택이 제공됩니다.                           |관리자      |
|11 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 등급은 어떻게 구분되나요?            |회원 등급은 일반 회원, 실버 회원, 골드 회원 등으로 나뉘며, 활동 점수에 따라 승급됩니다.                |관리자      |
|5  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 정보를 수정하려면 어떻게 해야 하나요?     |로그인 후 "내 정보" 페이지로 이동하여 수정할 정보를 입력하고 저장 버튼을 클릭하면 됩니다.                |관리자      |
|2  |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴를 원할 때 어떻게 해야 하나요?      |내 정보 페이지에서 "회원 탈퇴" 버튼을 클릭하고 절차에 따라 탈퇴 신청을 완료합니다. 탈퇴 후 모든 정보는 삭제됩니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|--------------------------------------------------------------------|---------|

2024-10-31 13:07:03 [DEBUG] c.e.d.r.F.getForPrintFaqs - <==      Total: 10
2024-10-31 13:07:03 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4380ea8]
2024-10-31 13:07:05 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 13:07:05 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@83e53f3] was not registered for synchronization because synchronization is not active
2024-10-31 13:07:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 13:07:05 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@709659142 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@561039ae] will not be managed by Spring
2024-10-31 13:07:05 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 13:07:05 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 28(Integer)
2024-10-31 13:07:05 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 28
 {executed in 1 msec}
2024-10-31 13:07:05 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-----------------------------|-------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                        |body                                       |nickname |
|---|--------------------|--------------------|---------|--------|-----------------------------|-------------------------------------------|---------|
|28 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 전용 이벤트에 참여하려면 어떻게 해야 하나요? |로그인 후 이벤트 페이지로 이동하여 회원 전용 이벤트에 참여할 수 있습니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-----------------------------|-------------------------------------------|---------|

2024-10-31 13:07:05 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 13:07:05 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@83e53f3]
2024-10-31 13:07:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:07:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:07:29 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 13:07:29 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61f8e27e] was not registered for synchronization because synchronization is not active
2024-10-31 13:07:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 13:07:29 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@1006157277 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@561039ae] will not be managed by Spring
2024-10-31 13:07:29 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 13:07:29 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 21(Integer)
2024-10-31 13:07:29 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 21
 {executed in 1 msec}
2024-10-31 13:07:29 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------|---------------------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title              |body                                               |nickname |
|---|--------------------|--------------------|---------|--------|-------------------|---------------------------------------------------|---------|
|21 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 후 복구가 가능한가요? |회원 탈퇴 후에는 계정 복구가 불가능하며, 모든 정보가 삭제됩니다. 새로 가입해야 합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------|---------------------------------------------------|---------|

2024-10-31 13:07:29 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 13:07:29 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61f8e27e]
2024-10-31 13:07:29 [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2024-10-31 13:07:29 [DEBUG] org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b85dea1] was not registered for synchronization because synchronization is not active
2024-10-31 13:07:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Fetching JDBC Connection from DataSource
2024-10-31 13:07:29 [DEBUG] o.m.s.t.SpringManagedTransaction - JDBC Connection [HikariProxyConnection@404833991 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@561039ae] will not be managed by Spring
2024-10-31 13:07:29 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==>  Preparing: SELECT F.*, M.nickname AS extra__writer FROM faq AS F INNER JOIN `member` AS M ON F.memberId = M.id WHERE F.id = ?
2024-10-31 13:07:29 [DEBUG] c.e.d.r.FaqRepository.getFaqById - ==> Parameters: 29(Integer)
2024-10-31 13:07:29 [DEBUG] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT F.*, M.nickname AS extra__writer
FROM faq AS F
INNER JOIN `member` AS M
ON F.memberId = M.id
WHERE F.id = 29
 {executed in 0 msec}
2024-10-31 13:07:29 [INFO ] jdbc.resultsettable - 
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|id |regdate             |updatedate          |memberid |boardid |title                    |body                                 |nickname |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|
|29 |2024-09-07 23:50:45 |2024-09-07 23:50:45 |1        |4       |회원 탈퇴 시 남은 포인트는 어떻게 되나요? |회원 탈퇴 시 남은 포인트는 모두 소멸되며, 복구가 불가능합니다. |관리자      |
|---|--------------------|--------------------|---------|--------|-------------------------|-------------------------------------|---------|

2024-10-31 13:07:29 [DEBUG] c.e.d.r.FaqRepository.getFaqById - <==      Total: 1
2024-10-31 13:07:29 [DEBUG] org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b85dea1]
2024-10-31 13:07:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:07:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:08:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:08:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:08:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:08:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:09:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:09:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:09:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:09:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:10:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:10:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:10:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:10:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:11:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:11:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:11:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:11:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:12:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:12:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:12:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:12:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:13:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:13:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:13:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:13:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:14:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:14:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:14:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:14:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:15:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:15:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:15:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:15:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:16:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:16:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:16:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:16:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:17:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:17:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:17:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:17:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:18:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:18:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:18:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:18:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:19:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:19:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:19:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:19:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:19:47 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@561039ae: (connection has passed maxLifetime)
2024-10-31 13:19:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@77faf02e
2024-10-31 13:19:57 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@55952b50: (connection has passed maxLifetime)
2024-10-31 13:19:57 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6af29656
2024-10-31 13:20:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:20:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:20:40 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@66abfdd9: (connection has passed maxLifetime)
2024-10-31 13:20:40 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@76ea71b5
2024-10-31 13:20:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:20:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:20:48 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7f56079f: (connection has passed maxLifetime)
2024-10-31 13:20:48 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@62912991
2024-10-31 13:20:58 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@51d6732e: (connection has passed maxLifetime)
2024-10-31 13:20:58 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@39ebb79
2024-10-31 13:21:00 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@21b1ed8c: (connection has passed maxLifetime)
2024-10-31 13:21:00 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@42a3b142
2024-10-31 13:21:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:21:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:21:19 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@108a2b79: (connection has passed maxLifetime)
2024-10-31 13:21:19 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@48ce269f
2024-10-31 13:21:40 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@10eb7915: (connection has passed maxLifetime)
2024-10-31 13:21:40 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@cf5f9f4
2024-10-31 13:21:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:21:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:21:55 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@51187d5: (connection has passed maxLifetime)
2024-10-31 13:21:55 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7e86f0b7
2024-10-31 13:21:57 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@471564d: (connection has passed maxLifetime)
2024-10-31 13:21:57 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3fbbfa8c
2024-10-31 13:22:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:22:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:22:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:22:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:23:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:23:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:23:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:23:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:24:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:24:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:24:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:24:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:25:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:25:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:25:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:25:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:26:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:26:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:26:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:26:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:27:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:27:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:27:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:27:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:28:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:28:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:28:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:28:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:29:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:29:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:29:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:29:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:30:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:30:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:30:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:30:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:31:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:31:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:31:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:31:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:32:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:32:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:32:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:32:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:33:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:33:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:33:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:33:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:34:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:34:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:34:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:34:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:35:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:35:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:35:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:35:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:36:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:36:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:36:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:36:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:37:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:37:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:37:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:37:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:38:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:38:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:38:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:38:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:39:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:39:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:39:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:39:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:40:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:40:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:40:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:40:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:41:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:41:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:41:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:41:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:42:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:42:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:42:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:42:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:43:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:43:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:43:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:43:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:44:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:44:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:44:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:44:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:45:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:45:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:45:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:45:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:46:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:46:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:46:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:46:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:47:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:47:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:47:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:47:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:48:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:48:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:48:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:48:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:49:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:49:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:49:21 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@77faf02e: (connection has passed maxLifetime)
2024-10-31 13:49:21 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3febc7e1
2024-10-31 13:49:44 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6af29656: (connection has passed maxLifetime)
2024-10-31 13:49:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@22a11db5
2024-10-31 13:49:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:49:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:50:03 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@76ea71b5: (connection has passed maxLifetime)
2024-10-31 13:50:03 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@311c310a
2024-10-31 13:50:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:50:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:50:18 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@62912991: (connection has passed maxLifetime)
2024-10-31 13:50:18 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4ebb9289
2024-10-31 13:50:39 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@48ce269f: (connection has passed maxLifetime)
2024-10-31 13:50:40 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@28645bf2
2024-10-31 13:50:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:50:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:50:46 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@42a3b142: (connection has passed maxLifetime)
2024-10-31 13:50:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5f3c9808
2024-10-31 13:50:53 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@39ebb79: (connection has passed maxLifetime)
2024-10-31 13:50:53 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7679468b
2024-10-31 13:50:58 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@cf5f9f4: (connection has passed maxLifetime)
2024-10-31 13:50:58 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@37444cb0
2024-10-31 13:51:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:51:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:51:17 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3fbbfa8c: (connection has passed maxLifetime)
2024-10-31 13:51:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@31a7300c
2024-10-31 13:51:21 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7e86f0b7: (connection has passed maxLifetime)
2024-10-31 13:51:21 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@709a3a37
2024-10-31 13:51:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:51:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:52:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:52:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:52:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:52:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:53:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:53:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:53:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:53:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:54:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:54:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:54:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:54:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:55:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:55:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:55:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:55:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:56:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:56:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:56:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:56:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:57:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:57:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:57:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:57:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:58:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:58:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:58:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:58:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:59:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:59:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 13:59:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 13:59:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:00:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:00:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:00:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:00:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:01:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:01:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:01:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:01:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:02:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:02:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:02:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:02:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:03:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:03:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:03:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:03:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:04:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:04:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:04:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:04:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:05:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:05:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:05:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:05:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:06:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:06:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:06:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:06:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:07:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:07:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:07:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:07:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:08:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:08:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:08:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:08:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:09:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:09:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:09:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:09:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:10:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:10:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:10:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:10:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:11:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:11:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:11:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:11:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:12:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:12:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:12:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:12:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:13:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:13:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:13:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:13:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:14:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:14:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:14:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:14:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:15:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:15:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:15:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:15:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:16:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:16:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:16:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:16:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:17:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:17:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:17:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:17:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:18:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:18:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:18:40 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3febc7e1: (connection has passed maxLifetime)
2024-10-31 14:18:40 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@243c1c72
2024-10-31 14:18:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:18:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:19:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:19:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:19:34 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@22a11db5: (connection has passed maxLifetime)
2024-10-31 14:19:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@785d6ff
2024-10-31 14:19:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:19:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:19:53 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@311c310a: (connection has passed maxLifetime)
2024-10-31 14:19:53 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4c319507
2024-10-31 14:20:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:20:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:20:17 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4ebb9289: (connection has passed maxLifetime)
2024-10-31 14:20:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1e636e59
2024-10-31 14:20:23 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5f3c9808: (connection has passed maxLifetime)
2024-10-31 14:20:23 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@79c235b2
2024-10-31 14:20:23 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7679468b: (connection has passed maxLifetime)
2024-10-31 14:20:23 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@38ff3f89
2024-10-31 14:20:30 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@28645bf2: (connection has passed maxLifetime)
2024-10-31 14:20:30 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@65dac35
2024-10-31 14:20:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:20:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:20:46 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@709a3a37: (connection has passed maxLifetime)
2024-10-31 14:20:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@54407357
2024-10-31 14:20:51 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@37444cb0: (connection has passed maxLifetime)
2024-10-31 14:20:51 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@157d796c
2024-10-31 14:21:08 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@31a7300c: (connection has passed maxLifetime)
2024-10-31 14:21:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2a4537ee
2024-10-31 14:21:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:21:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:21:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:21:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:22:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:22:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:22:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:22:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:23:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:23:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:23:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:23:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:24:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:24:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:24:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:24:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:25:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:25:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:25:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:25:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:26:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:26:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:26:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:26:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:27:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:27:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:27:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:27:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:28:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:28:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:28:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:28:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:29:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:29:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:29:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:29:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:30:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:30:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:30:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:30:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:31:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:31:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:31:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:31:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:32:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:32:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:32:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:32:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:33:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:33:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:33:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:33:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:34:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:34:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:34:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:34:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:35:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:35:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:35:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:35:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:36:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:36:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:36:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:36:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:37:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:37:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:37:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:37:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:38:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:38:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:38:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:38:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:39:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:39:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:39:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:39:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:40:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:40:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:40:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:40:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:41:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:41:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:41:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:41:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:42:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:42:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:42:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:42:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:43:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:43:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:43:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:43:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:44:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:44:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:44:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:44:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:45:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:45:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:45:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:45:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:46:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:46:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:46:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:46:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:47:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:47:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:47:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:47:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:48:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:48:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:48:39 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@243c1c72: (connection has passed maxLifetime)
2024-10-31 14:48:39 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@727b6925
2024-10-31 14:48:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:48:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:49:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:49:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:49:30 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@785d6ff: (connection has passed maxLifetime)
2024-10-31 14:49:30 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2c98d6f7
2024-10-31 14:49:33 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4c319507: (connection has passed maxLifetime)
2024-10-31 14:49:33 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6da5dccc
2024-10-31 14:49:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:49:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:49:58 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@79c235b2: (connection has passed maxLifetime)
2024-10-31 14:49:58 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@77d7af75
2024-10-31 14:50:03 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@65dac35: (connection has passed maxLifetime)
2024-10-31 14:50:03 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7c9f1db4
2024-10-31 14:50:05 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@38ff3f89: (connection has passed maxLifetime)
2024-10-31 14:50:05 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3da2178f
2024-10-31 14:50:08 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1e636e59: (connection has passed maxLifetime)
2024-10-31 14:50:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@c556f2c
2024-10-31 14:50:09 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@54407357: (connection has passed maxLifetime)
2024-10-31 14:50:09 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5d8de8c0
2024-10-31 14:50:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:50:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:50:33 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@157d796c: (connection has passed maxLifetime)
2024-10-31 14:50:33 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2e63089c
2024-10-31 14:50:39 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2a4537ee: (connection has passed maxLifetime)
2024-10-31 14:50:39 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@37131008
2024-10-31 14:50:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:50:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:51:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:51:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:51:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:51:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:52:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:52:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:52:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:52:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:53:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:53:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:53:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:53:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:54:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:54:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:54:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:54:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:55:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:55:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:55:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:55:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:56:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:56:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:56:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:56:45 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:57:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:57:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:57:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:57:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:58:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:58:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:58:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:58:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:59:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:59:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 14:59:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 14:59:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:00:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:00:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:00:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:00:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:01:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:01:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:01:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:01:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:02:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:02:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:02:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:02:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:03:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:03:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:03:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:03:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:04:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:04:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:04:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:04:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:05:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:05:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:05:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:05:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:06:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:06:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:06:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:06:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:07:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:07:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:07:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:07:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:08:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:08:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:08:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:08:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:09:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:09:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:09:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:09:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:10:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:10:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:10:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:10:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:11:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:11:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:11:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:11:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:12:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:12:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:12:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:12:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:13:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:13:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:13:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:13:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:14:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:14:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:14:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:14:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:15:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:15:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:15:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:15:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:16:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:16:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:16:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:16:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:17:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:17:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:17:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:17:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:18:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:18:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:18:32 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@727b6925: (connection has passed maxLifetime)
2024-10-31 15:18:32 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@35f9e6b4
2024-10-31 15:18:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:18:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:19:00 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6da5dccc: (connection has passed maxLifetime)
2024-10-31 15:19:00 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7d329883
2024-10-31 15:19:06 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2c98d6f7: (connection has passed maxLifetime)
2024-10-31 15:19:06 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@d2aafe2
2024-10-31 15:19:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:19:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:19:36 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@77d7af75: (connection has passed maxLifetime)
2024-10-31 15:19:36 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@42329e3f
2024-10-31 15:19:39 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7c9f1db4: (connection has passed maxLifetime)
2024-10-31 15:19:39 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@30f9404
2024-10-31 15:19:40 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@c556f2c: (connection has passed maxLifetime)
2024-10-31 15:19:40 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@32c67786
2024-10-31 15:19:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:19:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:19:47 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3da2178f: (connection has passed maxLifetime)
2024-10-31 15:19:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@e2548c9
2024-10-31 15:20:03 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5d8de8c0: (connection has passed maxLifetime)
2024-10-31 15:20:03 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@686cf80d
2024-10-31 15:20:08 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2e63089c: (connection has passed maxLifetime)
2024-10-31 15:20:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2951f236
2024-10-31 15:20:08 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@37131008: (connection has passed maxLifetime)
2024-10-31 15:20:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@18b27d91
2024-10-31 15:20:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:20:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:20:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:20:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:21:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:21:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:21:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:21:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:22:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:22:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:22:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:22:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:23:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:23:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:23:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:23:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:24:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:24:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:24:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:24:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:25:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:25:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:25:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:25:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:26:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:26:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:26:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:26:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:27:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:27:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:27:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:27:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:28:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:28:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:28:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:28:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:29:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:29:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:29:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:29:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:30:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:30:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:30:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:30:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:31:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:31:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:31:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:31:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:32:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:32:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:32:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:32:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:33:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:33:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:33:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:33:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:34:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:34:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:34:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:34:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:35:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:35:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:35:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:35:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:36:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:36:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:36:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:36:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:37:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:37:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:37:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:37:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:38:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:38:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:38:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:38:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:39:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:39:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:39:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:39:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:40:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:40:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:40:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:40:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:41:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:41:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:41:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:41:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:42:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:42:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:42:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:42:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:43:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:43:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:43:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:43:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:44:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:44:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:44:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:44:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:45:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:45:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:45:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:45:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:46:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:46:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:46:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:46:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:47:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:47:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:47:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:47:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:48:03 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@35f9e6b4: (connection has passed maxLifetime)
2024-10-31 15:48:03 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7375685b
2024-10-31 15:48:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:48:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:48:34 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7d329883: (connection has passed maxLifetime)
2024-10-31 15:48:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@380c9d4f
2024-10-31 15:48:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:48:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:48:52 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@d2aafe2: (connection has passed maxLifetime)
2024-10-31 15:48:52 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a906bbd
2024-10-31 15:48:58 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@32c67786: (connection has passed maxLifetime)
2024-10-31 15:48:58 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@29c66513
2024-10-31 15:49:06 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@42329e3f: (connection has passed maxLifetime)
2024-10-31 15:49:06 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@79efb14d
2024-10-31 15:49:13 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@30f9404: (connection has passed maxLifetime)
2024-10-31 15:49:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4a0801e
2024-10-31 15:49:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:49:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:49:26 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@e2548c9: (connection has passed maxLifetime)
2024-10-31 15:49:26 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2c9ed0a7
2024-10-31 15:49:37 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@686cf80d: (connection has passed maxLifetime)
2024-10-31 15:49:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@d8aff54
2024-10-31 15:49:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:49:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:49:49 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@18b27d91: (connection has passed maxLifetime)
2024-10-31 15:49:49 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7756b584
2024-10-31 15:50:02 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2951f236: (connection has passed maxLifetime)
2024-10-31 15:50:02 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@55f0982a
2024-10-31 15:50:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:50:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:50:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:50:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:51:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:51:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:51:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:51:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:52:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:52:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:52:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:52:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:53:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:53:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:53:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:53:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:54:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:54:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:54:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:54:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:55:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:55:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:55:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:55:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:56:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:56:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:56:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:56:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:57:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:57:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:57:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:57:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:58:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:58:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:58:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:58:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:59:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:59:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 15:59:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 15:59:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:00:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:00:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:00:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:00:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:01:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:01:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:01:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:01:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:02:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:02:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:02:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:02:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:03:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:03:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:03:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:03:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:04:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:04:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:04:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:04:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:05:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:05:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:05:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:05:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:06:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:06:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:06:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:06:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:07:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:07:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:07:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:07:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:08:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:08:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:08:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:08:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:09:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:09:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:09:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:09:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:10:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:10:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:10:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:10:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:11:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:11:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:11:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:11:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:12:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:12:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:12:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:12:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:13:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:13:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:13:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:13:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:14:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:14:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:14:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:14:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:15:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:15:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:15:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:15:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:16:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:16:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:16:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:16:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:17:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:17:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:17:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:17:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:17:52 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7375685b: (connection has passed maxLifetime)
2024-10-31 16:17:52 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@443a920e
2024-10-31 16:18:08 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@380c9d4f: (connection has passed maxLifetime)
2024-10-31 16:18:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1b4b4add
2024-10-31 16:18:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:18:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:18:18 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6a906bbd: (connection has passed maxLifetime)
2024-10-31 16:18:18 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@36d8476b
2024-10-31 16:18:40 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4a0801e: (connection has passed maxLifetime)
2024-10-31 16:18:40 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@28b82fad
2024-10-31 16:18:44 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2c9ed0a7: (connection has passed maxLifetime)
2024-10-31 16:18:44 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@69852596
2024-10-31 16:18:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:18:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:18:51 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@29c66513: (connection has passed maxLifetime)
2024-10-31 16:18:51 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5699a435
2024-10-31 16:18:52 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@79efb14d: (connection has passed maxLifetime)
2024-10-31 16:18:52 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@17a4ae0e
2024-10-31 16:19:12 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7756b584: (connection has passed maxLifetime)
2024-10-31 16:19:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@79b1b943
2024-10-31 16:19:17 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@d8aff54: (connection has passed maxLifetime)
2024-10-31 16:19:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@388cb378
2024-10-31 16:19:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:19:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:19:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:19:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:19:58 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@55f0982a: (connection has passed maxLifetime)
2024-10-31 16:19:58 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5c4a9d76
2024-10-31 16:20:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:20:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:20:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:20:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:21:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:21:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:21:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:21:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:22:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:22:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:22:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:22:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:23:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:23:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:23:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:23:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:24:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:24:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:24:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:24:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:25:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:25:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:25:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:25:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:26:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:26:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:26:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:26:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:27:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:27:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:27:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:27:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:28:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:28:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:28:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:28:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:29:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:29:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:29:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:29:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:30:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:30:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:30:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:30:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:31:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:31:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:31:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:31:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:32:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:32:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:32:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:32:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:33:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:33:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:33:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:33:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:34:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:34:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:34:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:34:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:35:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:35:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:35:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:35:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:36:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:36:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:36:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:36:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:37:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:37:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:37:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:37:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:38:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:38:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:38:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:38:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:39:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:39:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:39:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:39:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:40:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:40:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:40:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:40:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:41:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:41:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:41:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:41:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:42:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:42:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:42:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:42:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:43:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:43:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:43:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:43:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:44:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:44:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:44:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:44:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:45:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:45:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:45:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:45:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:46:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:46:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:46:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:46:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:47:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:47:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:47:46 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1b4b4add: (connection has passed maxLifetime)
2024-10-31 16:47:46 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@31429f4b
2024-10-31 16:47:47 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@443a920e: (connection has passed maxLifetime)
2024-10-31 16:47:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@707f9570
2024-10-31 16:47:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:47:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:47:54 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@36d8476b: (connection has passed maxLifetime)
2024-10-31 16:47:54 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@66d7f11
2024-10-31 16:48:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:48:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:48:18 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@17a4ae0e: (connection has passed maxLifetime)
2024-10-31 16:48:18 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@9a0d24
2024-10-31 16:48:18 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@69852596: (connection has passed maxLifetime)
2024-10-31 16:48:18 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@41a7071f
2024-10-31 16:48:28 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5699a435: (connection has passed maxLifetime)
2024-10-31 16:48:28 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1641ad05
2024-10-31 16:48:31 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@28b82fad: (connection has passed maxLifetime)
2024-10-31 16:48:31 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@577ca73e
2024-10-31 16:48:35 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@388cb378: (connection has passed maxLifetime)
2024-10-31 16:48:35 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6661f3f6
2024-10-31 16:48:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:48:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:48:55 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@79b1b943: (connection has passed maxLifetime)
2024-10-31 16:48:55 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6bea0b8
2024-10-31 16:49:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:49:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:49:34 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5c4a9d76: (connection has passed maxLifetime)
2024-10-31 16:49:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@60622202
2024-10-31 16:49:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:49:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:50:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:50:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:50:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:50:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:51:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:51:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:51:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:51:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:52:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:52:17 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:52:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:52:47 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:54:07 [WARN ] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m28s691ms122µs900ns).
2024-10-31 16:54:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:54:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:54:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:54:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:55:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:55:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:55:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:55:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:56:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:56:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:56:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:56:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:57:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:57:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:57:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:57:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:58:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:58:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:58:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:58:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:59:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:59:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 16:59:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 16:59:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:00:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:00:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:00:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:00:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:01:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:01:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:01:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:01:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:02:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:02:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:02:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:02:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:03:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:03:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:03:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:03:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:04:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:04:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:04:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:04:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:05:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:05:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:05:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:05:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:06:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:06:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:06:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:06:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:07:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:07:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:07:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:07:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:08:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:08:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:08:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:08:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:09:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:09:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:09:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:09:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:10:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:10:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:10:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:10:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:11:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:11:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:11:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:11:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:12:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:12:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:12:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:12:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:13:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:13:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:13:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:13:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:14:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:14:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:14:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:14:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:15:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:15:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:15:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:15:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:16:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:16:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2024-10-31 17:16:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2024-10-31 17:16:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
